<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:myService="generated.webservices.*"  name="MyApple"
   showFlexChrome="false"     
   layout="absolute"
        verticalAlign="top"
        backgroundColor="white"
        creationComplete="init();"
          color="#000000"
           alpha="1.0"
            backgroundGradientAlphas="[0.0, 1.0]" 
            enabled="true" includeInLayout="true" 
            verticalScrollPolicy="off" 
            horizontalScrollPolicy="off" 
            width="674" height="499" 
            backgroundGradientColors="[#FF0000, #24FF00]">

  
 <mx:Style>
        Application 
        {
            /*make app window transparent*/
            background-color:""; 
            background-image:""; 
            padding: 0px;
            margin-top: 0;
            margin-right: 0;
            margin-bottom: 0;
            margin-left: 0;
        }    
    </mx:Style>
     
    
    <mx:Script>
        <![CDATA[
        	import mx.collections.ArrayCollection;
    import flash.media.Camera;
    import mx.controls.Alert;
    import mx.events.ListEvent;
    import mx.utils.ObjectUtil;
  	import flash.media.Video;
  	import mx.core.UIComponent; 	
  	import flash.display.Bitmap;
    import mx.events.CloseEvent;
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.utils.Timer;
    import flash.events.TimerEvent;
    import flash.events.ActivityEvent;
            import mx.rpc.xml.SimpleXMLEncoder;
            import mx.utils.ObjectUtil;
               import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;
            import mx.rpc.xml.SimpleXMLDecoder;
         	
 //	 public var videoHolder:UIComponent;

 //	 public var video:Video;

   //  private var camera:Camera;
   
    
		[Bindable]
	private var lcd:List = new List;
     
		[Bindable]
	private  var arr:Array = new Array();
 
 
		[Bindable]
	private  var arr2:Array = new Array();
	
		[Bindable]
	private var lcdb:Array = new Array();
	
		[Bindable]
	private var massiv:ArrayCollection = new ArrayCollection();
	
		[Bindable]
	private var xal:XMLList = new XMLList;
	
			[Bindable]
	private var lcdbx:XML = new XML;

      [Bindable]
  private  var xml:XML = objectToXML(lcdb);

   [Bindable]
   private var xmll:XML = new  XML;
   
   
 private function init():void {
            
 	lcd.dataProvider = Camera.names;
 	var counterGlobal:int = 0;
 	var counterLocal:int = 0;
	for (var i:int = 0; i < Camera.names.length; i++)
	{   
		lcd.selectedIndex = i;
    	arr = ObjectUtil.toString(Camera.getCamera(lcd.selectedIndex.toString())).split(/[\n=]/);
    	counterLocal = 0;
    	for (var st:int=0; st < arr.length; st++)
    		if (arr[st] != "")
    		{
    			lcdb[counterGlobal++] = arr[st];
    			arr2[counterLocal++] = arr[st];
    		}
 
    	massiv.addItem(arr2);
    
      }
    
      
      
    xml = objectToXML(lcdb);
  //              textArea1.text = ObjectUtil.toString(lcdb);
              
  // list1.dataProvider = lcdb;
    p1.status=lcdb.length.toString();
    for(var co:int; co < lcdb.length; co++){
   
    }

  
 //  list1.dataProvider = massiv;
  //   list2.dataProvider = massiv;
     
                }
           

         

            private function objectToXML(obj:Object):XML {
                var qName:QName = new QName("root");
                var xmlDocument:XMLDocument = new XMLDocument();
                var simpleXMLEncoder:SimpleXMLEncoder = new SimpleXMLEncoder(xmlDocument);
                var xmlNode:XMLNode = simpleXMLEncoder.encodeValue(obj, qName, xmlDocument);
                var xml:XML = new XML(xmlDocument.toString());
             
                return xml;
            }
               public function startMove(event:MouseEvent):void {
                   stage.nativeWindow.startMove();
             }	

            private function list_change(evt:ListEvent):void {
           
         //       var tList:List = evt.currentTarget as List;
          //      var cameraName:String = tList.selectedIndex.toString();
               
           //   videoHolder = new UIComponent();             
             //   camera = Camera.getCamera(cameraName);             
                  
             // video = new Video(cnvWebcam.width ,cnvWebcam.height);            
 	        //video.attachCamera(camera);                
 	        //videoHolder.addChild(video);
 	        //cnvWebcam.addChild(videoHolder);
 	         //camera.setMotionLevel(5, 1000);
 	   
            }

        ]]>
    </mx:Script>
  <mx:Canvas id="BackIm" name="Картинки фона" visible="false">
      <mx:Image source="assets/bACK1.png" x="39" y="8" alpha="0.3" />
  <mx:Image source="assets/bACK2.png" x="39" y="8" alpha="0.3" />
    <mx:Image source="assets/bACK3.png" x="29" y="-3" alpha="1" />
      </mx:Canvas>
  <mx:TitleWindow  roundedBottomCorners="true" layout="absolute" title="Клиент со стороны камер" showCloseButton="true" close="close();"  backgroundAlpha="0.83" id="titlewindow1" backgroundColor="#757575" borderColor="#797979" left="20.5" right="10" top="24" bottom="7">
    <mx:HDividedBox left="10" right="10" top="10" bottom="10">
    	
  
    <mx:VBox left="10" id="vbox1" top="10" bottom="10" width="100%" height="100%">
    <!--  <mx:Panel width="100%" height="100%" layout="absolute" title="Вешание с выбранной камеры" backgroundAlpha="0.0">
        <mx:Image  source="assets/TV.png" horizontalCenter="0" verticalCenter="0">
        	
        </mx:Image>
          <mx:Canvas
          id="cnvWebcam" visible="true" left="10" right="10" top="10" bottom="15">
          </mx:Canvas>
      </mx:Panel> -->
      <mx:Panel id="mainPanel"
              title="Установленные камеры"
              status="{list.dataProvider.length} camera(s)" width="100%" height="100%" backgroundAlpha="0.0">
         <mx:Canvas  width="100%" height="100%">
         	
     
          <mx:List id="list" itemRenderer="x1" 
                  dataProvider="{Camera.names}"
                  change="list_change(event);"  right="10" left="10" top="10" bottom="10"/>
                      </mx:Canvas>
      </mx:Panel>
    </mx:VBox>
    
    <mx:Panel width="10%" layout="absolute" id="p1" title="ListV2" backgroundAlpha="0.0" right="10" top="10" bottom="10" height="100%">
      
      <mx:HDividedBox width="100%" height="100%" right="0">
       
              
    </mx:HDividedBox>
    </mx:Panel>
    
    
    	
   
      </mx:HDividedBox>
    </mx:TitleWindow>
  
  
  
  
  
<mx:Button mouseDown="{nativeWindow.startMove();}" fillAlphas="[0.01, 0.01, 0.01, 0.01]" color="#FFFFFF" alpha="0.01" top="24" right="94" left="18" height="28"/>
  
    
          

</mx:WindowedApplication>
