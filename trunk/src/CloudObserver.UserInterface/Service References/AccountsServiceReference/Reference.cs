//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace CloudObserver.UserInterface.AccountsServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountsServiceReference.AccountsServiceContract")]
    public interface AccountsServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AbstractServiceContract/GetControllerServiceUri", ReplyAction="http://tempuri.org/AbstractServiceContract/GetControllerServiceUriResponse")]
        System.IAsyncResult BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState);
        
        string EndGetControllerServiceUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AbstractServiceContract/SetControllerServiceUri", ReplyAction="http://tempuri.org/AbstractServiceContract/SetControllerServiceUriResponse")]
        System.IAsyncResult BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState);
        
        void EndSetControllerServiceUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetPrivacy", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetPrivacyResponse")]
        System.IAsyncResult BeginGroupGetPrivacy(int groupID, System.AsyncCallback callback, object asyncState);
        
        int EndGroupGetPrivacy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetRegistrationDate", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetRegistrationDateResponse")]
        System.IAsyncResult BeginGroupGetRegistrationDate(int groupID, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGroupGetRegistrationDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetMembers", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetMembersResponse")]
        System.IAsyncResult BeginGroupGetMembers(int groupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndGroupGetMembers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetCameras", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetCamerasResponse")]
        System.IAsyncResult BeginGroupGetCameras(int groupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndGroupGetCameras(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupSetName", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupSetNameResponse")]
        System.IAsyncResult BeginGroupSetName(int groupID, string name, System.AsyncCallback callback, object asyncState);
        
        void EndGroupSetName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupSetDescription", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupSetDescriptionResponse")]
        System.IAsyncResult BeginGroupSetDescription(int groupID, string description, System.AsyncCallback callback, object asyncState);
        
        void EndGroupSetDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupSetIcon", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupSetIconResponse")]
        System.IAsyncResult BeginGroupSetIcon(int groupID, byte[] icon, System.AsyncCallback callback, object asyncState);
        
        void EndGroupSetIcon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupSetPrivacy", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupSetPrivacyResponse")]
        System.IAsyncResult BeginGroupSetPrivacy(int groupID, int privacy, System.AsyncCallback callback, object asyncState);
        
        void EndGroupSetPrivacy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupMemberAdd", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupMemberAddResponse")]
        System.IAsyncResult BeginGroupMemberAdd(int userID, int groupID, int privileges, System.AsyncCallback callback, object asyncState);
        
        void EndGroupMemberAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupMemberRemove", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupMemberRemoveResponse")]
        System.IAsyncResult BeginGroupMemberRemove(int userID, int groupID, System.AsyncCallback callback, object asyncState);
        
        void EndGroupMemberRemove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupMemberGetPrivileges", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupMemberGetPrivilegesResponse")]
        System.IAsyncResult BeginGroupMemberGetPrivileges(int userID, int groupID, System.AsyncCallback callback, object asyncState);
        
        int EndGroupMemberGetPrivileges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupMemberSetPrivileges", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupMemberSetPrivilegesResponse")]
        System.IAsyncResult BeginGroupMemberSetPrivileges(int userID, int groupID, int privileges, System.AsyncCallback callback, object asyncState);
        
        void EndGroupMemberSetPrivileges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupCameraAdd", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupCameraAddResponse")]
        System.IAsyncResult BeginGroupCameraAdd(int cameraID, int groupID, System.AsyncCallback callback, object asyncState);
        
        void EndGroupCameraAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupCameraRemove", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupCameraRemoveResponse")]
        System.IAsyncResult BeginGroupCameraRemove(int cameraID, int groupID, System.AsyncCallback callback, object asyncState);
        
        void EndGroupCameraRemove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserRemove", ReplyAction="http://tempuri.org/AccountsServiceContract/UserRemoveResponse")]
        System.IAsyncResult BeginUserRemove(int userID, System.AsyncCallback callback, object asyncState);
        
        void EndUserRemove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetID", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetIDResponse")]
        System.IAsyncResult BeginUserGetID(string email, System.AsyncCallback callback, object asyncState);
        
        int EndUserGetID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetEmail", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetEmailResponse")]
        System.IAsyncResult BeginUserGetEmail(int userID, System.AsyncCallback callback, object asyncState);
        
        string EndUserGetEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetPassword", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetPasswordResponse")]
        System.IAsyncResult BeginUserGetPassword(int userID, System.AsyncCallback callback, object asyncState);
        
        string EndUserGetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetName", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetNameResponse")]
        System.IAsyncResult BeginUserGetName(int userID, System.AsyncCallback callback, object asyncState);
        
        string EndUserGetName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetDescription", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetDescriptionResponse")]
        System.IAsyncResult BeginUserGetDescription(int userID, System.AsyncCallback callback, object asyncState);
        
        string EndUserGetDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetIcon", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetIconResponse")]
        System.IAsyncResult BeginUserGetIcon(int userID, System.AsyncCallback callback, object asyncState);
        
        byte[] EndUserGetIcon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetRegistrationDate", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetRegistrationDateResponse")]
        System.IAsyncResult BeginUserGetRegistrationDate(int userID, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndUserGetRegistrationDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserGetGroups", ReplyAction="http://tempuri.org/AccountsServiceContract/UserGetGroupsResponse")]
        System.IAsyncResult BeginUserGetGroups(int userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndUserGetGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserSetPassword", ReplyAction="http://tempuri.org/AccountsServiceContract/UserSetPasswordResponse")]
        System.IAsyncResult BeginUserSetPassword(int userID, string password, System.AsyncCallback callback, object asyncState);
        
        void EndUserSetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserSetName", ReplyAction="http://tempuri.org/AccountsServiceContract/UserSetNameResponse")]
        System.IAsyncResult BeginUserSetName(int userID, string name, System.AsyncCallback callback, object asyncState);
        
        void EndUserSetName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserSetDescription", ReplyAction="http://tempuri.org/AccountsServiceContract/UserSetDescriptionResponse")]
        System.IAsyncResult BeginUserSetDescription(int userID, string description, System.AsyncCallback callback, object asyncState);
        
        void EndUserSetDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/UserSetIcon", ReplyAction="http://tempuri.org/AccountsServiceContract/UserSetIconResponse")]
        System.IAsyncResult BeginUserSetIcon(int userID, byte[] icon, System.AsyncCallback callback, object asyncState);
        
        void EndUserSetIcon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraCheckPathAvailability", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraCheckPathAvailabilityResponse")]
        System.IAsyncResult BeginCameraCheckPathAvailability(string path, System.AsyncCallback callback, object asyncState);
        
        bool EndCameraCheckPathAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraRegister", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraRegisterResponse")]
        System.IAsyncResult BeginCameraRegister(string name, string path, string description, byte[] icon, System.AsyncCallback callback, object asyncState);
        
        int EndCameraRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraRemove", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraRemoveResponse")]
        System.IAsyncResult BeginCameraRemove(int cameraID, System.AsyncCallback callback, object asyncState);
        
        void EndCameraRemove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraGetID", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraGetIDResponse")]
        System.IAsyncResult BeginCameraGetID(string path, System.AsyncCallback callback, object asyncState);
        
        int EndCameraGetID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraGetPath", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraGetPathResponse")]
        System.IAsyncResult BeginCameraGetPath(int cameraID, System.AsyncCallback callback, object asyncState);
        
        string EndCameraGetPath(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraGetName", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraGetNameResponse")]
        System.IAsyncResult BeginCameraGetName(int cameraID, System.AsyncCallback callback, object asyncState);
        
        string EndCameraGetName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraGetDescription", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraGetDescriptionResponse")]
        System.IAsyncResult BeginCameraGetDescription(int cameraID, System.AsyncCallback callback, object asyncState);
        
        string EndCameraGetDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraGetIcon", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraGetIconResponse")]
        System.IAsyncResult BeginCameraGetIcon(int cameraID, System.AsyncCallback callback, object asyncState);
        
        byte[] EndCameraGetIcon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraGetRegistrationDate", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraGetRegistrationDateResponse")]
        System.IAsyncResult BeginCameraGetRegistrationDate(int cameraID, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndCameraGetRegistrationDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraGetGroups", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraGetGroupsResponse")]
        System.IAsyncResult BeginCameraGetGroups(int cameraID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndCameraGetGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraSetName", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraSetNameResponse")]
        System.IAsyncResult BeginCameraSetName(int cameraID, string name, System.AsyncCallback callback, object asyncState);
        
        void EndCameraSetName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraSetDescription", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraSetDescriptionResponse")]
        System.IAsyncResult BeginCameraSetDescription(int cameraID, string description, System.AsyncCallback callback, object asyncState);
        
        void EndCameraSetDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/CameraSetIcon", ReplyAction="http://tempuri.org/AccountsServiceContract/CameraSetIconResponse")]
        System.IAsyncResult BeginCameraSetIcon(int cameraID, byte[] icon, System.AsyncCallback callback, object asyncState);
        
        void EndCameraSetIcon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupRegister", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupRegisterResponse")]
        System.IAsyncResult BeginGroupRegister(string name, string description, byte[] icon, int privacy, System.AsyncCallback callback, object asyncState);
        
        int EndGroupRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupRemove", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupRemoveResponse")]
        System.IAsyncResult BeginGroupRemove(int groupID, System.AsyncCallback callback, object asyncState);
        
        void EndGroupRemove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetID", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetIDResponse")]
        System.IAsyncResult BeginGroupGetID(string name, System.AsyncCallback callback, object asyncState);
        
        int EndGroupGetID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetName", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetNameResponse")]
        System.IAsyncResult BeginGroupGetName(int groupID, System.AsyncCallback callback, object asyncState);
        
        string EndGroupGetName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetDescription", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetDescriptionResponse")]
        System.IAsyncResult BeginGroupGetDescription(int groupID, System.AsyncCallback callback, object asyncState);
        
        string EndGroupGetDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AccountsServiceContract/GroupGetIcon", ReplyAction="http://tempuri.org/AccountsServiceContract/GroupGetIconResponse")]
        System.IAsyncResult BeginGroupGetIcon(int groupID, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGroupGetIcon(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface AccountsServiceContractChannel : CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetControllerServiceUriCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetControllerServiceUriCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetPrivacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetPrivacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetRegistrationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetRegistrationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetCamerasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetCamerasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupMemberGetPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupMemberGetPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetIconCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetIconCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetRegistrationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetRegistrationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserGetGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserGetGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraCheckPathAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraCheckPathAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraGetIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraGetIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraGetPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraGetPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraGetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraGetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraGetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraGetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraGetIconCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraGetIconCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraGetRegistrationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraGetRegistrationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CameraGetGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CameraGetGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GroupGetIconCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GroupGetIconCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AccountsServiceContractClient : System.ServiceModel.ClientBase<CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract>, CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract {
        
        private BeginOperationDelegate onBeginGetControllerServiceUriDelegate;
        
        private EndOperationDelegate onEndGetControllerServiceUriDelegate;
        
        private System.Threading.SendOrPostCallback onGetControllerServiceUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetControllerServiceUriDelegate;
        
        private EndOperationDelegate onEndSetControllerServiceUriDelegate;
        
        private System.Threading.SendOrPostCallback onSetControllerServiceUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetPrivacyDelegate;
        
        private EndOperationDelegate onEndGroupGetPrivacyDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetPrivacyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetRegistrationDateDelegate;
        
        private EndOperationDelegate onEndGroupGetRegistrationDateDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetRegistrationDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetMembersDelegate;
        
        private EndOperationDelegate onEndGroupGetMembersDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetMembersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetCamerasDelegate;
        
        private EndOperationDelegate onEndGroupGetCamerasDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetCamerasCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupSetNameDelegate;
        
        private EndOperationDelegate onEndGroupSetNameDelegate;
        
        private System.Threading.SendOrPostCallback onGroupSetNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupSetDescriptionDelegate;
        
        private EndOperationDelegate onEndGroupSetDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGroupSetDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupSetIconDelegate;
        
        private EndOperationDelegate onEndGroupSetIconDelegate;
        
        private System.Threading.SendOrPostCallback onGroupSetIconCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupSetPrivacyDelegate;
        
        private EndOperationDelegate onEndGroupSetPrivacyDelegate;
        
        private System.Threading.SendOrPostCallback onGroupSetPrivacyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupMemberAddDelegate;
        
        private EndOperationDelegate onEndGroupMemberAddDelegate;
        
        private System.Threading.SendOrPostCallback onGroupMemberAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupMemberRemoveDelegate;
        
        private EndOperationDelegate onEndGroupMemberRemoveDelegate;
        
        private System.Threading.SendOrPostCallback onGroupMemberRemoveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupMemberGetPrivilegesDelegate;
        
        private EndOperationDelegate onEndGroupMemberGetPrivilegesDelegate;
        
        private System.Threading.SendOrPostCallback onGroupMemberGetPrivilegesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupMemberSetPrivilegesDelegate;
        
        private EndOperationDelegate onEndGroupMemberSetPrivilegesDelegate;
        
        private System.Threading.SendOrPostCallback onGroupMemberSetPrivilegesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupCameraAddDelegate;
        
        private EndOperationDelegate onEndGroupCameraAddDelegate;
        
        private System.Threading.SendOrPostCallback onGroupCameraAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupCameraRemoveDelegate;
        
        private EndOperationDelegate onEndGroupCameraRemoveDelegate;
        
        private System.Threading.SendOrPostCallback onGroupCameraRemoveCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserRemoveDelegate;
        
        private EndOperationDelegate onEndUserRemoveDelegate;
        
        private System.Threading.SendOrPostCallback onUserRemoveCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetIDDelegate;
        
        private EndOperationDelegate onEndUserGetIDDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetEmailDelegate;
        
        private EndOperationDelegate onEndUserGetEmailDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetPasswordDelegate;
        
        private EndOperationDelegate onEndUserGetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetNameDelegate;
        
        private EndOperationDelegate onEndUserGetNameDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetDescriptionDelegate;
        
        private EndOperationDelegate onEndUserGetDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetIconDelegate;
        
        private EndOperationDelegate onEndUserGetIconDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetIconCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetRegistrationDateDelegate;
        
        private EndOperationDelegate onEndUserGetRegistrationDateDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetRegistrationDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserGetGroupsDelegate;
        
        private EndOperationDelegate onEndUserGetGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onUserGetGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserSetPasswordDelegate;
        
        private EndOperationDelegate onEndUserSetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onUserSetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserSetNameDelegate;
        
        private EndOperationDelegate onEndUserSetNameDelegate;
        
        private System.Threading.SendOrPostCallback onUserSetNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserSetDescriptionDelegate;
        
        private EndOperationDelegate onEndUserSetDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onUserSetDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserSetIconDelegate;
        
        private EndOperationDelegate onEndUserSetIconDelegate;
        
        private System.Threading.SendOrPostCallback onUserSetIconCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraCheckPathAvailabilityDelegate;
        
        private EndOperationDelegate onEndCameraCheckPathAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onCameraCheckPathAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraRegisterDelegate;
        
        private EndOperationDelegate onEndCameraRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onCameraRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraRemoveDelegate;
        
        private EndOperationDelegate onEndCameraRemoveDelegate;
        
        private System.Threading.SendOrPostCallback onCameraRemoveCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraGetIDDelegate;
        
        private EndOperationDelegate onEndCameraGetIDDelegate;
        
        private System.Threading.SendOrPostCallback onCameraGetIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraGetPathDelegate;
        
        private EndOperationDelegate onEndCameraGetPathDelegate;
        
        private System.Threading.SendOrPostCallback onCameraGetPathCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraGetNameDelegate;
        
        private EndOperationDelegate onEndCameraGetNameDelegate;
        
        private System.Threading.SendOrPostCallback onCameraGetNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraGetDescriptionDelegate;
        
        private EndOperationDelegate onEndCameraGetDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onCameraGetDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraGetIconDelegate;
        
        private EndOperationDelegate onEndCameraGetIconDelegate;
        
        private System.Threading.SendOrPostCallback onCameraGetIconCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraGetRegistrationDateDelegate;
        
        private EndOperationDelegate onEndCameraGetRegistrationDateDelegate;
        
        private System.Threading.SendOrPostCallback onCameraGetRegistrationDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraGetGroupsDelegate;
        
        private EndOperationDelegate onEndCameraGetGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onCameraGetGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraSetNameDelegate;
        
        private EndOperationDelegate onEndCameraSetNameDelegate;
        
        private System.Threading.SendOrPostCallback onCameraSetNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraSetDescriptionDelegate;
        
        private EndOperationDelegate onEndCameraSetDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onCameraSetDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCameraSetIconDelegate;
        
        private EndOperationDelegate onEndCameraSetIconDelegate;
        
        private System.Threading.SendOrPostCallback onCameraSetIconCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupRegisterDelegate;
        
        private EndOperationDelegate onEndGroupRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onGroupRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupRemoveDelegate;
        
        private EndOperationDelegate onEndGroupRemoveDelegate;
        
        private System.Threading.SendOrPostCallback onGroupRemoveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetIDDelegate;
        
        private EndOperationDelegate onEndGroupGetIDDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetNameDelegate;
        
        private EndOperationDelegate onEndGroupGetNameDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetDescriptionDelegate;
        
        private EndOperationDelegate onEndGroupGetDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupGetIconDelegate;
        
        private EndOperationDelegate onEndGroupGetIconDelegate;
        
        private System.Threading.SendOrPostCallback onGroupGetIconCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AccountsServiceContractClient() {
        }
        
        public AccountsServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountsServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetControllerServiceUriCompletedEventArgs> GetControllerServiceUriCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetControllerServiceUriCompleted;
        
        public event System.EventHandler<GroupGetPrivacyCompletedEventArgs> GroupGetPrivacyCompleted;
        
        public event System.EventHandler<GroupGetRegistrationDateCompletedEventArgs> GroupGetRegistrationDateCompleted;
        
        public event System.EventHandler<GroupGetMembersCompletedEventArgs> GroupGetMembersCompleted;
        
        public event System.EventHandler<GroupGetCamerasCompletedEventArgs> GroupGetCamerasCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupSetNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupSetDescriptionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupSetIconCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupSetPrivacyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupMemberAddCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupMemberRemoveCompleted;
        
        public event System.EventHandler<GroupMemberGetPrivilegesCompletedEventArgs> GroupMemberGetPrivilegesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupMemberSetPrivilegesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupCameraAddCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupCameraRemoveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UserRemoveCompleted;
        
        public event System.EventHandler<UserGetIDCompletedEventArgs> UserGetIDCompleted;
        
        public event System.EventHandler<UserGetEmailCompletedEventArgs> UserGetEmailCompleted;
        
        public event System.EventHandler<UserGetPasswordCompletedEventArgs> UserGetPasswordCompleted;
        
        public event System.EventHandler<UserGetNameCompletedEventArgs> UserGetNameCompleted;
        
        public event System.EventHandler<UserGetDescriptionCompletedEventArgs> UserGetDescriptionCompleted;
        
        public event System.EventHandler<UserGetIconCompletedEventArgs> UserGetIconCompleted;
        
        public event System.EventHandler<UserGetRegistrationDateCompletedEventArgs> UserGetRegistrationDateCompleted;
        
        public event System.EventHandler<UserGetGroupsCompletedEventArgs> UserGetGroupsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UserSetPasswordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UserSetNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UserSetDescriptionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UserSetIconCompleted;
        
        public event System.EventHandler<CameraCheckPathAvailabilityCompletedEventArgs> CameraCheckPathAvailabilityCompleted;
        
        public event System.EventHandler<CameraRegisterCompletedEventArgs> CameraRegisterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CameraRemoveCompleted;
        
        public event System.EventHandler<CameraGetIDCompletedEventArgs> CameraGetIDCompleted;
        
        public event System.EventHandler<CameraGetPathCompletedEventArgs> CameraGetPathCompleted;
        
        public event System.EventHandler<CameraGetNameCompletedEventArgs> CameraGetNameCompleted;
        
        public event System.EventHandler<CameraGetDescriptionCompletedEventArgs> CameraGetDescriptionCompleted;
        
        public event System.EventHandler<CameraGetIconCompletedEventArgs> CameraGetIconCompleted;
        
        public event System.EventHandler<CameraGetRegistrationDateCompletedEventArgs> CameraGetRegistrationDateCompleted;
        
        public event System.EventHandler<CameraGetGroupsCompletedEventArgs> CameraGetGroupsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CameraSetNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CameraSetDescriptionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CameraSetIconCompleted;
        
        public event System.EventHandler<GroupRegisterCompletedEventArgs> GroupRegisterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupRemoveCompleted;
        
        public event System.EventHandler<GroupGetIDCompletedEventArgs> GroupGetIDCompleted;
        
        public event System.EventHandler<GroupGetNameCompletedEventArgs> GroupGetNameCompleted;
        
        public event System.EventHandler<GroupGetDescriptionCompletedEventArgs> GroupGetDescriptionCompleted;
        
        public event System.EventHandler<GroupGetIconCompletedEventArgs> GroupGetIconCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetControllerServiceUri(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGetControllerServiceUri(System.IAsyncResult result) {
            return base.Channel.EndGetControllerServiceUri(result);
        }
        
        private System.IAsyncResult OnBeginGetControllerServiceUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGetControllerServiceUri(callback, asyncState);
        }
        
        private object[] OnEndGetControllerServiceUri(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGetControllerServiceUri(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetControllerServiceUriCompleted(object state) {
            if ((this.GetControllerServiceUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetControllerServiceUriCompleted(this, new GetControllerServiceUriCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetControllerServiceUriAsync() {
            this.GetControllerServiceUriAsync(null);
        }
        
        public void GetControllerServiceUriAsync(object userState) {
            if ((this.onBeginGetControllerServiceUriDelegate == null)) {
                this.onBeginGetControllerServiceUriDelegate = new BeginOperationDelegate(this.OnBeginGetControllerServiceUri);
            }
            if ((this.onEndGetControllerServiceUriDelegate == null)) {
                this.onEndGetControllerServiceUriDelegate = new EndOperationDelegate(this.OnEndGetControllerServiceUri);
            }
            if ((this.onGetControllerServiceUriCompletedDelegate == null)) {
                this.onGetControllerServiceUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetControllerServiceUriCompleted);
            }
            base.InvokeAsync(this.onBeginGetControllerServiceUriDelegate, null, this.onEndGetControllerServiceUriDelegate, this.onGetControllerServiceUriCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetControllerServiceUri(controllerServiceUri, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndSetControllerServiceUri(System.IAsyncResult result) {
            base.Channel.EndSetControllerServiceUri(result);
        }
        
        private System.IAsyncResult OnBeginSetControllerServiceUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string controllerServiceUri = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginSetControllerServiceUri(controllerServiceUri, callback, asyncState);
        }
        
        private object[] OnEndSetControllerServiceUri(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndSetControllerServiceUri(result);
            return null;
        }
        
        private void OnSetControllerServiceUriCompleted(object state) {
            if ((this.SetControllerServiceUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetControllerServiceUriCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetControllerServiceUriAsync(string controllerServiceUri) {
            this.SetControllerServiceUriAsync(controllerServiceUri, null);
        }
        
        public void SetControllerServiceUriAsync(string controllerServiceUri, object userState) {
            if ((this.onBeginSetControllerServiceUriDelegate == null)) {
                this.onBeginSetControllerServiceUriDelegate = new BeginOperationDelegate(this.OnBeginSetControllerServiceUri);
            }
            if ((this.onEndSetControllerServiceUriDelegate == null)) {
                this.onEndSetControllerServiceUriDelegate = new EndOperationDelegate(this.OnEndSetControllerServiceUri);
            }
            if ((this.onSetControllerServiceUriCompletedDelegate == null)) {
                this.onSetControllerServiceUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetControllerServiceUriCompleted);
            }
            base.InvokeAsync(this.onBeginSetControllerServiceUriDelegate, new object[] {
                        controllerServiceUri}, this.onEndSetControllerServiceUriDelegate, this.onSetControllerServiceUriCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetPrivacy(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetPrivacy(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetPrivacy(System.IAsyncResult result) {
            return base.Channel.EndGroupGetPrivacy(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetPrivacy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetPrivacy(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupGetPrivacy(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetPrivacy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetPrivacyCompleted(object state) {
            if ((this.GroupGetPrivacyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetPrivacyCompleted(this, new GroupGetPrivacyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetPrivacyAsync(int groupID) {
            this.GroupGetPrivacyAsync(groupID, null);
        }
        
        public void GroupGetPrivacyAsync(int groupID, object userState) {
            if ((this.onBeginGroupGetPrivacyDelegate == null)) {
                this.onBeginGroupGetPrivacyDelegate = new BeginOperationDelegate(this.OnBeginGroupGetPrivacy);
            }
            if ((this.onEndGroupGetPrivacyDelegate == null)) {
                this.onEndGroupGetPrivacyDelegate = new EndOperationDelegate(this.OnEndGroupGetPrivacy);
            }
            if ((this.onGroupGetPrivacyCompletedDelegate == null)) {
                this.onGroupGetPrivacyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetPrivacyCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetPrivacyDelegate, new object[] {
                        groupID}, this.onEndGroupGetPrivacyDelegate, this.onGroupGetPrivacyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetRegistrationDate(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetRegistrationDate(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetRegistrationDate(System.IAsyncResult result) {
            return base.Channel.EndGroupGetRegistrationDate(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetRegistrationDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetRegistrationDate(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupGetRegistrationDate(System.IAsyncResult result) {
            System.DateTime retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetRegistrationDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetRegistrationDateCompleted(object state) {
            if ((this.GroupGetRegistrationDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetRegistrationDateCompleted(this, new GroupGetRegistrationDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetRegistrationDateAsync(int groupID) {
            this.GroupGetRegistrationDateAsync(groupID, null);
        }
        
        public void GroupGetRegistrationDateAsync(int groupID, object userState) {
            if ((this.onBeginGroupGetRegistrationDateDelegate == null)) {
                this.onBeginGroupGetRegistrationDateDelegate = new BeginOperationDelegate(this.OnBeginGroupGetRegistrationDate);
            }
            if ((this.onEndGroupGetRegistrationDateDelegate == null)) {
                this.onEndGroupGetRegistrationDateDelegate = new EndOperationDelegate(this.OnEndGroupGetRegistrationDate);
            }
            if ((this.onGroupGetRegistrationDateCompletedDelegate == null)) {
                this.onGroupGetRegistrationDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetRegistrationDateCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetRegistrationDateDelegate, new object[] {
                        groupID}, this.onEndGroupGetRegistrationDateDelegate, this.onGroupGetRegistrationDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetMembers(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetMembers(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetMembers(System.IAsyncResult result) {
            return base.Channel.EndGroupGetMembers(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetMembers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetMembers(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupGetMembers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetMembers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetMembersCompleted(object state) {
            if ((this.GroupGetMembersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetMembersCompleted(this, new GroupGetMembersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetMembersAsync(int groupID) {
            this.GroupGetMembersAsync(groupID, null);
        }
        
        public void GroupGetMembersAsync(int groupID, object userState) {
            if ((this.onBeginGroupGetMembersDelegate == null)) {
                this.onBeginGroupGetMembersDelegate = new BeginOperationDelegate(this.OnBeginGroupGetMembers);
            }
            if ((this.onEndGroupGetMembersDelegate == null)) {
                this.onEndGroupGetMembersDelegate = new EndOperationDelegate(this.OnEndGroupGetMembers);
            }
            if ((this.onGroupGetMembersCompletedDelegate == null)) {
                this.onGroupGetMembersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetMembersCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetMembersDelegate, new object[] {
                        groupID}, this.onEndGroupGetMembersDelegate, this.onGroupGetMembersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetCameras(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetCameras(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetCameras(System.IAsyncResult result) {
            return base.Channel.EndGroupGetCameras(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetCameras(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetCameras(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupGetCameras(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetCameras(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetCamerasCompleted(object state) {
            if ((this.GroupGetCamerasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetCamerasCompleted(this, new GroupGetCamerasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetCamerasAsync(int groupID) {
            this.GroupGetCamerasAsync(groupID, null);
        }
        
        public void GroupGetCamerasAsync(int groupID, object userState) {
            if ((this.onBeginGroupGetCamerasDelegate == null)) {
                this.onBeginGroupGetCamerasDelegate = new BeginOperationDelegate(this.OnBeginGroupGetCameras);
            }
            if ((this.onEndGroupGetCamerasDelegate == null)) {
                this.onEndGroupGetCamerasDelegate = new EndOperationDelegate(this.OnEndGroupGetCameras);
            }
            if ((this.onGroupGetCamerasCompletedDelegate == null)) {
                this.onGroupGetCamerasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetCamerasCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetCamerasDelegate, new object[] {
                        groupID}, this.onEndGroupGetCamerasDelegate, this.onGroupGetCamerasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupSetName(int groupID, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupSetName(groupID, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupSetName(System.IAsyncResult result) {
            base.Channel.EndGroupSetName(result);
        }
        
        private System.IAsyncResult OnBeginGroupSetName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupSetName(groupID, name, callback, asyncState);
        }
        
        private object[] OnEndGroupSetName(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupSetName(result);
            return null;
        }
        
        private void OnGroupSetNameCompleted(object state) {
            if ((this.GroupSetNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupSetNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupSetNameAsync(int groupID, string name) {
            this.GroupSetNameAsync(groupID, name, null);
        }
        
        public void GroupSetNameAsync(int groupID, string name, object userState) {
            if ((this.onBeginGroupSetNameDelegate == null)) {
                this.onBeginGroupSetNameDelegate = new BeginOperationDelegate(this.OnBeginGroupSetName);
            }
            if ((this.onEndGroupSetNameDelegate == null)) {
                this.onEndGroupSetNameDelegate = new EndOperationDelegate(this.OnEndGroupSetName);
            }
            if ((this.onGroupSetNameCompletedDelegate == null)) {
                this.onGroupSetNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupSetNameCompleted);
            }
            base.InvokeAsync(this.onBeginGroupSetNameDelegate, new object[] {
                        groupID,
                        name}, this.onEndGroupSetNameDelegate, this.onGroupSetNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupSetDescription(int groupID, string description, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupSetDescription(groupID, description, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupSetDescription(System.IAsyncResult result) {
            base.Channel.EndGroupSetDescription(result);
        }
        
        private System.IAsyncResult OnBeginGroupSetDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            string description = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupSetDescription(groupID, description, callback, asyncState);
        }
        
        private object[] OnEndGroupSetDescription(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupSetDescription(result);
            return null;
        }
        
        private void OnGroupSetDescriptionCompleted(object state) {
            if ((this.GroupSetDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupSetDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupSetDescriptionAsync(int groupID, string description) {
            this.GroupSetDescriptionAsync(groupID, description, null);
        }
        
        public void GroupSetDescriptionAsync(int groupID, string description, object userState) {
            if ((this.onBeginGroupSetDescriptionDelegate == null)) {
                this.onBeginGroupSetDescriptionDelegate = new BeginOperationDelegate(this.OnBeginGroupSetDescription);
            }
            if ((this.onEndGroupSetDescriptionDelegate == null)) {
                this.onEndGroupSetDescriptionDelegate = new EndOperationDelegate(this.OnEndGroupSetDescription);
            }
            if ((this.onGroupSetDescriptionCompletedDelegate == null)) {
                this.onGroupSetDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupSetDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGroupSetDescriptionDelegate, new object[] {
                        groupID,
                        description}, this.onEndGroupSetDescriptionDelegate, this.onGroupSetDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupSetIcon(int groupID, byte[] icon, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupSetIcon(groupID, icon, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupSetIcon(System.IAsyncResult result) {
            base.Channel.EndGroupSetIcon(result);
        }
        
        private System.IAsyncResult OnBeginGroupSetIcon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            byte[] icon = ((byte[])(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupSetIcon(groupID, icon, callback, asyncState);
        }
        
        private object[] OnEndGroupSetIcon(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupSetIcon(result);
            return null;
        }
        
        private void OnGroupSetIconCompleted(object state) {
            if ((this.GroupSetIconCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupSetIconCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupSetIconAsync(int groupID, byte[] icon) {
            this.GroupSetIconAsync(groupID, icon, null);
        }
        
        public void GroupSetIconAsync(int groupID, byte[] icon, object userState) {
            if ((this.onBeginGroupSetIconDelegate == null)) {
                this.onBeginGroupSetIconDelegate = new BeginOperationDelegate(this.OnBeginGroupSetIcon);
            }
            if ((this.onEndGroupSetIconDelegate == null)) {
                this.onEndGroupSetIconDelegate = new EndOperationDelegate(this.OnEndGroupSetIcon);
            }
            if ((this.onGroupSetIconCompletedDelegate == null)) {
                this.onGroupSetIconCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupSetIconCompleted);
            }
            base.InvokeAsync(this.onBeginGroupSetIconDelegate, new object[] {
                        groupID,
                        icon}, this.onEndGroupSetIconDelegate, this.onGroupSetIconCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupSetPrivacy(int groupID, int privacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupSetPrivacy(groupID, privacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupSetPrivacy(System.IAsyncResult result) {
            base.Channel.EndGroupSetPrivacy(result);
        }
        
        private System.IAsyncResult OnBeginGroupSetPrivacy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            int privacy = ((int)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupSetPrivacy(groupID, privacy, callback, asyncState);
        }
        
        private object[] OnEndGroupSetPrivacy(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupSetPrivacy(result);
            return null;
        }
        
        private void OnGroupSetPrivacyCompleted(object state) {
            if ((this.GroupSetPrivacyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupSetPrivacyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupSetPrivacyAsync(int groupID, int privacy) {
            this.GroupSetPrivacyAsync(groupID, privacy, null);
        }
        
        public void GroupSetPrivacyAsync(int groupID, int privacy, object userState) {
            if ((this.onBeginGroupSetPrivacyDelegate == null)) {
                this.onBeginGroupSetPrivacyDelegate = new BeginOperationDelegate(this.OnBeginGroupSetPrivacy);
            }
            if ((this.onEndGroupSetPrivacyDelegate == null)) {
                this.onEndGroupSetPrivacyDelegate = new EndOperationDelegate(this.OnEndGroupSetPrivacy);
            }
            if ((this.onGroupSetPrivacyCompletedDelegate == null)) {
                this.onGroupSetPrivacyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupSetPrivacyCompleted);
            }
            base.InvokeAsync(this.onBeginGroupSetPrivacyDelegate, new object[] {
                        groupID,
                        privacy}, this.onEndGroupSetPrivacyDelegate, this.onGroupSetPrivacyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupMemberAdd(int userID, int groupID, int privileges, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupMemberAdd(userID, groupID, privileges, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupMemberAdd(System.IAsyncResult result) {
            base.Channel.EndGroupMemberAdd(result);
        }
        
        private System.IAsyncResult OnBeginGroupMemberAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            int groupID = ((int)(inValues[1]));
            int privileges = ((int)(inValues[2]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupMemberAdd(userID, groupID, privileges, callback, asyncState);
        }
        
        private object[] OnEndGroupMemberAdd(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupMemberAdd(result);
            return null;
        }
        
        private void OnGroupMemberAddCompleted(object state) {
            if ((this.GroupMemberAddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupMemberAddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupMemberAddAsync(int userID, int groupID, int privileges) {
            this.GroupMemberAddAsync(userID, groupID, privileges, null);
        }
        
        public void GroupMemberAddAsync(int userID, int groupID, int privileges, object userState) {
            if ((this.onBeginGroupMemberAddDelegate == null)) {
                this.onBeginGroupMemberAddDelegate = new BeginOperationDelegate(this.OnBeginGroupMemberAdd);
            }
            if ((this.onEndGroupMemberAddDelegate == null)) {
                this.onEndGroupMemberAddDelegate = new EndOperationDelegate(this.OnEndGroupMemberAdd);
            }
            if ((this.onGroupMemberAddCompletedDelegate == null)) {
                this.onGroupMemberAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupMemberAddCompleted);
            }
            base.InvokeAsync(this.onBeginGroupMemberAddDelegate, new object[] {
                        userID,
                        groupID,
                        privileges}, this.onEndGroupMemberAddDelegate, this.onGroupMemberAddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupMemberRemove(int userID, int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupMemberRemove(userID, groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupMemberRemove(System.IAsyncResult result) {
            base.Channel.EndGroupMemberRemove(result);
        }
        
        private System.IAsyncResult OnBeginGroupMemberRemove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            int groupID = ((int)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupMemberRemove(userID, groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupMemberRemove(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupMemberRemove(result);
            return null;
        }
        
        private void OnGroupMemberRemoveCompleted(object state) {
            if ((this.GroupMemberRemoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupMemberRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupMemberRemoveAsync(int userID, int groupID) {
            this.GroupMemberRemoveAsync(userID, groupID, null);
        }
        
        public void GroupMemberRemoveAsync(int userID, int groupID, object userState) {
            if ((this.onBeginGroupMemberRemoveDelegate == null)) {
                this.onBeginGroupMemberRemoveDelegate = new BeginOperationDelegate(this.OnBeginGroupMemberRemove);
            }
            if ((this.onEndGroupMemberRemoveDelegate == null)) {
                this.onEndGroupMemberRemoveDelegate = new EndOperationDelegate(this.OnEndGroupMemberRemove);
            }
            if ((this.onGroupMemberRemoveCompletedDelegate == null)) {
                this.onGroupMemberRemoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupMemberRemoveCompleted);
            }
            base.InvokeAsync(this.onBeginGroupMemberRemoveDelegate, new object[] {
                        userID,
                        groupID}, this.onEndGroupMemberRemoveDelegate, this.onGroupMemberRemoveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupMemberGetPrivileges(int userID, int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupMemberGetPrivileges(userID, groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupMemberGetPrivileges(System.IAsyncResult result) {
            return base.Channel.EndGroupMemberGetPrivileges(result);
        }
        
        private System.IAsyncResult OnBeginGroupMemberGetPrivileges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            int groupID = ((int)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupMemberGetPrivileges(userID, groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupMemberGetPrivileges(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupMemberGetPrivileges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupMemberGetPrivilegesCompleted(object state) {
            if ((this.GroupMemberGetPrivilegesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupMemberGetPrivilegesCompleted(this, new GroupMemberGetPrivilegesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupMemberGetPrivilegesAsync(int userID, int groupID) {
            this.GroupMemberGetPrivilegesAsync(userID, groupID, null);
        }
        
        public void GroupMemberGetPrivilegesAsync(int userID, int groupID, object userState) {
            if ((this.onBeginGroupMemberGetPrivilegesDelegate == null)) {
                this.onBeginGroupMemberGetPrivilegesDelegate = new BeginOperationDelegate(this.OnBeginGroupMemberGetPrivileges);
            }
            if ((this.onEndGroupMemberGetPrivilegesDelegate == null)) {
                this.onEndGroupMemberGetPrivilegesDelegate = new EndOperationDelegate(this.OnEndGroupMemberGetPrivileges);
            }
            if ((this.onGroupMemberGetPrivilegesCompletedDelegate == null)) {
                this.onGroupMemberGetPrivilegesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupMemberGetPrivilegesCompleted);
            }
            base.InvokeAsync(this.onBeginGroupMemberGetPrivilegesDelegate, new object[] {
                        userID,
                        groupID}, this.onEndGroupMemberGetPrivilegesDelegate, this.onGroupMemberGetPrivilegesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupMemberSetPrivileges(int userID, int groupID, int privileges, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupMemberSetPrivileges(userID, groupID, privileges, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupMemberSetPrivileges(System.IAsyncResult result) {
            base.Channel.EndGroupMemberSetPrivileges(result);
        }
        
        private System.IAsyncResult OnBeginGroupMemberSetPrivileges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            int groupID = ((int)(inValues[1]));
            int privileges = ((int)(inValues[2]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupMemberSetPrivileges(userID, groupID, privileges, callback, asyncState);
        }
        
        private object[] OnEndGroupMemberSetPrivileges(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupMemberSetPrivileges(result);
            return null;
        }
        
        private void OnGroupMemberSetPrivilegesCompleted(object state) {
            if ((this.GroupMemberSetPrivilegesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupMemberSetPrivilegesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupMemberSetPrivilegesAsync(int userID, int groupID, int privileges) {
            this.GroupMemberSetPrivilegesAsync(userID, groupID, privileges, null);
        }
        
        public void GroupMemberSetPrivilegesAsync(int userID, int groupID, int privileges, object userState) {
            if ((this.onBeginGroupMemberSetPrivilegesDelegate == null)) {
                this.onBeginGroupMemberSetPrivilegesDelegate = new BeginOperationDelegate(this.OnBeginGroupMemberSetPrivileges);
            }
            if ((this.onEndGroupMemberSetPrivilegesDelegate == null)) {
                this.onEndGroupMemberSetPrivilegesDelegate = new EndOperationDelegate(this.OnEndGroupMemberSetPrivileges);
            }
            if ((this.onGroupMemberSetPrivilegesCompletedDelegate == null)) {
                this.onGroupMemberSetPrivilegesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupMemberSetPrivilegesCompleted);
            }
            base.InvokeAsync(this.onBeginGroupMemberSetPrivilegesDelegate, new object[] {
                        userID,
                        groupID,
                        privileges}, this.onEndGroupMemberSetPrivilegesDelegate, this.onGroupMemberSetPrivilegesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupCameraAdd(int cameraID, int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupCameraAdd(cameraID, groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupCameraAdd(System.IAsyncResult result) {
            base.Channel.EndGroupCameraAdd(result);
        }
        
        private System.IAsyncResult OnBeginGroupCameraAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            int groupID = ((int)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupCameraAdd(cameraID, groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupCameraAdd(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupCameraAdd(result);
            return null;
        }
        
        private void OnGroupCameraAddCompleted(object state) {
            if ((this.GroupCameraAddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupCameraAddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupCameraAddAsync(int cameraID, int groupID) {
            this.GroupCameraAddAsync(cameraID, groupID, null);
        }
        
        public void GroupCameraAddAsync(int cameraID, int groupID, object userState) {
            if ((this.onBeginGroupCameraAddDelegate == null)) {
                this.onBeginGroupCameraAddDelegate = new BeginOperationDelegate(this.OnBeginGroupCameraAdd);
            }
            if ((this.onEndGroupCameraAddDelegate == null)) {
                this.onEndGroupCameraAddDelegate = new EndOperationDelegate(this.OnEndGroupCameraAdd);
            }
            if ((this.onGroupCameraAddCompletedDelegate == null)) {
                this.onGroupCameraAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupCameraAddCompleted);
            }
            base.InvokeAsync(this.onBeginGroupCameraAddDelegate, new object[] {
                        cameraID,
                        groupID}, this.onEndGroupCameraAddDelegate, this.onGroupCameraAddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupCameraRemove(int cameraID, int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupCameraRemove(cameraID, groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupCameraRemove(System.IAsyncResult result) {
            base.Channel.EndGroupCameraRemove(result);
        }
        
        private System.IAsyncResult OnBeginGroupCameraRemove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            int groupID = ((int)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupCameraRemove(cameraID, groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupCameraRemove(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupCameraRemove(result);
            return null;
        }
        
        private void OnGroupCameraRemoveCompleted(object state) {
            if ((this.GroupCameraRemoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupCameraRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupCameraRemoveAsync(int cameraID, int groupID) {
            this.GroupCameraRemoveAsync(cameraID, groupID, null);
        }
        
        public void GroupCameraRemoveAsync(int cameraID, int groupID, object userState) {
            if ((this.onBeginGroupCameraRemoveDelegate == null)) {
                this.onBeginGroupCameraRemoveDelegate = new BeginOperationDelegate(this.OnBeginGroupCameraRemove);
            }
            if ((this.onEndGroupCameraRemoveDelegate == null)) {
                this.onEndGroupCameraRemoveDelegate = new EndOperationDelegate(this.OnEndGroupCameraRemove);
            }
            if ((this.onGroupCameraRemoveCompletedDelegate == null)) {
                this.onGroupCameraRemoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupCameraRemoveCompleted);
            }
            base.InvokeAsync(this.onBeginGroupCameraRemoveDelegate, new object[] {
                        cameraID,
                        groupID}, this.onEndGroupCameraRemoveDelegate, this.onGroupCameraRemoveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserRemove(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserRemove(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserRemove(System.IAsyncResult result) {
            base.Channel.EndUserRemove(result);
        }
        
        private System.IAsyncResult OnBeginUserRemove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserRemove(userID, callback, asyncState);
        }
        
        private object[] OnEndUserRemove(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserRemove(result);
            return null;
        }
        
        private void OnUserRemoveCompleted(object state) {
            if ((this.UserRemoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserRemoveAsync(int userID) {
            this.UserRemoveAsync(userID, null);
        }
        
        public void UserRemoveAsync(int userID, object userState) {
            if ((this.onBeginUserRemoveDelegate == null)) {
                this.onBeginUserRemoveDelegate = new BeginOperationDelegate(this.OnBeginUserRemove);
            }
            if ((this.onEndUserRemoveDelegate == null)) {
                this.onEndUserRemoveDelegate = new EndOperationDelegate(this.OnEndUserRemove);
            }
            if ((this.onUserRemoveCompletedDelegate == null)) {
                this.onUserRemoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserRemoveCompleted);
            }
            base.InvokeAsync(this.onBeginUserRemoveDelegate, new object[] {
                        userID}, this.onEndUserRemoveDelegate, this.onUserRemoveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetID(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetID(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetID(System.IAsyncResult result) {
            return base.Channel.EndUserGetID(result);
        }
        
        private System.IAsyncResult OnBeginUserGetID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetID(email, callback, asyncState);
        }
        
        private object[] OnEndUserGetID(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetIDCompleted(object state) {
            if ((this.UserGetIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetIDCompleted(this, new UserGetIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetIDAsync(string email) {
            this.UserGetIDAsync(email, null);
        }
        
        public void UserGetIDAsync(string email, object userState) {
            if ((this.onBeginUserGetIDDelegate == null)) {
                this.onBeginUserGetIDDelegate = new BeginOperationDelegate(this.OnBeginUserGetID);
            }
            if ((this.onEndUserGetIDDelegate == null)) {
                this.onEndUserGetIDDelegate = new EndOperationDelegate(this.OnEndUserGetID);
            }
            if ((this.onUserGetIDCompletedDelegate == null)) {
                this.onUserGetIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetIDCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetIDDelegate, new object[] {
                        email}, this.onEndUserGetIDDelegate, this.onUserGetIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetEmail(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetEmail(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetEmail(System.IAsyncResult result) {
            return base.Channel.EndUserGetEmail(result);
        }
        
        private System.IAsyncResult OnBeginUserGetEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetEmail(userID, callback, asyncState);
        }
        
        private object[] OnEndUserGetEmail(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetEmailCompleted(object state) {
            if ((this.UserGetEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetEmailCompleted(this, new UserGetEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetEmailAsync(int userID) {
            this.UserGetEmailAsync(userID, null);
        }
        
        public void UserGetEmailAsync(int userID, object userState) {
            if ((this.onBeginUserGetEmailDelegate == null)) {
                this.onBeginUserGetEmailDelegate = new BeginOperationDelegate(this.OnBeginUserGetEmail);
            }
            if ((this.onEndUserGetEmailDelegate == null)) {
                this.onEndUserGetEmailDelegate = new EndOperationDelegate(this.OnEndUserGetEmail);
            }
            if ((this.onUserGetEmailCompletedDelegate == null)) {
                this.onUserGetEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetEmailCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetEmailDelegate, new object[] {
                        userID}, this.onEndUserGetEmailDelegate, this.onUserGetEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetPassword(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetPassword(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetPassword(System.IAsyncResult result) {
            return base.Channel.EndUserGetPassword(result);
        }
        
        private System.IAsyncResult OnBeginUserGetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetPassword(userID, callback, asyncState);
        }
        
        private object[] OnEndUserGetPassword(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetPasswordCompleted(object state) {
            if ((this.UserGetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetPasswordCompleted(this, new UserGetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetPasswordAsync(int userID) {
            this.UserGetPasswordAsync(userID, null);
        }
        
        public void UserGetPasswordAsync(int userID, object userState) {
            if ((this.onBeginUserGetPasswordDelegate == null)) {
                this.onBeginUserGetPasswordDelegate = new BeginOperationDelegate(this.OnBeginUserGetPassword);
            }
            if ((this.onEndUserGetPasswordDelegate == null)) {
                this.onEndUserGetPasswordDelegate = new EndOperationDelegate(this.OnEndUserGetPassword);
            }
            if ((this.onUserGetPasswordCompletedDelegate == null)) {
                this.onUserGetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetPasswordDelegate, new object[] {
                        userID}, this.onEndUserGetPasswordDelegate, this.onUserGetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetName(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetName(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetName(System.IAsyncResult result) {
            return base.Channel.EndUserGetName(result);
        }
        
        private System.IAsyncResult OnBeginUserGetName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetName(userID, callback, asyncState);
        }
        
        private object[] OnEndUserGetName(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetNameCompleted(object state) {
            if ((this.UserGetNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetNameCompleted(this, new UserGetNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetNameAsync(int userID) {
            this.UserGetNameAsync(userID, null);
        }
        
        public void UserGetNameAsync(int userID, object userState) {
            if ((this.onBeginUserGetNameDelegate == null)) {
                this.onBeginUserGetNameDelegate = new BeginOperationDelegate(this.OnBeginUserGetName);
            }
            if ((this.onEndUserGetNameDelegate == null)) {
                this.onEndUserGetNameDelegate = new EndOperationDelegate(this.OnEndUserGetName);
            }
            if ((this.onUserGetNameCompletedDelegate == null)) {
                this.onUserGetNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetNameCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetNameDelegate, new object[] {
                        userID}, this.onEndUserGetNameDelegate, this.onUserGetNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetDescription(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetDescription(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetDescription(System.IAsyncResult result) {
            return base.Channel.EndUserGetDescription(result);
        }
        
        private System.IAsyncResult OnBeginUserGetDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetDescription(userID, callback, asyncState);
        }
        
        private object[] OnEndUserGetDescription(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetDescriptionCompleted(object state) {
            if ((this.UserGetDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetDescriptionCompleted(this, new UserGetDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetDescriptionAsync(int userID) {
            this.UserGetDescriptionAsync(userID, null);
        }
        
        public void UserGetDescriptionAsync(int userID, object userState) {
            if ((this.onBeginUserGetDescriptionDelegate == null)) {
                this.onBeginUserGetDescriptionDelegate = new BeginOperationDelegate(this.OnBeginUserGetDescription);
            }
            if ((this.onEndUserGetDescriptionDelegate == null)) {
                this.onEndUserGetDescriptionDelegate = new EndOperationDelegate(this.OnEndUserGetDescription);
            }
            if ((this.onUserGetDescriptionCompletedDelegate == null)) {
                this.onUserGetDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetDescriptionDelegate, new object[] {
                        userID}, this.onEndUserGetDescriptionDelegate, this.onUserGetDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetIcon(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetIcon(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetIcon(System.IAsyncResult result) {
            return base.Channel.EndUserGetIcon(result);
        }
        
        private System.IAsyncResult OnBeginUserGetIcon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetIcon(userID, callback, asyncState);
        }
        
        private object[] OnEndUserGetIcon(System.IAsyncResult result) {
            byte[] retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetIcon(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetIconCompleted(object state) {
            if ((this.UserGetIconCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetIconCompleted(this, new UserGetIconCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetIconAsync(int userID) {
            this.UserGetIconAsync(userID, null);
        }
        
        public void UserGetIconAsync(int userID, object userState) {
            if ((this.onBeginUserGetIconDelegate == null)) {
                this.onBeginUserGetIconDelegate = new BeginOperationDelegate(this.OnBeginUserGetIcon);
            }
            if ((this.onEndUserGetIconDelegate == null)) {
                this.onEndUserGetIconDelegate = new EndOperationDelegate(this.OnEndUserGetIcon);
            }
            if ((this.onUserGetIconCompletedDelegate == null)) {
                this.onUserGetIconCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetIconCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetIconDelegate, new object[] {
                        userID}, this.onEndUserGetIconDelegate, this.onUserGetIconCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetRegistrationDate(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetRegistrationDate(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetRegistrationDate(System.IAsyncResult result) {
            return base.Channel.EndUserGetRegistrationDate(result);
        }
        
        private System.IAsyncResult OnBeginUserGetRegistrationDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetRegistrationDate(userID, callback, asyncState);
        }
        
        private object[] OnEndUserGetRegistrationDate(System.IAsyncResult result) {
            System.DateTime retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetRegistrationDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetRegistrationDateCompleted(object state) {
            if ((this.UserGetRegistrationDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetRegistrationDateCompleted(this, new UserGetRegistrationDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetRegistrationDateAsync(int userID) {
            this.UserGetRegistrationDateAsync(userID, null);
        }
        
        public void UserGetRegistrationDateAsync(int userID, object userState) {
            if ((this.onBeginUserGetRegistrationDateDelegate == null)) {
                this.onBeginUserGetRegistrationDateDelegate = new BeginOperationDelegate(this.OnBeginUserGetRegistrationDate);
            }
            if ((this.onEndUserGetRegistrationDateDelegate == null)) {
                this.onEndUserGetRegistrationDateDelegate = new EndOperationDelegate(this.OnEndUserGetRegistrationDate);
            }
            if ((this.onUserGetRegistrationDateCompletedDelegate == null)) {
                this.onUserGetRegistrationDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetRegistrationDateCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetRegistrationDateDelegate, new object[] {
                        userID}, this.onEndUserGetRegistrationDateDelegate, this.onUserGetRegistrationDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserGetGroups(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserGetGroups(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserGetGroups(System.IAsyncResult result) {
            return base.Channel.EndUserGetGroups(result);
        }
        
        private System.IAsyncResult OnBeginUserGetGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserGetGroups(userID, callback, asyncState);
        }
        
        private object[] OnEndUserGetGroups(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserGetGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserGetGroupsCompleted(object state) {
            if ((this.UserGetGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserGetGroupsCompleted(this, new UserGetGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserGetGroupsAsync(int userID) {
            this.UserGetGroupsAsync(userID, null);
        }
        
        public void UserGetGroupsAsync(int userID, object userState) {
            if ((this.onBeginUserGetGroupsDelegate == null)) {
                this.onBeginUserGetGroupsDelegate = new BeginOperationDelegate(this.OnBeginUserGetGroups);
            }
            if ((this.onEndUserGetGroupsDelegate == null)) {
                this.onEndUserGetGroupsDelegate = new EndOperationDelegate(this.OnEndUserGetGroups);
            }
            if ((this.onUserGetGroupsCompletedDelegate == null)) {
                this.onUserGetGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserGetGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginUserGetGroupsDelegate, new object[] {
                        userID}, this.onEndUserGetGroupsDelegate, this.onUserGetGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserSetPassword(int userID, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserSetPassword(userID, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserSetPassword(System.IAsyncResult result) {
            base.Channel.EndUserSetPassword(result);
        }
        
        private System.IAsyncResult OnBeginUserSetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserSetPassword(userID, password, callback, asyncState);
        }
        
        private object[] OnEndUserSetPassword(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserSetPassword(result);
            return null;
        }
        
        private void OnUserSetPasswordCompleted(object state) {
            if ((this.UserSetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserSetPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserSetPasswordAsync(int userID, string password) {
            this.UserSetPasswordAsync(userID, password, null);
        }
        
        public void UserSetPasswordAsync(int userID, string password, object userState) {
            if ((this.onBeginUserSetPasswordDelegate == null)) {
                this.onBeginUserSetPasswordDelegate = new BeginOperationDelegate(this.OnBeginUserSetPassword);
            }
            if ((this.onEndUserSetPasswordDelegate == null)) {
                this.onEndUserSetPasswordDelegate = new EndOperationDelegate(this.OnEndUserSetPassword);
            }
            if ((this.onUserSetPasswordCompletedDelegate == null)) {
                this.onUserSetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserSetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginUserSetPasswordDelegate, new object[] {
                        userID,
                        password}, this.onEndUserSetPasswordDelegate, this.onUserSetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserSetName(int userID, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserSetName(userID, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserSetName(System.IAsyncResult result) {
            base.Channel.EndUserSetName(result);
        }
        
        private System.IAsyncResult OnBeginUserSetName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserSetName(userID, name, callback, asyncState);
        }
        
        private object[] OnEndUserSetName(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserSetName(result);
            return null;
        }
        
        private void OnUserSetNameCompleted(object state) {
            if ((this.UserSetNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserSetNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserSetNameAsync(int userID, string name) {
            this.UserSetNameAsync(userID, name, null);
        }
        
        public void UserSetNameAsync(int userID, string name, object userState) {
            if ((this.onBeginUserSetNameDelegate == null)) {
                this.onBeginUserSetNameDelegate = new BeginOperationDelegate(this.OnBeginUserSetName);
            }
            if ((this.onEndUserSetNameDelegate == null)) {
                this.onEndUserSetNameDelegate = new EndOperationDelegate(this.OnEndUserSetName);
            }
            if ((this.onUserSetNameCompletedDelegate == null)) {
                this.onUserSetNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserSetNameCompleted);
            }
            base.InvokeAsync(this.onBeginUserSetNameDelegate, new object[] {
                        userID,
                        name}, this.onEndUserSetNameDelegate, this.onUserSetNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserSetDescription(int userID, string description, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserSetDescription(userID, description, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserSetDescription(System.IAsyncResult result) {
            base.Channel.EndUserSetDescription(result);
        }
        
        private System.IAsyncResult OnBeginUserSetDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            string description = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserSetDescription(userID, description, callback, asyncState);
        }
        
        private object[] OnEndUserSetDescription(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserSetDescription(result);
            return null;
        }
        
        private void OnUserSetDescriptionCompleted(object state) {
            if ((this.UserSetDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserSetDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserSetDescriptionAsync(int userID, string description) {
            this.UserSetDescriptionAsync(userID, description, null);
        }
        
        public void UserSetDescriptionAsync(int userID, string description, object userState) {
            if ((this.onBeginUserSetDescriptionDelegate == null)) {
                this.onBeginUserSetDescriptionDelegate = new BeginOperationDelegate(this.OnBeginUserSetDescription);
            }
            if ((this.onEndUserSetDescriptionDelegate == null)) {
                this.onEndUserSetDescriptionDelegate = new EndOperationDelegate(this.OnEndUserSetDescription);
            }
            if ((this.onUserSetDescriptionCompletedDelegate == null)) {
                this.onUserSetDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserSetDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginUserSetDescriptionDelegate, new object[] {
                        userID,
                        description}, this.onEndUserSetDescriptionDelegate, this.onUserSetDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginUserSetIcon(int userID, byte[] icon, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserSetIcon(userID, icon, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndUserSetIcon(System.IAsyncResult result) {
            base.Channel.EndUserSetIcon(result);
        }
        
        private System.IAsyncResult OnBeginUserSetIcon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            byte[] icon = ((byte[])(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginUserSetIcon(userID, icon, callback, asyncState);
        }
        
        private object[] OnEndUserSetIcon(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndUserSetIcon(result);
            return null;
        }
        
        private void OnUserSetIconCompleted(object state) {
            if ((this.UserSetIconCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserSetIconCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserSetIconAsync(int userID, byte[] icon) {
            this.UserSetIconAsync(userID, icon, null);
        }
        
        public void UserSetIconAsync(int userID, byte[] icon, object userState) {
            if ((this.onBeginUserSetIconDelegate == null)) {
                this.onBeginUserSetIconDelegate = new BeginOperationDelegate(this.OnBeginUserSetIcon);
            }
            if ((this.onEndUserSetIconDelegate == null)) {
                this.onEndUserSetIconDelegate = new EndOperationDelegate(this.OnEndUserSetIcon);
            }
            if ((this.onUserSetIconCompletedDelegate == null)) {
                this.onUserSetIconCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserSetIconCompleted);
            }
            base.InvokeAsync(this.onBeginUserSetIconDelegate, new object[] {
                        userID,
                        icon}, this.onEndUserSetIconDelegate, this.onUserSetIconCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraCheckPathAvailability(string path, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraCheckPathAvailability(path, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraCheckPathAvailability(System.IAsyncResult result) {
            return base.Channel.EndCameraCheckPathAvailability(result);
        }
        
        private System.IAsyncResult OnBeginCameraCheckPathAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraCheckPathAvailability(path, callback, asyncState);
        }
        
        private object[] OnEndCameraCheckPathAvailability(System.IAsyncResult result) {
            bool retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraCheckPathAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraCheckPathAvailabilityCompleted(object state) {
            if ((this.CameraCheckPathAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraCheckPathAvailabilityCompleted(this, new CameraCheckPathAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraCheckPathAvailabilityAsync(string path) {
            this.CameraCheckPathAvailabilityAsync(path, null);
        }
        
        public void CameraCheckPathAvailabilityAsync(string path, object userState) {
            if ((this.onBeginCameraCheckPathAvailabilityDelegate == null)) {
                this.onBeginCameraCheckPathAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginCameraCheckPathAvailability);
            }
            if ((this.onEndCameraCheckPathAvailabilityDelegate == null)) {
                this.onEndCameraCheckPathAvailabilityDelegate = new EndOperationDelegate(this.OnEndCameraCheckPathAvailability);
            }
            if ((this.onCameraCheckPathAvailabilityCompletedDelegate == null)) {
                this.onCameraCheckPathAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraCheckPathAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginCameraCheckPathAvailabilityDelegate, new object[] {
                        path}, this.onEndCameraCheckPathAvailabilityDelegate, this.onCameraCheckPathAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraRegister(string name, string path, string description, byte[] icon, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraRegister(name, path, description, icon, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraRegister(System.IAsyncResult result) {
            return base.Channel.EndCameraRegister(result);
        }
        
        private System.IAsyncResult OnBeginCameraRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string path = ((string)(inValues[1]));
            string description = ((string)(inValues[2]));
            byte[] icon = ((byte[])(inValues[3]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraRegister(name, path, description, icon, callback, asyncState);
        }
        
        private object[] OnEndCameraRegister(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraRegisterCompleted(object state) {
            if ((this.CameraRegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraRegisterCompleted(this, new CameraRegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraRegisterAsync(string name, string path, string description, byte[] icon) {
            this.CameraRegisterAsync(name, path, description, icon, null);
        }
        
        public void CameraRegisterAsync(string name, string path, string description, byte[] icon, object userState) {
            if ((this.onBeginCameraRegisterDelegate == null)) {
                this.onBeginCameraRegisterDelegate = new BeginOperationDelegate(this.OnBeginCameraRegister);
            }
            if ((this.onEndCameraRegisterDelegate == null)) {
                this.onEndCameraRegisterDelegate = new EndOperationDelegate(this.OnEndCameraRegister);
            }
            if ((this.onCameraRegisterCompletedDelegate == null)) {
                this.onCameraRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginCameraRegisterDelegate, new object[] {
                        name,
                        path,
                        description,
                        icon}, this.onEndCameraRegisterDelegate, this.onCameraRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraRemove(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraRemove(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraRemove(System.IAsyncResult result) {
            base.Channel.EndCameraRemove(result);
        }
        
        private System.IAsyncResult OnBeginCameraRemove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraRemove(cameraID, callback, asyncState);
        }
        
        private object[] OnEndCameraRemove(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraRemove(result);
            return null;
        }
        
        private void OnCameraRemoveCompleted(object state) {
            if ((this.CameraRemoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraRemoveAsync(int cameraID) {
            this.CameraRemoveAsync(cameraID, null);
        }
        
        public void CameraRemoveAsync(int cameraID, object userState) {
            if ((this.onBeginCameraRemoveDelegate == null)) {
                this.onBeginCameraRemoveDelegate = new BeginOperationDelegate(this.OnBeginCameraRemove);
            }
            if ((this.onEndCameraRemoveDelegate == null)) {
                this.onEndCameraRemoveDelegate = new EndOperationDelegate(this.OnEndCameraRemove);
            }
            if ((this.onCameraRemoveCompletedDelegate == null)) {
                this.onCameraRemoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraRemoveCompleted);
            }
            base.InvokeAsync(this.onBeginCameraRemoveDelegate, new object[] {
                        cameraID}, this.onEndCameraRemoveDelegate, this.onCameraRemoveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraGetID(string path, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraGetID(path, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraGetID(System.IAsyncResult result) {
            return base.Channel.EndCameraGetID(result);
        }
        
        private System.IAsyncResult OnBeginCameraGetID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraGetID(path, callback, asyncState);
        }
        
        private object[] OnEndCameraGetID(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraGetID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraGetIDCompleted(object state) {
            if ((this.CameraGetIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraGetIDCompleted(this, new CameraGetIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraGetIDAsync(string path) {
            this.CameraGetIDAsync(path, null);
        }
        
        public void CameraGetIDAsync(string path, object userState) {
            if ((this.onBeginCameraGetIDDelegate == null)) {
                this.onBeginCameraGetIDDelegate = new BeginOperationDelegate(this.OnBeginCameraGetID);
            }
            if ((this.onEndCameraGetIDDelegate == null)) {
                this.onEndCameraGetIDDelegate = new EndOperationDelegate(this.OnEndCameraGetID);
            }
            if ((this.onCameraGetIDCompletedDelegate == null)) {
                this.onCameraGetIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraGetIDCompleted);
            }
            base.InvokeAsync(this.onBeginCameraGetIDDelegate, new object[] {
                        path}, this.onEndCameraGetIDDelegate, this.onCameraGetIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraGetPath(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraGetPath(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraGetPath(System.IAsyncResult result) {
            return base.Channel.EndCameraGetPath(result);
        }
        
        private System.IAsyncResult OnBeginCameraGetPath(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraGetPath(cameraID, callback, asyncState);
        }
        
        private object[] OnEndCameraGetPath(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraGetPath(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraGetPathCompleted(object state) {
            if ((this.CameraGetPathCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraGetPathCompleted(this, new CameraGetPathCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraGetPathAsync(int cameraID) {
            this.CameraGetPathAsync(cameraID, null);
        }
        
        public void CameraGetPathAsync(int cameraID, object userState) {
            if ((this.onBeginCameraGetPathDelegate == null)) {
                this.onBeginCameraGetPathDelegate = new BeginOperationDelegate(this.OnBeginCameraGetPath);
            }
            if ((this.onEndCameraGetPathDelegate == null)) {
                this.onEndCameraGetPathDelegate = new EndOperationDelegate(this.OnEndCameraGetPath);
            }
            if ((this.onCameraGetPathCompletedDelegate == null)) {
                this.onCameraGetPathCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraGetPathCompleted);
            }
            base.InvokeAsync(this.onBeginCameraGetPathDelegate, new object[] {
                        cameraID}, this.onEndCameraGetPathDelegate, this.onCameraGetPathCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraGetName(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraGetName(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraGetName(System.IAsyncResult result) {
            return base.Channel.EndCameraGetName(result);
        }
        
        private System.IAsyncResult OnBeginCameraGetName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraGetName(cameraID, callback, asyncState);
        }
        
        private object[] OnEndCameraGetName(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraGetName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraGetNameCompleted(object state) {
            if ((this.CameraGetNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraGetNameCompleted(this, new CameraGetNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraGetNameAsync(int cameraID) {
            this.CameraGetNameAsync(cameraID, null);
        }
        
        public void CameraGetNameAsync(int cameraID, object userState) {
            if ((this.onBeginCameraGetNameDelegate == null)) {
                this.onBeginCameraGetNameDelegate = new BeginOperationDelegate(this.OnBeginCameraGetName);
            }
            if ((this.onEndCameraGetNameDelegate == null)) {
                this.onEndCameraGetNameDelegate = new EndOperationDelegate(this.OnEndCameraGetName);
            }
            if ((this.onCameraGetNameCompletedDelegate == null)) {
                this.onCameraGetNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraGetNameCompleted);
            }
            base.InvokeAsync(this.onBeginCameraGetNameDelegate, new object[] {
                        cameraID}, this.onEndCameraGetNameDelegate, this.onCameraGetNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraGetDescription(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraGetDescription(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraGetDescription(System.IAsyncResult result) {
            return base.Channel.EndCameraGetDescription(result);
        }
        
        private System.IAsyncResult OnBeginCameraGetDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraGetDescription(cameraID, callback, asyncState);
        }
        
        private object[] OnEndCameraGetDescription(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraGetDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraGetDescriptionCompleted(object state) {
            if ((this.CameraGetDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraGetDescriptionCompleted(this, new CameraGetDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraGetDescriptionAsync(int cameraID) {
            this.CameraGetDescriptionAsync(cameraID, null);
        }
        
        public void CameraGetDescriptionAsync(int cameraID, object userState) {
            if ((this.onBeginCameraGetDescriptionDelegate == null)) {
                this.onBeginCameraGetDescriptionDelegate = new BeginOperationDelegate(this.OnBeginCameraGetDescription);
            }
            if ((this.onEndCameraGetDescriptionDelegate == null)) {
                this.onEndCameraGetDescriptionDelegate = new EndOperationDelegate(this.OnEndCameraGetDescription);
            }
            if ((this.onCameraGetDescriptionCompletedDelegate == null)) {
                this.onCameraGetDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraGetDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginCameraGetDescriptionDelegate, new object[] {
                        cameraID}, this.onEndCameraGetDescriptionDelegate, this.onCameraGetDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraGetIcon(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraGetIcon(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraGetIcon(System.IAsyncResult result) {
            return base.Channel.EndCameraGetIcon(result);
        }
        
        private System.IAsyncResult OnBeginCameraGetIcon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraGetIcon(cameraID, callback, asyncState);
        }
        
        private object[] OnEndCameraGetIcon(System.IAsyncResult result) {
            byte[] retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraGetIcon(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraGetIconCompleted(object state) {
            if ((this.CameraGetIconCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraGetIconCompleted(this, new CameraGetIconCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraGetIconAsync(int cameraID) {
            this.CameraGetIconAsync(cameraID, null);
        }
        
        public void CameraGetIconAsync(int cameraID, object userState) {
            if ((this.onBeginCameraGetIconDelegate == null)) {
                this.onBeginCameraGetIconDelegate = new BeginOperationDelegate(this.OnBeginCameraGetIcon);
            }
            if ((this.onEndCameraGetIconDelegate == null)) {
                this.onEndCameraGetIconDelegate = new EndOperationDelegate(this.OnEndCameraGetIcon);
            }
            if ((this.onCameraGetIconCompletedDelegate == null)) {
                this.onCameraGetIconCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraGetIconCompleted);
            }
            base.InvokeAsync(this.onBeginCameraGetIconDelegate, new object[] {
                        cameraID}, this.onEndCameraGetIconDelegate, this.onCameraGetIconCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraGetRegistrationDate(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraGetRegistrationDate(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraGetRegistrationDate(System.IAsyncResult result) {
            return base.Channel.EndCameraGetRegistrationDate(result);
        }
        
        private System.IAsyncResult OnBeginCameraGetRegistrationDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraGetRegistrationDate(cameraID, callback, asyncState);
        }
        
        private object[] OnEndCameraGetRegistrationDate(System.IAsyncResult result) {
            System.DateTime retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraGetRegistrationDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraGetRegistrationDateCompleted(object state) {
            if ((this.CameraGetRegistrationDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraGetRegistrationDateCompleted(this, new CameraGetRegistrationDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraGetRegistrationDateAsync(int cameraID) {
            this.CameraGetRegistrationDateAsync(cameraID, null);
        }
        
        public void CameraGetRegistrationDateAsync(int cameraID, object userState) {
            if ((this.onBeginCameraGetRegistrationDateDelegate == null)) {
                this.onBeginCameraGetRegistrationDateDelegate = new BeginOperationDelegate(this.OnBeginCameraGetRegistrationDate);
            }
            if ((this.onEndCameraGetRegistrationDateDelegate == null)) {
                this.onEndCameraGetRegistrationDateDelegate = new EndOperationDelegate(this.OnEndCameraGetRegistrationDate);
            }
            if ((this.onCameraGetRegistrationDateCompletedDelegate == null)) {
                this.onCameraGetRegistrationDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraGetRegistrationDateCompleted);
            }
            base.InvokeAsync(this.onBeginCameraGetRegistrationDateDelegate, new object[] {
                        cameraID}, this.onEndCameraGetRegistrationDateDelegate, this.onCameraGetRegistrationDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraGetGroups(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraGetGroups(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraGetGroups(System.IAsyncResult result) {
            return base.Channel.EndCameraGetGroups(result);
        }
        
        private System.IAsyncResult OnBeginCameraGetGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraGetGroups(cameraID, callback, asyncState);
        }
        
        private object[] OnEndCameraGetGroups(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraGetGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCameraGetGroupsCompleted(object state) {
            if ((this.CameraGetGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraGetGroupsCompleted(this, new CameraGetGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraGetGroupsAsync(int cameraID) {
            this.CameraGetGroupsAsync(cameraID, null);
        }
        
        public void CameraGetGroupsAsync(int cameraID, object userState) {
            if ((this.onBeginCameraGetGroupsDelegate == null)) {
                this.onBeginCameraGetGroupsDelegate = new BeginOperationDelegate(this.OnBeginCameraGetGroups);
            }
            if ((this.onEndCameraGetGroupsDelegate == null)) {
                this.onEndCameraGetGroupsDelegate = new EndOperationDelegate(this.OnEndCameraGetGroups);
            }
            if ((this.onCameraGetGroupsCompletedDelegate == null)) {
                this.onCameraGetGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraGetGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginCameraGetGroupsDelegate, new object[] {
                        cameraID}, this.onEndCameraGetGroupsDelegate, this.onCameraGetGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraSetName(int cameraID, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraSetName(cameraID, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraSetName(System.IAsyncResult result) {
            base.Channel.EndCameraSetName(result);
        }
        
        private System.IAsyncResult OnBeginCameraSetName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraSetName(cameraID, name, callback, asyncState);
        }
        
        private object[] OnEndCameraSetName(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraSetName(result);
            return null;
        }
        
        private void OnCameraSetNameCompleted(object state) {
            if ((this.CameraSetNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraSetNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraSetNameAsync(int cameraID, string name) {
            this.CameraSetNameAsync(cameraID, name, null);
        }
        
        public void CameraSetNameAsync(int cameraID, string name, object userState) {
            if ((this.onBeginCameraSetNameDelegate == null)) {
                this.onBeginCameraSetNameDelegate = new BeginOperationDelegate(this.OnBeginCameraSetName);
            }
            if ((this.onEndCameraSetNameDelegate == null)) {
                this.onEndCameraSetNameDelegate = new EndOperationDelegate(this.OnEndCameraSetName);
            }
            if ((this.onCameraSetNameCompletedDelegate == null)) {
                this.onCameraSetNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraSetNameCompleted);
            }
            base.InvokeAsync(this.onBeginCameraSetNameDelegate, new object[] {
                        cameraID,
                        name}, this.onEndCameraSetNameDelegate, this.onCameraSetNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraSetDescription(int cameraID, string description, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraSetDescription(cameraID, description, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraSetDescription(System.IAsyncResult result) {
            base.Channel.EndCameraSetDescription(result);
        }
        
        private System.IAsyncResult OnBeginCameraSetDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            string description = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraSetDescription(cameraID, description, callback, asyncState);
        }
        
        private object[] OnEndCameraSetDescription(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraSetDescription(result);
            return null;
        }
        
        private void OnCameraSetDescriptionCompleted(object state) {
            if ((this.CameraSetDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraSetDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraSetDescriptionAsync(int cameraID, string description) {
            this.CameraSetDescriptionAsync(cameraID, description, null);
        }
        
        public void CameraSetDescriptionAsync(int cameraID, string description, object userState) {
            if ((this.onBeginCameraSetDescriptionDelegate == null)) {
                this.onBeginCameraSetDescriptionDelegate = new BeginOperationDelegate(this.OnBeginCameraSetDescription);
            }
            if ((this.onEndCameraSetDescriptionDelegate == null)) {
                this.onEndCameraSetDescriptionDelegate = new EndOperationDelegate(this.OnEndCameraSetDescription);
            }
            if ((this.onCameraSetDescriptionCompletedDelegate == null)) {
                this.onCameraSetDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraSetDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginCameraSetDescriptionDelegate, new object[] {
                        cameraID,
                        description}, this.onEndCameraSetDescriptionDelegate, this.onCameraSetDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginCameraSetIcon(int cameraID, byte[] icon, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCameraSetIcon(cameraID, icon, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndCameraSetIcon(System.IAsyncResult result) {
            base.Channel.EndCameraSetIcon(result);
        }
        
        private System.IAsyncResult OnBeginCameraSetIcon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            byte[] icon = ((byte[])(inValues[1]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginCameraSetIcon(cameraID, icon, callback, asyncState);
        }
        
        private object[] OnEndCameraSetIcon(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndCameraSetIcon(result);
            return null;
        }
        
        private void OnCameraSetIconCompleted(object state) {
            if ((this.CameraSetIconCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CameraSetIconCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CameraSetIconAsync(int cameraID, byte[] icon) {
            this.CameraSetIconAsync(cameraID, icon, null);
        }
        
        public void CameraSetIconAsync(int cameraID, byte[] icon, object userState) {
            if ((this.onBeginCameraSetIconDelegate == null)) {
                this.onBeginCameraSetIconDelegate = new BeginOperationDelegate(this.OnBeginCameraSetIcon);
            }
            if ((this.onEndCameraSetIconDelegate == null)) {
                this.onEndCameraSetIconDelegate = new EndOperationDelegate(this.OnEndCameraSetIcon);
            }
            if ((this.onCameraSetIconCompletedDelegate == null)) {
                this.onCameraSetIconCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCameraSetIconCompleted);
            }
            base.InvokeAsync(this.onBeginCameraSetIconDelegate, new object[] {
                        cameraID,
                        icon}, this.onEndCameraSetIconDelegate, this.onCameraSetIconCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupRegister(string name, string description, byte[] icon, int privacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupRegister(name, description, icon, privacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupRegister(System.IAsyncResult result) {
            return base.Channel.EndGroupRegister(result);
        }
        
        private System.IAsyncResult OnBeginGroupRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string description = ((string)(inValues[1]));
            byte[] icon = ((byte[])(inValues[2]));
            int privacy = ((int)(inValues[3]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupRegister(name, description, icon, privacy, callback, asyncState);
        }
        
        private object[] OnEndGroupRegister(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupRegisterCompleted(object state) {
            if ((this.GroupRegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupRegisterCompleted(this, new GroupRegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupRegisterAsync(string name, string description, byte[] icon, int privacy) {
            this.GroupRegisterAsync(name, description, icon, privacy, null);
        }
        
        public void GroupRegisterAsync(string name, string description, byte[] icon, int privacy, object userState) {
            if ((this.onBeginGroupRegisterDelegate == null)) {
                this.onBeginGroupRegisterDelegate = new BeginOperationDelegate(this.OnBeginGroupRegister);
            }
            if ((this.onEndGroupRegisterDelegate == null)) {
                this.onEndGroupRegisterDelegate = new EndOperationDelegate(this.OnEndGroupRegister);
            }
            if ((this.onGroupRegisterCompletedDelegate == null)) {
                this.onGroupRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginGroupRegisterDelegate, new object[] {
                        name,
                        description,
                        icon,
                        privacy}, this.onEndGroupRegisterDelegate, this.onGroupRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupRemove(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupRemove(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupRemove(System.IAsyncResult result) {
            base.Channel.EndGroupRemove(result);
        }
        
        private System.IAsyncResult OnBeginGroupRemove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupRemove(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupRemove(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupRemove(result);
            return null;
        }
        
        private void OnGroupRemoveCompleted(object state) {
            if ((this.GroupRemoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupRemoveAsync(int groupID) {
            this.GroupRemoveAsync(groupID, null);
        }
        
        public void GroupRemoveAsync(int groupID, object userState) {
            if ((this.onBeginGroupRemoveDelegate == null)) {
                this.onBeginGroupRemoveDelegate = new BeginOperationDelegate(this.OnBeginGroupRemove);
            }
            if ((this.onEndGroupRemoveDelegate == null)) {
                this.onEndGroupRemoveDelegate = new EndOperationDelegate(this.OnEndGroupRemove);
            }
            if ((this.onGroupRemoveCompletedDelegate == null)) {
                this.onGroupRemoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupRemoveCompleted);
            }
            base.InvokeAsync(this.onBeginGroupRemoveDelegate, new object[] {
                        groupID}, this.onEndGroupRemoveDelegate, this.onGroupRemoveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetID(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetID(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetID(System.IAsyncResult result) {
            return base.Channel.EndGroupGetID(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetID(name, callback, asyncState);
        }
        
        private object[] OnEndGroupGetID(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetIDCompleted(object state) {
            if ((this.GroupGetIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetIDCompleted(this, new GroupGetIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetIDAsync(string name) {
            this.GroupGetIDAsync(name, null);
        }
        
        public void GroupGetIDAsync(string name, object userState) {
            if ((this.onBeginGroupGetIDDelegate == null)) {
                this.onBeginGroupGetIDDelegate = new BeginOperationDelegate(this.OnBeginGroupGetID);
            }
            if ((this.onEndGroupGetIDDelegate == null)) {
                this.onEndGroupGetIDDelegate = new EndOperationDelegate(this.OnEndGroupGetID);
            }
            if ((this.onGroupGetIDCompletedDelegate == null)) {
                this.onGroupGetIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetIDCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetIDDelegate, new object[] {
                        name}, this.onEndGroupGetIDDelegate, this.onGroupGetIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetName(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetName(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetName(System.IAsyncResult result) {
            return base.Channel.EndGroupGetName(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetName(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupGetName(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetNameCompleted(object state) {
            if ((this.GroupGetNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetNameCompleted(this, new GroupGetNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetNameAsync(int groupID) {
            this.GroupGetNameAsync(groupID, null);
        }
        
        public void GroupGetNameAsync(int groupID, object userState) {
            if ((this.onBeginGroupGetNameDelegate == null)) {
                this.onBeginGroupGetNameDelegate = new BeginOperationDelegate(this.OnBeginGroupGetName);
            }
            if ((this.onEndGroupGetNameDelegate == null)) {
                this.onEndGroupGetNameDelegate = new EndOperationDelegate(this.OnEndGroupGetName);
            }
            if ((this.onGroupGetNameCompletedDelegate == null)) {
                this.onGroupGetNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetNameCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetNameDelegate, new object[] {
                        groupID}, this.onEndGroupGetNameDelegate, this.onGroupGetNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetDescription(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetDescription(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetDescription(System.IAsyncResult result) {
            return base.Channel.EndGroupGetDescription(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetDescription(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupGetDescription(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetDescriptionCompleted(object state) {
            if ((this.GroupGetDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetDescriptionCompleted(this, new GroupGetDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetDescriptionAsync(int groupID) {
            this.GroupGetDescriptionAsync(groupID, null);
        }
        
        public void GroupGetDescriptionAsync(int groupID, object userState) {
            if ((this.onBeginGroupGetDescriptionDelegate == null)) {
                this.onBeginGroupGetDescriptionDelegate = new BeginOperationDelegate(this.OnBeginGroupGetDescription);
            }
            if ((this.onEndGroupGetDescriptionDelegate == null)) {
                this.onEndGroupGetDescriptionDelegate = new EndOperationDelegate(this.OnEndGroupGetDescription);
            }
            if ((this.onGroupGetDescriptionCompletedDelegate == null)) {
                this.onGroupGetDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetDescriptionDelegate, new object[] {
                        groupID}, this.onEndGroupGetDescriptionDelegate, this.onGroupGetDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.BeginGroupGetIcon(int groupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupGetIcon(groupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract.EndGroupGetIcon(System.IAsyncResult result) {
            return base.Channel.EndGroupGetIcon(result);
        }
        
        private System.IAsyncResult OnBeginGroupGetIcon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).BeginGroupGetIcon(groupID, callback, asyncState);
        }
        
        private object[] OnEndGroupGetIcon(System.IAsyncResult result) {
            byte[] retVal = ((CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract)(this)).EndGroupGetIcon(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGroupGetIconCompleted(object state) {
            if ((this.GroupGetIconCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupGetIconCompleted(this, new GroupGetIconCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupGetIconAsync(int groupID) {
            this.GroupGetIconAsync(groupID, null);
        }
        
        public void GroupGetIconAsync(int groupID, object userState) {
            if ((this.onBeginGroupGetIconDelegate == null)) {
                this.onBeginGroupGetIconDelegate = new BeginOperationDelegate(this.OnBeginGroupGetIcon);
            }
            if ((this.onEndGroupGetIconDelegate == null)) {
                this.onEndGroupGetIconDelegate = new EndOperationDelegate(this.OnEndGroupGetIcon);
            }
            if ((this.onGroupGetIconCompletedDelegate == null)) {
                this.onGroupGetIconCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupGetIconCompleted);
            }
            base.InvokeAsync(this.onBeginGroupGetIconDelegate, new object[] {
                        groupID}, this.onEndGroupGetIconDelegate, this.onGroupGetIconCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract CreateChannel() {
            return new AccountsServiceContractClientChannel(this);
        }
        
        private class AccountsServiceContractClientChannel : ChannelBase<CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract>, CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract {
            
            public AccountsServiceContractClientChannel(System.ServiceModel.ClientBase<CloudObserver.UserInterface.AccountsServiceReference.AccountsServiceContract> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetControllerServiceUri", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetControllerServiceUri(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetControllerServiceUri", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = controllerServiceUri;
                System.IAsyncResult _result = base.BeginInvoke("SetControllerServiceUri", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetControllerServiceUri(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetControllerServiceUri", _args, result);
            }
            
            public System.IAsyncResult BeginGroupGetPrivacy(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetPrivacy", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGroupGetPrivacy(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GroupGetPrivacy", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupGetRegistrationDate(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetRegistrationDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGroupGetRegistrationDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GroupGetRegistrationDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupGetMembers(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetMembers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndGroupGetMembers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("GroupGetMembers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupGetCameras(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetCameras", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndGroupGetCameras(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("GroupGetCameras", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupSetName(int groupID, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupID;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("GroupSetName", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupSetName(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupSetName", _args, result);
            }
            
            public System.IAsyncResult BeginGroupSetDescription(int groupID, string description, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupID;
                _args[1] = description;
                System.IAsyncResult _result = base.BeginInvoke("GroupSetDescription", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupSetDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupSetDescription", _args, result);
            }
            
            public System.IAsyncResult BeginGroupSetIcon(int groupID, byte[] icon, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupID;
                _args[1] = icon;
                System.IAsyncResult _result = base.BeginInvoke("GroupSetIcon", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupSetIcon(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupSetIcon", _args, result);
            }
            
            public System.IAsyncResult BeginGroupSetPrivacy(int groupID, int privacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupID;
                _args[1] = privacy;
                System.IAsyncResult _result = base.BeginInvoke("GroupSetPrivacy", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupSetPrivacy(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupSetPrivacy", _args, result);
            }
            
            public System.IAsyncResult BeginGroupMemberAdd(int userID, int groupID, int privileges, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userID;
                _args[1] = groupID;
                _args[2] = privileges;
                System.IAsyncResult _result = base.BeginInvoke("GroupMemberAdd", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupMemberAdd(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupMemberAdd", _args, result);
            }
            
            public System.IAsyncResult BeginGroupMemberRemove(int userID, int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupMemberRemove", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupMemberRemove(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupMemberRemove", _args, result);
            }
            
            public System.IAsyncResult BeginGroupMemberGetPrivileges(int userID, int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupMemberGetPrivileges", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGroupMemberGetPrivileges(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GroupMemberGetPrivileges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupMemberSetPrivileges(int userID, int groupID, int privileges, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userID;
                _args[1] = groupID;
                _args[2] = privileges;
                System.IAsyncResult _result = base.BeginInvoke("GroupMemberSetPrivileges", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupMemberSetPrivileges(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupMemberSetPrivileges", _args, result);
            }
            
            public System.IAsyncResult BeginGroupCameraAdd(int cameraID, int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = cameraID;
                _args[1] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupCameraAdd", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupCameraAdd(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupCameraAdd", _args, result);
            }
            
            public System.IAsyncResult BeginGroupCameraRemove(int cameraID, int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = cameraID;
                _args[1] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupCameraRemove", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupCameraRemove(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupCameraRemove", _args, result);
            }
            
            public System.IAsyncResult BeginUserRemove(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserRemove", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUserRemove(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UserRemove", _args, result);
            }
            
            public System.IAsyncResult BeginUserGetID(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("UserGetID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUserGetID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UserGetID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGetEmail(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserGetEmail", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUserGetEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UserGetEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGetPassword(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserGetPassword", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUserGetPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UserGetPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGetName(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserGetName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUserGetName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UserGetName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGetDescription(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserGetDescription", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUserGetDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UserGetDescription", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGetIcon(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserGetIcon", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndUserGetIcon(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("UserGetIcon", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGetRegistrationDate(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserGetRegistrationDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndUserGetRegistrationDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("UserGetRegistrationDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserGetGroups(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("UserGetGroups", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndUserGetGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("UserGetGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserSetPassword(int userID, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("UserSetPassword", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUserSetPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UserSetPassword", _args, result);
            }
            
            public System.IAsyncResult BeginUserSetName(int userID, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("UserSetName", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUserSetName(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UserSetName", _args, result);
            }
            
            public System.IAsyncResult BeginUserSetDescription(int userID, string description, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = description;
                System.IAsyncResult _result = base.BeginInvoke("UserSetDescription", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUserSetDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UserSetDescription", _args, result);
            }
            
            public System.IAsyncResult BeginUserSetIcon(int userID, byte[] icon, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = icon;
                System.IAsyncResult _result = base.BeginInvoke("UserSetIcon", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUserSetIcon(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UserSetIcon", _args, result);
            }
            
            public System.IAsyncResult BeginCameraCheckPathAvailability(string path, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = path;
                System.IAsyncResult _result = base.BeginInvoke("CameraCheckPathAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCameraCheckPathAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CameraCheckPathAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraRegister(string name, string path, string description, byte[] icon, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = name;
                _args[1] = path;
                _args[2] = description;
                _args[3] = icon;
                System.IAsyncResult _result = base.BeginInvoke("CameraRegister", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCameraRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CameraRegister", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraRemove(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("CameraRemove", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCameraRemove(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CameraRemove", _args, result);
            }
            
            public System.IAsyncResult BeginCameraGetID(string path, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = path;
                System.IAsyncResult _result = base.BeginInvoke("CameraGetID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCameraGetID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CameraGetID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraGetPath(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("CameraGetPath", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCameraGetPath(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CameraGetPath", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraGetName(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("CameraGetName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCameraGetName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CameraGetName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraGetDescription(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("CameraGetDescription", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCameraGetDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CameraGetDescription", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraGetIcon(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("CameraGetIcon", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndCameraGetIcon(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("CameraGetIcon", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraGetRegistrationDate(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("CameraGetRegistrationDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndCameraGetRegistrationDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("CameraGetRegistrationDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraGetGroups(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("CameraGetGroups", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndCameraGetGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("CameraGetGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCameraSetName(int cameraID, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = cameraID;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("CameraSetName", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCameraSetName(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CameraSetName", _args, result);
            }
            
            public System.IAsyncResult BeginCameraSetDescription(int cameraID, string description, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = cameraID;
                _args[1] = description;
                System.IAsyncResult _result = base.BeginInvoke("CameraSetDescription", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCameraSetDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CameraSetDescription", _args, result);
            }
            
            public System.IAsyncResult BeginCameraSetIcon(int cameraID, byte[] icon, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = cameraID;
                _args[1] = icon;
                System.IAsyncResult _result = base.BeginInvoke("CameraSetIcon", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCameraSetIcon(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CameraSetIcon", _args, result);
            }
            
            public System.IAsyncResult BeginGroupRegister(string name, string description, byte[] icon, int privacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = name;
                _args[1] = description;
                _args[2] = icon;
                _args[3] = privacy;
                System.IAsyncResult _result = base.BeginInvoke("GroupRegister", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGroupRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GroupRegister", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupRemove(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupRemove", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupRemove(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupRemove", _args, result);
            }
            
            public System.IAsyncResult BeginGroupGetID(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGroupGetID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GroupGetID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupGetName(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGroupGetName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GroupGetName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupGetDescription(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetDescription", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGroupGetDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GroupGetDescription", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGroupGetIcon(int groupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupID;
                System.IAsyncResult _result = base.BeginInvoke("GroupGetIcon", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGroupGetIcon(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GroupGetIcon", _args, result)));
                return _result;
            }
        }
    }
}
