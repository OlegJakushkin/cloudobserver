//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudObserverCampusCamerasStreaming.CloudObserverBroadcastServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CloudObserverBroadcastServiceReference.ICloudObserverBroadcastService")]
    public interface ICloudObserverBroadcastService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICloudObserverBroadcastService/BindMeToCamera", ReplyAction="http://tempuri.org/ICloudObserverBroadcastService/BindMeToCameraResponse")]
        void BindMeToCamera(int clientID, int cameraID, string UID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICloudObserverBroadcastService/SetMeAsCamera", ReplyAction="http://tempuri.org/ICloudObserverBroadcastService/SetMeAsCameraResponse")]
        void SetMeAsCamera(int cameraID, string UID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICloudObserverBroadcastService/GetNextFrame", ReplyAction="http://tempuri.org/ICloudObserverBroadcastService/GetNextFrameResponse")]
        byte[] GetNextFrame(int cameraID, string UID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICloudObserverBroadcastService/SetNextFrame", ReplyAction="http://tempuri.org/ICloudObserverBroadcastService/SetNextFrameResponse")]
        void SetNextFrame(byte[] frame, string UID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ICloudObserverBroadcastServiceChannel : CloudObserverCampusCamerasStreaming.CloudObserverBroadcastServiceReference.ICloudObserverBroadcastService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CloudObserverBroadcastServiceClient : System.ServiceModel.ClientBase<CloudObserverCampusCamerasStreaming.CloudObserverBroadcastServiceReference.ICloudObserverBroadcastService>, CloudObserverCampusCamerasStreaming.CloudObserverBroadcastServiceReference.ICloudObserverBroadcastService {
        
        public CloudObserverBroadcastServiceClient() {
        }
        
        public CloudObserverBroadcastServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CloudObserverBroadcastServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudObserverBroadcastServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CloudObserverBroadcastServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void BindMeToCamera(int clientID, int cameraID, string UID) {
            base.Channel.BindMeToCamera(clientID, cameraID, UID);
        }
        
        public void SetMeAsCamera(int cameraID, string UID) {
            base.Channel.SetMeAsCamera(cameraID, UID);
        }
        
        public byte[] GetNextFrame(int cameraID, string UID) {
            return base.Channel.GetNextFrame(cameraID, UID);
        }
        
        public void SetNextFrame(byte[] frame, string UID) {
            base.Channel.SetNextFrame(frame, UID);
        }
    }
}
