//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClientTest.ServiceReferenceTest {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceTest.IServiceTest")]
    public interface IServiceTest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetGroupMemberPrivileges", ReplyAction="http://tempuri.org/IServiceTest/SetGroupMemberPrivilegesResponse")]
        void SetGroupMemberPrivileges(int userID, int groupID, int privileges);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RemoveGroupMember", ReplyAction="http://tempuri.org/IServiceTest/RemoveGroupMemberResponse")]
        void RemoveGroupMember(int userID, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/AddGroupCamera", ReplyAction="http://tempuri.org/IServiceTest/AddGroupCameraResponse")]
        void AddGroupCamera(int cameraID, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RemoveGroupCamera", ReplyAction="http://tempuri.org/IServiceTest/RemoveGroupCameraResponse")]
        void RemoveGroupCamera(int cameraID, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/IsCameraRegistered", ReplyAction="http://tempuri.org/IServiceTest/IsCameraRegisteredResponse")]
        bool IsCameraRegistered(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RegisterCamera", ReplyAction="http://tempuri.org/IServiceTest/RegisterCameraResponse")]
        int RegisterCamera(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RemoveCamera", ReplyAction="http://tempuri.org/IServiceTest/RemoveCameraResponse")]
        void RemoveCamera(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraID", ReplyAction="http://tempuri.org/IServiceTest/GetCameraIDResponse")]
        int GetCameraID(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraPath", ReplyAction="http://tempuri.org/IServiceTest/GetCameraPathResponse")]
        string GetCameraPath(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraName", ReplyAction="http://tempuri.org/IServiceTest/GetCameraNameResponse")]
        string GetCameraName(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraDescription", ReplyAction="http://tempuri.org/IServiceTest/GetCameraDescriptionResponse")]
        string GetCameraDescription(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraIcon", ReplyAction="http://tempuri.org/IServiceTest/GetCameraIconResponse")]
        byte[] GetCameraIcon(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraRegistrationDate", ReplyAction="http://tempuri.org/IServiceTest/GetCameraRegistrationDateResponse")]
        System.DateTime GetCameraRegistrationDate(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraGroups", ReplyAction="http://tempuri.org/IServiceTest/GetCameraGroupsResponse")]
        int[] GetCameraGroups(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetCameraFrames", ReplyAction="http://tempuri.org/IServiceTest/GetCameraFramesResponse")]
        int[] GetCameraFrames(int cameraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetCameraName", ReplyAction="http://tempuri.org/IServiceTest/SetCameraNameResponse")]
        void SetCameraName(int cameraID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetCameraDescription", ReplyAction="http://tempuri.org/IServiceTest/SetCameraDescriptionResponse")]
        void SetCameraDescription(int cameraID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetCameraIcon", ReplyAction="http://tempuri.org/IServiceTest/SetCameraIconResponse")]
        void SetCameraIcon(int cameraID, byte[] icon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/AddFrame", ReplyAction="http://tempuri.org/IServiceTest/AddFrameResponse")]
        void AddFrame(int cameraID, byte[] content, string marker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RemoveFrame", ReplyAction="http://tempuri.org/IServiceTest/RemoveFrameResponse")]
        void RemoveFrame(int frameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetFrameContent", ReplyAction="http://tempuri.org/IServiceTest/GetFrameContentResponse")]
        byte[] GetFrameContent(int frameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetFrameMarker", ReplyAction="http://tempuri.org/IServiceTest/GetFrameMarkerResponse")]
        string GetFrameMarker(int frameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/IsEmailRegistered", ReplyAction="http://tempuri.org/IServiceTest/IsEmailRegisteredResponse")]
        bool IsEmailRegistered(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/IsUserRegistered", ReplyAction="http://tempuri.org/IServiceTest/IsUserRegisteredResponse")]
        bool IsUserRegistered(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RegisterUser", ReplyAction="http://tempuri.org/IServiceTest/RegisterUserResponse")]
        int RegisterUser(string email, string password, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RemoveUser", ReplyAction="http://tempuri.org/IServiceTest/RemoveUserResponse")]
        void RemoveUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserID", ReplyAction="http://tempuri.org/IServiceTest/GetUserIDResponse")]
        int GetUserID(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserEmail", ReplyAction="http://tempuri.org/IServiceTest/GetUserEmailResponse")]
        string GetUserEmail(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserPassword", ReplyAction="http://tempuri.org/IServiceTest/GetUserPasswordResponse")]
        string GetUserPassword(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserName", ReplyAction="http://tempuri.org/IServiceTest/GetUserNameResponse")]
        string GetUserName(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserDescription", ReplyAction="http://tempuri.org/IServiceTest/GetUserDescriptionResponse")]
        string GetUserDescription(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserIcon", ReplyAction="http://tempuri.org/IServiceTest/GetUserIconResponse")]
        byte[] GetUserIcon(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserRegistrationDate", ReplyAction="http://tempuri.org/IServiceTest/GetUserRegistrationDateResponse")]
        System.DateTime GetUserRegistrationDate(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetUserGroups", ReplyAction="http://tempuri.org/IServiceTest/GetUserGroupsResponse")]
        int[] GetUserGroups(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetUserPassword", ReplyAction="http://tempuri.org/IServiceTest/SetUserPasswordResponse")]
        void SetUserPassword(int userID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetUserName", ReplyAction="http://tempuri.org/IServiceTest/SetUserNameResponse")]
        void SetUserName(int userID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetUserDescription", ReplyAction="http://tempuri.org/IServiceTest/SetUserDescriptionResponse")]
        void SetUserDescription(int userID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetUserIcon", ReplyAction="http://tempuri.org/IServiceTest/SetUserIconResponse")]
        void SetUserIcon(int userID, byte[] icon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/IsGroupRegistered", ReplyAction="http://tempuri.org/IServiceTest/IsGroupRegisteredResponse")]
        bool IsGroupRegistered(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RegisterGroup", ReplyAction="http://tempuri.org/IServiceTest/RegisterGroupResponse")]
        int RegisterGroup(string name, int privacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/RemoveGroup", ReplyAction="http://tempuri.org/IServiceTest/RemoveGroupResponse")]
        void RemoveGroup(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupID", ReplyAction="http://tempuri.org/IServiceTest/GetGroupIDResponse")]
        int GetGroupID(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupName", ReplyAction="http://tempuri.org/IServiceTest/GetGroupNameResponse")]
        string GetGroupName(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupDescription", ReplyAction="http://tempuri.org/IServiceTest/GetGroupDescriptionResponse")]
        string GetGroupDescription(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupIcon", ReplyAction="http://tempuri.org/IServiceTest/GetGroupIconResponse")]
        byte[] GetGroupIcon(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupPrivacy", ReplyAction="http://tempuri.org/IServiceTest/GetGroupPrivacyResponse")]
        int GetGroupPrivacy(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupRegistrationDate", ReplyAction="http://tempuri.org/IServiceTest/GetGroupRegistrationDateResponse")]
        System.DateTime GetGroupRegistrationDate(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupMembers", ReplyAction="http://tempuri.org/IServiceTest/GetGroupMembersResponse")]
        int[] GetGroupMembers(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/GetGroupCameras", ReplyAction="http://tempuri.org/IServiceTest/GetGroupCamerasResponse")]
        int[] GetGroupCameras(int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetGroupName", ReplyAction="http://tempuri.org/IServiceTest/SetGroupNameResponse")]
        void SetGroupName(int groupID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetGroupDescription", ReplyAction="http://tempuri.org/IServiceTest/SetGroupDescriptionResponse")]
        void SetGroupDescription(int groupID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetGroupIcon", ReplyAction="http://tempuri.org/IServiceTest/SetGroupIconResponse")]
        void SetGroupIcon(int groupID, byte[] icon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/SetGroupPrivacy", ReplyAction="http://tempuri.org/IServiceTest/SetGroupPrivacyResponse")]
        void SetGroupPrivacy(int groupID, int privacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceTest/AddGroupMember", ReplyAction="http://tempuri.org/IServiceTest/AddGroupMemberResponse")]
        void AddGroupMember(int userID, int groupID, int privileges);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IServiceTestChannel : WcfClientTest.ServiceReferenceTest.IServiceTest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ServiceTestClient : System.ServiceModel.ClientBase<WcfClientTest.ServiceReferenceTest.IServiceTest>, WcfClientTest.ServiceReferenceTest.IServiceTest {
        
        public ServiceTestClient() {
        }
        
        public ServiceTestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceTestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceTestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceTestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetGroupMemberPrivileges(int userID, int groupID, int privileges) {
            base.Channel.SetGroupMemberPrivileges(userID, groupID, privileges);
        }
        
        public void RemoveGroupMember(int userID, int groupID) {
            base.Channel.RemoveGroupMember(userID, groupID);
        }
        
        public void AddGroupCamera(int cameraID, int groupID) {
            base.Channel.AddGroupCamera(cameraID, groupID);
        }
        
        public void RemoveGroupCamera(int cameraID, int groupID) {
            base.Channel.RemoveGroupCamera(cameraID, groupID);
        }
        
        public bool IsCameraRegistered(string path) {
            return base.Channel.IsCameraRegistered(path);
        }
        
        public int RegisterCamera(string name) {
            return base.Channel.RegisterCamera(name);
        }
        
        public void RemoveCamera(int cameraID) {
            base.Channel.RemoveCamera(cameraID);
        }
        
        public int GetCameraID(string path) {
            return base.Channel.GetCameraID(path);
        }
        
        public string GetCameraPath(int cameraID) {
            return base.Channel.GetCameraPath(cameraID);
        }
        
        public string GetCameraName(int cameraID) {
            return base.Channel.GetCameraName(cameraID);
        }
        
        public string GetCameraDescription(int cameraID) {
            return base.Channel.GetCameraDescription(cameraID);
        }
        
        public byte[] GetCameraIcon(int cameraID) {
            return base.Channel.GetCameraIcon(cameraID);
        }
        
        public System.DateTime GetCameraRegistrationDate(int cameraID) {
            return base.Channel.GetCameraRegistrationDate(cameraID);
        }
        
        public int[] GetCameraGroups(int cameraID) {
            return base.Channel.GetCameraGroups(cameraID);
        }
        
        public int[] GetCameraFrames(int cameraID) {
            return base.Channel.GetCameraFrames(cameraID);
        }
        
        public void SetCameraName(int cameraID, string name) {
            base.Channel.SetCameraName(cameraID, name);
        }
        
        public void SetCameraDescription(int cameraID, string description) {
            base.Channel.SetCameraDescription(cameraID, description);
        }
        
        public void SetCameraIcon(int cameraID, byte[] icon) {
            base.Channel.SetCameraIcon(cameraID, icon);
        }
        
        public void AddFrame(int cameraID, byte[] content, string marker) {
            base.Channel.AddFrame(cameraID, content, marker);
        }
        
        public void RemoveFrame(int frameID) {
            base.Channel.RemoveFrame(frameID);
        }
        
        public byte[] GetFrameContent(int frameID) {
            return base.Channel.GetFrameContent(frameID);
        }
        
        public string GetFrameMarker(int frameID) {
            return base.Channel.GetFrameMarker(frameID);
        }
        
        public bool IsEmailRegistered(string email) {
            return base.Channel.IsEmailRegistered(email);
        }
        
        public bool IsUserRegistered(string email, string password) {
            return base.Channel.IsUserRegistered(email, password);
        }
        
        public int RegisterUser(string email, string password, string name) {
            return base.Channel.RegisterUser(email, password, name);
        }
        
        public void RemoveUser(int userID) {
            base.Channel.RemoveUser(userID);
        }
        
        public int GetUserID(string email) {
            return base.Channel.GetUserID(email);
        }
        
        public string GetUserEmail(int userID) {
            return base.Channel.GetUserEmail(userID);
        }
        
        public string GetUserPassword(int userID) {
            return base.Channel.GetUserPassword(userID);
        }
        
        public string GetUserName(int userID) {
            return base.Channel.GetUserName(userID);
        }
        
        public string GetUserDescription(int userID) {
            return base.Channel.GetUserDescription(userID);
        }
        
        public byte[] GetUserIcon(int userID) {
            return base.Channel.GetUserIcon(userID);
        }
        
        public System.DateTime GetUserRegistrationDate(int userID) {
            return base.Channel.GetUserRegistrationDate(userID);
        }
        
        public int[] GetUserGroups(int userID) {
            return base.Channel.GetUserGroups(userID);
        }
        
        public void SetUserPassword(int userID, string password) {
            base.Channel.SetUserPassword(userID, password);
        }
        
        public void SetUserName(int userID, string name) {
            base.Channel.SetUserName(userID, name);
        }
        
        public void SetUserDescription(int userID, string description) {
            base.Channel.SetUserDescription(userID, description);
        }
        
        public void SetUserIcon(int userID, byte[] icon) {
            base.Channel.SetUserIcon(userID, icon);
        }
        
        public bool IsGroupRegistered(string name) {
            return base.Channel.IsGroupRegistered(name);
        }
        
        public int RegisterGroup(string name, int privacy) {
            return base.Channel.RegisterGroup(name, privacy);
        }
        
        public void RemoveGroup(int groupID) {
            base.Channel.RemoveGroup(groupID);
        }
        
        public int GetGroupID(string name) {
            return base.Channel.GetGroupID(name);
        }
        
        public string GetGroupName(int groupID) {
            return base.Channel.GetGroupName(groupID);
        }
        
        public string GetGroupDescription(int groupID) {
            return base.Channel.GetGroupDescription(groupID);
        }
        
        public byte[] GetGroupIcon(int groupID) {
            return base.Channel.GetGroupIcon(groupID);
        }
        
        public int GetGroupPrivacy(int groupID) {
            return base.Channel.GetGroupPrivacy(groupID);
        }
        
        public System.DateTime GetGroupRegistrationDate(int groupID) {
            return base.Channel.GetGroupRegistrationDate(groupID);
        }
        
        public int[] GetGroupMembers(int groupID) {
            return base.Channel.GetGroupMembers(groupID);
        }
        
        public int[] GetGroupCameras(int groupID) {
            return base.Channel.GetGroupCameras(groupID);
        }
        
        public void SetGroupName(int groupID, string name) {
            base.Channel.SetGroupName(groupID, name);
        }
        
        public void SetGroupDescription(int groupID, string description) {
            base.Channel.SetGroupDescription(groupID, description);
        }
        
        public void SetGroupIcon(int groupID, byte[] icon) {
            base.Channel.SetGroupIcon(groupID, icon);
        }
        
        public void SetGroupPrivacy(int groupID, int privacy) {
            base.Channel.SetGroupPrivacy(groupID, privacy);
        }
        
        public void AddGroupMember(int userID, int groupID, int privileges) {
            base.Channel.AddGroupMember(userID, groupID, privileges);
        }
    }
}
