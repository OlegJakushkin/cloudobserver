//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace CloudObserver.UserInterface.BroadcastServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BroadcastServiceReference.BroadcastServiceContract")]
    public interface BroadcastServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AbstractServiceContract/GetControllerServiceUri", ReplyAction="http://tempuri.org/AbstractServiceContract/GetControllerServiceUriResponse")]
        System.IAsyncResult BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState);
        
        string EndGetControllerServiceUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AbstractServiceContract/SetControllerServiceUri", ReplyAction="http://tempuri.org/AbstractServiceContract/SetControllerServiceUriResponse")]
        System.IAsyncResult BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState);
        
        void EndSetControllerServiceUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BroadcastServiceContract/ReadFrame", ReplyAction="http://tempuri.org/BroadcastServiceContract/ReadFrameResponse")]
        System.IAsyncResult BeginReadFrame(int cameraID, System.AsyncCallback callback, object asyncState);
        
        byte[] EndReadFrame(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/BroadcastServiceContract/WriteFrame", ReplyAction="http://tempuri.org/BroadcastServiceContract/WriteFrameResponse")]
        System.IAsyncResult BeginWriteFrame(int cameraID, byte[] frame, System.AsyncCallback callback, object asyncState);
        
        void EndWriteFrame(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface BroadcastServiceContractChannel : CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetControllerServiceUriCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetControllerServiceUriCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ReadFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class BroadcastServiceContractClient : System.ServiceModel.ClientBase<CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract>, CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract {
        
        private BeginOperationDelegate onBeginGetControllerServiceUriDelegate;
        
        private EndOperationDelegate onEndGetControllerServiceUriDelegate;
        
        private System.Threading.SendOrPostCallback onGetControllerServiceUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetControllerServiceUriDelegate;
        
        private EndOperationDelegate onEndSetControllerServiceUriDelegate;
        
        private System.Threading.SendOrPostCallback onSetControllerServiceUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadFrameDelegate;
        
        private EndOperationDelegate onEndReadFrameDelegate;
        
        private System.Threading.SendOrPostCallback onReadFrameCompletedDelegate;
        
        private BeginOperationDelegate onBeginWriteFrameDelegate;
        
        private EndOperationDelegate onEndWriteFrameDelegate;
        
        private System.Threading.SendOrPostCallback onWriteFrameCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BroadcastServiceContractClient() {
        }
        
        public BroadcastServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BroadcastServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BroadcastServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BroadcastServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetControllerServiceUriCompletedEventArgs> GetControllerServiceUriCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetControllerServiceUriCompleted;
        
        public event System.EventHandler<ReadFrameCompletedEventArgs> ReadFrameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WriteFrameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetControllerServiceUri(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.EndGetControllerServiceUri(System.IAsyncResult result) {
            return base.Channel.EndGetControllerServiceUri(result);
        }
        
        private System.IAsyncResult OnBeginGetControllerServiceUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).BeginGetControllerServiceUri(callback, asyncState);
        }
        
        private object[] OnEndGetControllerServiceUri(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).EndGetControllerServiceUri(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetControllerServiceUriCompleted(object state) {
            if ((this.GetControllerServiceUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetControllerServiceUriCompleted(this, new GetControllerServiceUriCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetControllerServiceUriAsync() {
            this.GetControllerServiceUriAsync(null);
        }
        
        public void GetControllerServiceUriAsync(object userState) {
            if ((this.onBeginGetControllerServiceUriDelegate == null)) {
                this.onBeginGetControllerServiceUriDelegate = new BeginOperationDelegate(this.OnBeginGetControllerServiceUri);
            }
            if ((this.onEndGetControllerServiceUriDelegate == null)) {
                this.onEndGetControllerServiceUriDelegate = new EndOperationDelegate(this.OnEndGetControllerServiceUri);
            }
            if ((this.onGetControllerServiceUriCompletedDelegate == null)) {
                this.onGetControllerServiceUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetControllerServiceUriCompleted);
            }
            base.InvokeAsync(this.onBeginGetControllerServiceUriDelegate, null, this.onEndGetControllerServiceUriDelegate, this.onGetControllerServiceUriCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetControllerServiceUri(controllerServiceUri, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.EndSetControllerServiceUri(System.IAsyncResult result) {
            base.Channel.EndSetControllerServiceUri(result);
        }
        
        private System.IAsyncResult OnBeginSetControllerServiceUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string controllerServiceUri = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).BeginSetControllerServiceUri(controllerServiceUri, callback, asyncState);
        }
        
        private object[] OnEndSetControllerServiceUri(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).EndSetControllerServiceUri(result);
            return null;
        }
        
        private void OnSetControllerServiceUriCompleted(object state) {
            if ((this.SetControllerServiceUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetControllerServiceUriCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetControllerServiceUriAsync(string controllerServiceUri) {
            this.SetControllerServiceUriAsync(controllerServiceUri, null);
        }
        
        public void SetControllerServiceUriAsync(string controllerServiceUri, object userState) {
            if ((this.onBeginSetControllerServiceUriDelegate == null)) {
                this.onBeginSetControllerServiceUriDelegate = new BeginOperationDelegate(this.OnBeginSetControllerServiceUri);
            }
            if ((this.onEndSetControllerServiceUriDelegate == null)) {
                this.onEndSetControllerServiceUriDelegate = new EndOperationDelegate(this.OnEndSetControllerServiceUri);
            }
            if ((this.onSetControllerServiceUriCompletedDelegate == null)) {
                this.onSetControllerServiceUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetControllerServiceUriCompleted);
            }
            base.InvokeAsync(this.onBeginSetControllerServiceUriDelegate, new object[] {
                        controllerServiceUri}, this.onEndSetControllerServiceUriDelegate, this.onSetControllerServiceUriCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.BeginReadFrame(int cameraID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadFrame(cameraID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.EndReadFrame(System.IAsyncResult result) {
            return base.Channel.EndReadFrame(result);
        }
        
        private System.IAsyncResult OnBeginReadFrame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            return ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).BeginReadFrame(cameraID, callback, asyncState);
        }
        
        private object[] OnEndReadFrame(System.IAsyncResult result) {
            byte[] retVal = ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).EndReadFrame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadFrameCompleted(object state) {
            if ((this.ReadFrameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadFrameCompleted(this, new ReadFrameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadFrameAsync(int cameraID) {
            this.ReadFrameAsync(cameraID, null);
        }
        
        public void ReadFrameAsync(int cameraID, object userState) {
            if ((this.onBeginReadFrameDelegate == null)) {
                this.onBeginReadFrameDelegate = new BeginOperationDelegate(this.OnBeginReadFrame);
            }
            if ((this.onEndReadFrameDelegate == null)) {
                this.onEndReadFrameDelegate = new EndOperationDelegate(this.OnEndReadFrame);
            }
            if ((this.onReadFrameCompletedDelegate == null)) {
                this.onReadFrameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadFrameCompleted);
            }
            base.InvokeAsync(this.onBeginReadFrameDelegate, new object[] {
                        cameraID}, this.onEndReadFrameDelegate, this.onReadFrameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.BeginWriteFrame(int cameraID, byte[] frame, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWriteFrame(cameraID, frame, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract.EndWriteFrame(System.IAsyncResult result) {
            base.Channel.EndWriteFrame(result);
        }
        
        private System.IAsyncResult OnBeginWriteFrame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cameraID = ((int)(inValues[0]));
            byte[] frame = ((byte[])(inValues[1]));
            return ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).BeginWriteFrame(cameraID, frame, callback, asyncState);
        }
        
        private object[] OnEndWriteFrame(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract)(this)).EndWriteFrame(result);
            return null;
        }
        
        private void OnWriteFrameCompleted(object state) {
            if ((this.WriteFrameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WriteFrameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WriteFrameAsync(int cameraID, byte[] frame) {
            this.WriteFrameAsync(cameraID, frame, null);
        }
        
        public void WriteFrameAsync(int cameraID, byte[] frame, object userState) {
            if ((this.onBeginWriteFrameDelegate == null)) {
                this.onBeginWriteFrameDelegate = new BeginOperationDelegate(this.OnBeginWriteFrame);
            }
            if ((this.onEndWriteFrameDelegate == null)) {
                this.onEndWriteFrameDelegate = new EndOperationDelegate(this.OnEndWriteFrame);
            }
            if ((this.onWriteFrameCompletedDelegate == null)) {
                this.onWriteFrameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWriteFrameCompleted);
            }
            base.InvokeAsync(this.onBeginWriteFrameDelegate, new object[] {
                        cameraID,
                        frame}, this.onEndWriteFrameDelegate, this.onWriteFrameCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract CreateChannel() {
            return new BroadcastServiceContractClientChannel(this);
        }
        
        private class BroadcastServiceContractClientChannel : ChannelBase<CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract>, CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract {
            
            public BroadcastServiceContractClientChannel(System.ServiceModel.ClientBase<CloudObserver.UserInterface.BroadcastServiceReference.BroadcastServiceContract> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetControllerServiceUri", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetControllerServiceUri(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetControllerServiceUri", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = controllerServiceUri;
                System.IAsyncResult _result = base.BeginInvoke("SetControllerServiceUri", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetControllerServiceUri(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetControllerServiceUri", _args, result);
            }
            
            public System.IAsyncResult BeginReadFrame(int cameraID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cameraID;
                System.IAsyncResult _result = base.BeginInvoke("ReadFrame", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndReadFrame(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ReadFrame", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWriteFrame(int cameraID, byte[] frame, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = cameraID;
                _args[1] = frame;
                System.IAsyncResult _result = base.BeginInvoke("WriteFrame", _args, callback, asyncState);
                return _result;
            }
            
            public void EndWriteFrame(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("WriteFrame", _args, result);
            }
        }
    }
}
