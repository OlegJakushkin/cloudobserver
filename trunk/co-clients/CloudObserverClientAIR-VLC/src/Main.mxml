<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"     
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   minHeight="500"
					   xmlns:api="services.api.*"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)" width="400">
	<fx:Style source="Main.css"/>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import services.api.Api;
			import services.gateway.Gateway;
			import services.workblock.WorkBlock;
			
			import spark.components.VSlider;
			
			[Bindable]
			public var api:Api = new Api();
			[Bindable]
			public var apiUri:String = "http://localhost/cms5/api.php";
			[Bindable]
			public var userKey:String = new String();
			[Bindable]
			public var gatewayUri:String = new String(); 
			[Bindable]
			public var VLCString:String = new String(); 
			[Bindable]
			public var LIFTString:String = new String(); 
			[Bindable]
			public var contentIdsArray:Array;
			[Bindable]
			public var contentToWriteId:int;
			[Bindable]
			public var contentMp3UrlsArray:Array;
			[Bindable]
			public var workBlockUri:String =  new String(); 			
			[Bindable]
			public var ContentType:String =  "video/x-flv"; 
			[Bindable]
			public var mp3Uris:String =  new String();	

	



			protected function gatewayInactive(event:FaultEvent):void{
				textArea.text += " Был указан адресс ядрышка. По данному адресу ядрышко не пашет";
			}
			protected function GetWorkBlockResult_resultHandler(event:ResultEvent):void
			{
				workBlockUri = event.result as String;
				workBlockUri += "?wsdl";
				//textArea.text +=  " \n Принятый Work Block Uri: " + workBlockUri;
				//contentToWriteId =  int(contentToWriteIdtf.text);
				//ContentType = "video/x-flv"; //ContentTypetf.text;
				var workBlock:WorkBlock = new WorkBlock;
				workBlock.addEventListener(FaultEvent.FAULT, gatewayInactive);
				workBlock.serviceStart(workBlockUri);
				workBlock.showBusyCursor = true;
				//textArea.text +=  " \n Принятый Work Block Uri: " + workBlockUri;
				// var contentIds:ArrayCollection = new ArrayCollection(contentIdsArray);
				//textArea.text +=  " \n Переведенный в ArrayCollection массив идентификаторов потока: " + contentIds.toString();
				IWannaWriteResult.token = workBlock.IWannaWrite(contentToWriteId, ContentType);
				
			} 
			protected function IWannaWriteResult_resultHandler(event:ResultEvent):void
			{
				startVLC();	
			}

			
			protected function Go_clickHandler(event:MouseEvent):void
			{
				gatewayUri = gatewayUritf.text;
				ContentType = ContentTypetf.text;
				contentToWriteId = int(contentToWriteIdtf.text);
				goCloud();
			}
			protected function goCloud():void
			{
			
				gatewayUri = gatewayUri + "?wsdl";
				//textArea.text +=  " \n Принятый GW Uri : " + gatewayUri;	
				var gateway:Gateway = new Gateway;
				gateway.serviceStart(gatewayUri);
				gateway.showBusyCursor = true;
				gateway.addEventListener(FaultEvent.FAULT, gatewayInactive);
				GetWorkBlockResult.token = gateway.GetWorkBlock();
				//		textArea.text +=  "GetWorkBlockResult.token = gateway.GetWorkBlock() ";
	
			}




			
			protected function LogIn_clickHandler(event:MouseEvent):void
			{
				api = new Api();
				api.serviceStart(apiUri);
				LogInResult.token = api.LogIn(emailTF.text, passwordTF.text);
				tabnav.selectedIndex=1;

			}
			protected function getUserData():void
			{
				getDataResult.token = api.getData(userKey);
				getMyNameResult.token = api.getMyName(userKey);
				getCOADRResult.token = api.getGatewayAddress(userKey);
				
			}
			
			


			protected function LogInResult_resultHandler(event:ResultEvent):void
			{
				userKey = LogInResult.lastResult;
				getUserData();
			}


			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				DebugWindow.enabled =false; 
				//
				SignUpP.enabled = false;
				this.addEventListener(KeyboardEvent.KEY_UP, EnableDebuger);
				
			}
			protected function EnableDebuger(e:KeyboardEvent):void
			{
			//	labelName.text = e.keyCode.toString() + " " + flash.system.Capabilities.cpuArchitecture.toString();
				if (e.keyCode.toString() == "49"){ DebugWindow.enabled = true;}
			}


			protected function streamFromListBut_clickHandler(event:MouseEvent):void
			{
				contentToWriteId = int(list.selectedItem);
				
				goCloud();	
			}


			protected function getCOADRResult_resultHandler(event:ResultEvent):void
			{
				gatewayUri = String(getCOADRResult.lastResult);
			}


			protected function button1_clickHandler(event:MouseEvent):void
			{
				LogOut.token = api.getGatewayAddress(userKey);
				tabnav.selectedIndex = 0; start1.selectedIndex = 0;
			}


			protected function LogOut_resultHandler(event:ResultEvent):void
			{
				labelName.text = "you just logged out";
			}


			protected function AntSnewstream_creationCompleteHandler(event:FlexEvent):void
			{
				AntSnewstream.enabled = false;
			}
			protected function startVLC():void
			{
			var VLC_Folder_on_C_x64:File = File.userDirectory.resolvePath('C:/Program Files (x86)/VideoLAN/VLC/');
			var VLC_Folder_on_C_x86:File = File.userDirectory.resolvePath('C:/Program Files/VideoLAN/VLC/');
			
			if(VLC_Folder_on_C_x64.isDirectory)
			{
				
			}
			else if(VLC_Folder_on_C_x86.isDirectory)
			{
				
			}
			else if (!VLC_Folder_on_C_x86.isDirectory && !VLC_Folder_on_C_x64.isDirectory)
			{
				Alert.show("VLC is not installed on your PC; There is no Any folder like VideoLAN near by this app .exe file");
			}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="LogInResult" result="LogInResult_resultHandler(event)"/>
		<s:CallResponder id="LogOut" result="LogOut_resultHandler(event)"/>
		<s:CallResponder id="getDataResult"/>
		<s:CallResponder id="getMyNameResult"/>
		<s:CallResponder id="getCOADRResult" result="getCOADRResult_resultHandler(event)"/>
		
		<s:CallResponder id="IWannaWriteResult"  result="IWannaWriteResult_resultHandler(event)"/>
		<s:CallResponder id="GetWorkBlockResult"  result="GetWorkBlockResult_resultHandler(event)"/>
	</fx:Declarations>
	<mx:TabNavigator  left="0" right="0" bottom="0" top="0"   id="tabnav">
		<s:NavigatorContent label="Start" width="100%" backgroundAlpha="0" height="100%"  >
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
			<mx:TabNavigator right="0" left="0" top="0" bottom="0" id="start1">
				<s:NavigatorContent label="Welcome" width="100%" height="100%">
					<mx:Form horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label="Welcome to CO writter"/>
						<s:Button label="Log In" width="100%" click="start1.selectedIndex = 1"/>
						<s:Button label="Sign UP" width="100%" click="start1.selectedIndex = 2" enabled="false"/>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="Log In" width="100%" height="100%">
					<mx:Form width="326" defaultButton="{LogIn}" height="136" horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label="Log In"/>
						<mx:FormItem label="Email" width="100%" id="TF">
							<s:TextInput width="100%" id="emailTF" text="Example@Example.com"/>
						</mx:FormItem>
						<mx:FormItem label="Password" width="100%">
							<s:TextInput    id="passwordTF"    
											maxChars="16"
											displayAsPassword="true"
											focusIn="passwordTF.displayAsPassword = false;"
											focusOut="passwordTF.displayAsPassword = true;" width="100%" text="000000"/>
						</mx:FormItem>
						<mx:Button label=" Log In" width="100%" id="LogIn" click="LogIn_clickHandler(event)"/>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="Sign Up"  id="SignUpP" width="100%" height="100%">
					<mx:Form width="326" defaultButton="{SignUp}" height="168" horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label="Sign Up"/>
						<mx:FormItem label="Name" width="100%" id="TF1">
							<s:TextInput width="100%" id="nameSUTF" text="Name Example"/>
						</mx:FormItem>
						<mx:FormItem label="Email" width="100%" id="TF0">
							<s:TextInput width="100%" id="emailSUTF" text="Example@Example.com"/>
						</mx:FormItem>
						<mx:FormItem label="Password" width="100%">
							<s:TextInput    id="passwordSUTF"    
											maxChars="16"
											displayAsPassword="true"
											focusIn="passwordTF.displayAsPassword = false;"
											focusOut="passwordTF.displayAsPassword = true;" width="100%" text="000000"/>
						</mx:FormItem>
						<mx:Button label="Sign Up" width="100%" id="SignUp" click="LogIn_clickHandler(event)"/>
					</mx:Form>
				</s:NavigatorContent>
			</mx:TabNavigator>
			
		</s:NavigatorContent>
		<s:NavigatorContent label="Select" width="100%" height="100%" id="maintab">
			<mx:TabNavigator left="0" right="0" top="0" bottom="0" id="select1">
				<s:NavigatorContent label="Broadcast" width="100%" height="100%">
					<mx:Form horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label=" {'Welcome ' + String(getMyNameResult.lastResult)}" width="100%" textAlign="center"/>
						<mx:FormHeading label="How do you want to broadcast?" width="100%" textAlign="center"/>
						<s:Button label="On to Existing Stream" width="100%" click="select1.selectedIndex = 1"/>
						<s:Button label="On to New Stream" width="100%" click="select1.selectedIndex = 2" enabled="false"/>
						<s:Button label="On to last Stream I broadcasted" width="100%" enabled="false"/>
					</mx:Form>
					
				</s:NavigatorContent>
				<s:NavigatorContent label="On to old stream" width="100%" height="100%" >
					<mx:Form width="326" height="163" horizontalCenter="0" verticalCenter="0">
						<mx:FormItem label="Yours Id's List" width="100%" height="88">
							<s:List  id="list" width="100%" height="100%">
								<s:AsyncListView list="{getDataResult.lastResult}"/>
							</s:List>
						</mx:FormItem>
						<mx:FormItem label="Stream onto selected SID">
							<s:Button label="Stream!" id="streamFromListBut" click="streamFromListBut_clickHandler(event)"/>
						</mx:FormItem>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="On to New stream" creationComplete="AntSnewstream_creationCompleteHandler(event)" width="100%" height="100%"  id="AntSnewstream">
					<mx:Form width="326" height="70" horizontalCenter="0" verticalCenter="0">
						<mx:FormItem label="Gen New Stream">
							<s:Button label="Stream onto new stream"/>
						</mx:FormItem>
					</mx:Form>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:Button label="Log Out" bottom="10" right="10" click="button1_clickHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="View" width="100%" height="100%" skinClass="cobalt.skins.SkinnableContainerSkin" click="select1.selectedIndex = 1;">
			<s:VideoPlayer skinClass="VPS" right="0" left="0" top="0" bottom="0"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="Debug" width="100%" height="100%" id="DebugWindow">

			<mx:TabNavigator right="0" left="0" top="0" bottom="0" id="debug1">
				<s:NavigatorContent  label="You Entered THE debug mode" width="100%" height="100%">
					<mx:Form horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label=" {'Welcome to debug mode ' + String(getMyNameResult.lastResult)}" width="100%" textAlign="center"/>
						<mx:FormHeading label="What do you want to know" width="100%" textAlign="center"/>
						<s:Button label="How CMS is interacting with Kernel" width="100%" click="debug1.selectedIndex = 1;"/>
						<s:Button label="What Strings are used now by VLC and Lift" width="100%" click="debug1.selectedIndex = 2;"/>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="CMS-Kernel" width="100%" height="100%">
					
					<mx:Form y="99" width="326" height="173" horizontalCenter="0">
						<mx:FormHeading label="CO Writer: Write on ID"/>
						<mx:FormItem label="GW adr :" width="100%">
							<s:TextInput id="gatewayUritf" text="{getCOADRResult.lastResult}" width="100%"/>
						</mx:FormItem>
						<mx:FormItem label="ID to write :" width="100%">
							<s:TextInput id="contentToWriteIdtf" text="Will be selected from a list" width="100%"/>
						</mx:FormItem>
						<mx:FormItem label="Content type :" width="100%">
							<s:TextInput id="ContentTypetf" text="video/x-flv" width="100%"/>
						</mx:FormItem>
						<s:Button label="Go Cloud!" width="100%" id="Go" click="Go_clickHandler(event)"/>
					</mx:Form>
					<mx:Form width="326" height="97" y="283" horizontalCenter="1">
						<mx:FormHeading label="CO Writer Console"/>
						<mx:FormItem label="Uri" width="100%" height="100%">
							<s:TextInput id="textArea" text="{' Адрес гейтвея ' + String(getCOADRResult.lastResult) + ' Адрес взятого воркблока ' + String(GetWorkBlockResult.lastResult) + ' ' + 'принятые от клауда урлки на запись '+ String(IWannaWriteResult.lastResult) }" width="100%" height="100%"/>
						</mx:FormItem>
					</mx:Form>
					
					<mx:Form width="326" height="80" horizontalCenter="0" top="10">
						<mx:FormHeading label="Your API key"/>
						<mx:FormItem label="Key" width="100%">
							<s:TextInput id="keyTextInput" width="100%" text="{userKey}" enter="userKey = keyTextInput.text; getUserData();"/>
						</mx:FormItem>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="Vlc-Lift" width="100%" height="100%">
					<mx:Form x="10" y="10" width="376" height="120">
						<mx:FormItem label="VLC string" width="100%" height="100%">
							<s:TextInput width="100%" height="100%" text="{VLCString}"/>
						</mx:FormItem>
					</mx:Form>
					<mx:Form x="12" y="155" width="376" height="120">
						<mx:FormItem label="Lift string" width="100%" height="100%">
							<s:TextInput width="100%" height="100%" text="{LIFTString}"/>
						</mx:FormItem>
					</mx:Form>
				</s:NavigatorContent>
			</mx:TabNavigator>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Label text="{getMyNameResult.lastResult}" textAlign="center" verticalAlign="middle" right="2" top="2" id="labelName"/>

</s:WindowedApplication>
