#summary What is ASL and ASL.AdameAndEve.Tutorial brunch folder?
#labels Featured,CloudObserver,Phase-Support,Phase-Implementation,ASL,Tutorials

= Introduction =
We, at CloudForewer, team plan to use ASL for creation of some minimalistic graphical user interfaces which are some times required in our projects. We work across Mac OS X, Windows and lots of Linux flavours. We have takan a small look at Qt gui and wxWidgets and found out they are way too much for our current needs. We desired something more minimalistic and more boost oriented. We found such lib - Adobe Source Libraries (ASL). ASL is not only UI library but we plan to concentrait on its GUI features.

== What are main ASL concepts ==
 * We found [http://www.youtube.com/v/4moyKUHApq4&hl=en&fs=1 grate video] where core ASL developer gives a speach on concepts of this library;
 * Also concepts are decribed on [http://stlab.adobe.com/ ASL site].

== How to compile ASL ==
We faced some problems in Adobe Source Libraries compilation so we asked for detailed instructions, which were provided to us [http://stackoverflow.com/questions/6397501/how-to-compile-asl-boost-based-adobe-c-gui-library-on-windows-7 here at stackoverflow]. Instructions are for Windows OS but concept of working with [http://www.boost.org/boost-build2/ bjam] are same on every platform. It compiles into static libasl and static libadobe_widgets.

== What is Adobe Source Libraries tutorials and demos base? ==  
 * You can find interesting precompiled adobe demos for Windows in  asl_begin_win archives [http://sourceforge.net/projects/adobe-source/files/adobe-source/  here];
 * There is `test` forlder is archives with adobe source libraries it containes some samples.

== What materials we plan to produce for ASL comunity ==

We plan to port and join some of [http://sourceforge.net/projects/adobe-source/files/adobe-source/ official ASL tutorials] so that C++ projects/solutions for next environments could be created:

 * Microsoft Visual Studio 2005-2010, including the Express editions;
 * GNU Make, including Cygwin and MinGW;
 * Apple Xcode;
 * Code::Blocks;
 * !CodeLite;

So no bjam would be required to get projects/solutions for your favourite enviroments. To achieve such expansion we plan to modify some of the source files a bit and use [http://industriousone.com/what-premake premake build configuration generator] for projects/solutions creation.

= Details =
Now all you'll need to do to see some of Adobe-Source-Libraries-Tutorials as projects/solutions compilable from your favorite IDE is call something like `premake4 --os=YOUR-OS  --platform=x32 IDE-NAME ` (ofcourse you would have built ASL libs and Boost inside your Programm files folder)

Where YOUR-OS could be:

 * linux
 * macosx
 * windows

Where IDE-NAME could be:

 * codeblocks
 * codelite
 * gmake
 * vs2002
 * vs2003
 * vs2005
 * vs2008
 * vs2010
 * xcode3

= For More Detailes =
Please read `ReadMe.txt` file inside folder with project.

== On windows ==
If you do not have Boost (current 1.46.1) and ASL libraries installed into Program Files/Boost-1.46.1/ please read `ReadMe.txt` file.