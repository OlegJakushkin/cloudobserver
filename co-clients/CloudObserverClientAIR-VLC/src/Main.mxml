<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"     
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   minHeight="300"
					   showStatusBar="false" 
					   closing="windowedapplication1_closingHandler(event)"
					   xmlns:api="services.api.*"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)"
					   windowComplete="windowedapplication1_windowCompleteHandler(event)"
					   width="400" minWidth="340"   maxWidth="440"  height="300">
	<fx:Style source="Main.css"/>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.AIREvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import services.api.Api;
			import services.gateway.Gateway;
			import services.workblock.WorkBlock;
			
			import spark.events.TextOperationEvent;
			
		//	[Bindable]
		//	public var EncryptedLocalStore:EncryptedLocalStore = new EncryptedLocalStore;
			[Bindable]
			public var api:Api = new Api();
			[Bindable]
			public var apiUri:String = "http://localhost/cms/api.php";
			[Bindable]
			public var userKey:String = new String();
			[Bindable]
			public var gatewayUri:String = new String(); 
			[Bindable]
			public var VLCRESXString:String = new String(); 
			[Bindable]
			public var VLCRESYString:String = new String(); 
			[Bindable]
			public var LIFTString:String = new String(); 
			[Bindable]
			public var contentIdsArray:Array;
			[Bindable]
			public var contentToWriteId:int;
			[Bindable]
			public var contentMp3UrlsArray:Array;
			[Bindable]
			public var workBlockUri:String =  new String(); 			
			[Bindable]
			public var ContentType:String =  "video/x-flv"; 
			[Bindable]
			public var mp3Uris:String =  new String();	
			[Bindable]
			public var VLC_EXE_File:String = new String();
			[Bindable]
			public var VLC_ON:String = new String();
			[Bindable]
			public var READY_FOR_LIFTING:String = new String();
			[Bindable]
			public var READY_FOR_LIFTING2:String = new String();
			[Bindable]
			public var GWADR_ISSET:String = new String();
			[Bindable]
			public var BAT_EXE_File:String = new String();
			[Bindable]
			public var BATKiller_EXE_File:String = new String();
			[Bindable]
			public var VLCstring:String = new String(); 
			[Bindable]
			public var gateway:Gateway = new Gateway;
			[Bindable]
			public var CO_Lift_EXE_File:File = new File;
			[Bindable]
			public var LiftString:String = new String();
			
			
			private var process:NativeProcess;	
			private var nativeProcessStartupInfo:NativeProcessStartupInfo;
			private var fs:FileStream;
			private var file:File;
			
			protected function gatewayInactive(event:FaultEvent):void{
				
				Alert.show(" Был указан адресс ядрышка. По данному адресу ядрышко не пашет");
			}
			protected function GetWorkBlockResult_resultHandler(event:ResultEvent):void
			{
				workBlockUri = event.result as String;
				workBlockUri += "?wsdl";
				var workBlock:WorkBlock = new WorkBlock;		
				workBlock.addEventListener(FaultEvent.FAULT, gatewayInactive);
				workBlock.serviceStart(workBlockUri);
				workBlock.showBusyCursor = true;
				IWannaWriteResult.token = workBlock.IWannaWrite(contentToWriteId, ContentType);
				
			} 
			protected function IWannaWriteResult_resultHandler(event:ResultEvent):void
			{
				tabnav.selectedIndex = 2;
				var minuteTimer:Timer = new Timer(10000, 1); 
				minuteTimer.addEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete); 
				minuteTimer.start(); 	
				
			}
			protected function runLift():void
			{
				var file:File = File.applicationDirectory;
				file = file.resolvePath("apps/Lift");
				file = file.resolvePath("lift.exe");
				nativeProcessStartupInfo = new NativeProcessStartupInfo();
				nativeProcessStartupInfo.executable = file;
				process = new NativeProcess();
				process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onErrorData);
				var args:Vector.<String> = new Vector.<String>;
				args.push(	"http://localhost:8080/stream.flv"  );
				args.push(	IWannaWriteResult.lastResult );
				nativeProcessStartupInfo.arguments = args;
				process.start(nativeProcessStartupInfo);		
			}
			protected function goCloud():void
			{
				if(VLC_ON != "1")
				{
				runVLC();
				}
				if(GWADR_ISSET != "1")
				{
				gatewayUri = gatewayUri + "?wsdl";
				GWADR_ISSET = "1";
				gateway = new Gateway;
				gateway.addEventListener(FaultEvent.FAULT, gatewayFAULT);
				gateway.serviceStart(gatewayUri);
				gateway.showBusyCursor = true;	
				}
				GetWorkBlockResult.token = gateway.GetWorkBlock();		
			}
			protected function LogIn_clickHandler(event:MouseEvent):void
			{
				api = new Api();
				api.addEventListener(FaultEvent.FAULT, apiFAULT);
				api.serviceStart(apiUri);
				
				var bytesP:ByteArray = new ByteArray(); 
				bytesP.writeUTFBytes(passwordTF.text); 
				EncryptedLocalStore.setItem("pass", bytesP);
				
				var bytesE:ByteArray = new ByteArray(); 
				bytesE.writeUTFBytes(emailTF.text); 
				EncryptedLocalStore.setItem("email", bytesE);
				
				api.showBusyCursor = true;
				LogInResult.token = api.LogIn(emailTF.text, passwordTF.text);
				
				
			}
			protected function apiFAULT(e:FaultEvent):void{
				Alert.show("api fault");
			}
			protected function gatewayFAULT(e:FaultEvent):void{
				Alert.show("gateway fault");
			}
			protected function getUserData():void
			{
				getDataResult.token = api.getData(userKey);
				getMyNameResult.token = api.getMyName(userKey);
				getCOADRResult.token = api.getGatewayAddress(userKey);
				tabnav.selectedIndex=1;
			}
			protected function LogInResult_resultHandler(event:ResultEvent):void
			{
				userKey = LogInResult.lastResult;
				getUserData();	
			}
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				this.addEventListener(KeyboardEvent.KEY_UP, EnableDebuger);
				tabnav.top = -50;
			}		
			protected function EnableDebuger(e:KeyboardEvent):void
			{

				if (e.keyCode.toString() == "51"){ 
					tabnav.top = 0;
				}
				if (e.keyCode.toString() == "52"){ 
					tabnav.top = -50;
				}
			}
			protected function streamFromListBut_clickHandler(event:MouseEvent):void
			{
			contentToWriteId = int(list.selectedItem);	
			var bytesI:ByteArray = new ByteArray(); 
			bytesI.writeUTFBytes(contentToWriteId.toString()); 
			EncryptedLocalStore.setItem("ToWriteId", bytesI);
			SotSib.enabled = true;
			goCloud();		
			}
			protected function getCOADRResult_resultHandler(event:ResultEvent):void
			{
				gatewayUri = String(getCOADRResult.lastResult);
			}
			protected function button1_clickHandler(event:MouseEvent):void
			{
				LogOut.token = api.getGatewayAddress(userKey);
				KillVLC();
				tabnav.selectedIndex = 0; start1.selectedIndex = 0;
			}
			protected function LogOut_resultHandler(event:ResultEvent):void
			{
				 Alert.show("you just logged out");
			}
			protected function AntSnewstream_creationCompleteHandler(event:FlexEvent):void
			{
				AntSnewstream.enabled = false;
			}
			protected function Go_clickHandler(event:MouseEvent):void
			{
				gatewayUri = gatewayUritf.text;
				ContentType = ContentTypetf.text;
				contentToWriteId = int(contentToWriteIdtf.text);
				goCloud();
			}	
			protected function checkVLCandFFMpeg():void
			{
				var fileVLC:File = File.applicationDirectory;
				fileVLC = fileVLC.resolvePath("apps/VLC");
				fileVLC = fileVLC.resolvePath("vlc1.exe");
				if(!fileVLC.exists){
					Alert.show("You probably downloaded this vercion from SVN and has bilded it on your on. So probably you hoped it will work. It bilds. It shows no errors. But we DO NOT PUT VLC BUILD files into SVN! So you need to get them from somewhere. By now we do not provide tham publicly so we may say this app just does not work=) Just forget about it."); 
				}
			}
			protected function checkLift():void
			{}
			protected function startVLC():void
			{
				createBAT();
			}
			public function createBAT():void
			{
				VLC_ON = "1";
				var fileVLC:File = File.applicationDirectory;
				fileVLC = fileVLC.resolvePath("apps/VLC");
				fileVLC = fileVLC.resolvePath("vlc1.exe");
				VLC_EXE_File = fileVLC.nativePath;
			var file:File =File.userDirectory.resolvePath("./AIR-VLC-CLIENT/config.bat");
			var fs:FileStream = new FileStream();
			fs.open(file, FileMode.WRITE);
			fs.writeUTFBytes( '@echo off \n' + '"' + VLC_EXE_File + '"' +' -I -o dshow:// vdev adev size="640x480" --sout="#transcode{vcodec=FLV1,acodec=mp3,ab=128,channels=2,samplerate=44100}:duplicate{dst=std{access=http{mime=video/x-flv},mux=ffmpeg{flv},dst=:8080/stream.flv}}"');	
			fs.close();
			BAT_EXE_File = file.nativePath;
			startBAT();
			}

			protected function startBAT():void
			{
				var file:File = File.applicationDirectory;
				file = file.resolvePath("apps");
				file = file.resolvePath("Start.exe");
				nativeProcessStartupInfo = new NativeProcessStartupInfo();
				nativeProcessStartupInfo.executable = file;
				process = new NativeProcess();
				process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onErrorData);
				var args:Vector.<String> = new Vector.<String>;
				// optional parameters
				args.push('"' + BAT_EXE_File + '"' );
				nativeProcessStartupInfo.arguments = args;
				process.start(nativeProcessStartupInfo);

				
			}
			public function onTimerComplete(event:TimerEvent):void 
			{ 
				runLift();	
			} 
			private function runVLC():void
			{
				createBAT();	
			}
			private function onErrorData ( e:ProgressEvent ):void
			{}
			protected function previewFromCloud_creationCompleteHandler(event:FlexEvent):void
			{}
			protected function windowedapplication1_windowCompleteHandler(event:AIREvent):void
			{
				checkVLCandFFMpeg();
			}	
			protected function textinput1_changeHandler(event:TextOperationEvent):void
			{
				apiUri = APISTR.text;		

			}	
			protected function APISTR_enterHandler(event:FlexEvent):void
			{
				apiUri = APISTR.text;
				var bytes:ByteArray = new ByteArray(); 
				bytes.writeUTFBytes(apiUri); 
				EncryptedLocalStore.setItem("apiUri", bytes);
				tabnav.selectedIndex = 0;
				
			}
			protected function button2_clickHandler(event:MouseEvent):void
			{
				apiUri = APISTR.text;
				
				var bytes:ByteArray = new ByteArray(); 
				bytes.writeUTFBytes(apiUri); 
				EncryptedLocalStore.setItem("apiUri", bytes);
				tabnav.selectedIndex = 0;
			}
			protected function textinput2_changeHandler(event:TextOperationEvent):void
			{}
			protected function KillVLC():void
			{
				
				file =File.userDirectory.resolvePath("./AIR-VLC-CLIENT/Kill.bat");
				if (!file.exists){
				var fs:FileStream = new FileStream();
				fs.open(file, FileMode.WRITE);
				fs.writeUTFBytes( 'taskkill /F /IM vlc1.exe' + ' \n ' + 'DEL "%~f0"' );		
				fs.close();
				}
				BATKiller_EXE_File = file.nativePath;
				file= File.applicationDirectory;
				file = file.resolvePath("apps");
				file = file.resolvePath("Start.exe");
				nativeProcessStartupInfo = new NativeProcessStartupInfo();
				nativeProcessStartupInfo.executable = file;
				process = new NativeProcess();
				process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onErrorData);
				var args:Vector.<String> = new Vector.<String>;
				args.push('"' + BATKiller_EXE_File + '"' );
				nativeProcessStartupInfo.arguments = args;
				process.start(nativeProcessStartupInfo);
				VLC_ON = "0";
			} 
			protected function windowedapplication1_closingHandler(event:Event):void
			{
				if(VLC_ON == "1"){
				var file:File =File.userDirectory.resolvePath("./AIR-VLC-CLIENT/config.bat");
				file.deleteFile();
				file =File.userDirectory.resolvePath("./AIR-VLC-CLIENT/Kill.bat");
				var fs:FileStream = new FileStream();
				fs.open(file, FileMode.WRITE);
				fs.writeUTFBytes( 'taskkill /F /IM vlc1.exe' + ' \n ' + 'DEL "%~f0"' );			
				fs.close();
				BATKiller_EXE_File = file.nativePath;
				file= File.applicationDirectory;
				file = file.resolvePath("apps");
				file = file.resolvePath("Start.exe");
				nativeProcessStartupInfo = new NativeProcessStartupInfo();
				nativeProcessStartupInfo.executable = file;
				process = new NativeProcess();
				process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onErrorData);
				var args:Vector.<String> = new Vector.<String>;
				args.push('"' + BATKiller_EXE_File + '"' );
				nativeProcessStartupInfo.arguments = args;
				process.start(nativeProcessStartupInfo);
				}
			}
			protected function localVideoBox_creationCompleteHandler(event:FlexEvent):void
			{
				localVideoBox.source = "http://localhost:8080/stream.flv";
				localVideoBox.play();
			}
			protected function APISTR_addedHandler(event:Event):void
			{
				if (EncryptedLocalStore.getItem("apiUri")){
					
					var storedValue:ByteArray = EncryptedLocalStore.getItem("apiUri"); 
					if (storedValue.length >=3){
						APISTR.text = storedValue.readUTFBytes(storedValue.length);} 
				}}


			protected function emailTF_addedHandler(event:Event):void
			{
				if (EncryptedLocalStore.getItem("email")){
					
					var storedValue:ByteArray = EncryptedLocalStore.getItem("email"); 
					if (storedValue.length >=3){
						emailTF.text = storedValue.readUTFBytes(storedValue.length);} 
				}}
			


			protected function passwordTF_addedHandler(event:Event):void
			{
				if (EncryptedLocalStore.getItem("pass")){
				var storedValue:ByteArray = EncryptedLocalStore.getItem("pass"); 
				passwordTF.text = storedValue.readUTFBytes(storedValue.length); 
				}
				}


			protected function button3_addedHandler(event:Event):void
			{
				
					if (EncryptedLocalStore.getItem("ToWriteId")){
						var storedValue:ByteArray = EncryptedLocalStore.getItem("ToWriteId"); 
						contentToWriteId = int( storedValue.readUTFBytes(storedValue.length)); 
						SotSib.enabled = true;
					}
				
			}


			protected function SotSib_clickHandler(event:MouseEvent):void
			{
				goCloud();
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="LogInResult" result="LogInResult_resultHandler(event)"/>
		<s:CallResponder id="LogOut"  result="LogOut_resultHandler(event)"/>
		<s:CallResponder id="getDataResult"/>
		<s:CallResponder id="getMyNameResult"/>
		<s:CallResponder id="getCOADRResult" result="getCOADRResult_resultHandler(event)"/>
		
		<s:CallResponder id="IWannaWriteResult"  result="IWannaWriteResult_resultHandler(event)"/>
		<s:CallResponder id="GetWorkBlockResult"  result="GetWorkBlockResult_resultHandler(event)"/>
	</fx:Declarations>
	<mx:TabNavigator  left="0" right="0" bottom="0" top="0"   id="tabnav" selectedIndex="5">
		<s:NavigatorContent label="Start" width="100%" backgroundAlpha="0" height="100%"  >
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
			<mx:TabNavigator right="0" left="0" top="0" bottom="0" id="start1">
				<s:NavigatorContent label="Welcome" width="100%" height="100%">
					<mx:Form horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label="Welcome to CO writter"/>
						<s:Button label="Log In" width="100%" click="start1.selectedIndex = 1"/>
						<s:Button label="Sign UP" width="100%" click="start1.selectedIndex = 2" enabled="false"/>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="Log In" width="100%" height="100%">
					<mx:Form width="326" defaultButton="{LogIn}" height="136" horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label="Log In"/>
						<mx:FormItem label="Email" width="100%" id="TF">
							<s:TextInput width="100%" added="emailTF_addedHandler(event)" id="emailTF" text="Example@Example.com"/>
						</mx:FormItem>
						<mx:FormItem label="Password" width="100%">
							<s:TextInput    id="passwordTF"    
											maxChars="16"
											added="passwordTF_addedHandler(event)"
											displayAsPassword="true"
											focusIn="passwordTF.displayAsPassword = false;"
											focusOut="passwordTF.displayAsPassword = true;" width="100%" text="000000"/>
						</mx:FormItem>
						<mx:Button label=" Log In" width="100%" id="LogIn" click="LogIn_clickHandler(event)"/>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="Sign Up"  id="SignUpP" width="100%" height="100%">
					<mx:Form width="326" defaultButton="{SignUp}" height="168" horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label="Sign Up"/>
						<mx:FormItem label="Name" width="100%" id="TF1">
							<s:TextInput width="100%" id="nameSUTF" text="Name Example"/>
						</mx:FormItem>
						<mx:FormItem label="Email" width="100%" id="TF0">
							<s:TextInput width="100%" id="emailSUTF" text="Example@Example.com"/>
						</mx:FormItem>
						<mx:FormItem label="Password" width="100%">
							<s:TextInput    id="passwordSUTF"    
											maxChars="16"
											displayAsPassword="true"
											focusIn="passwordTF.displayAsPassword = false;"
											focusOut="passwordTF.displayAsPassword = true;" width="100%" text="000000"/>
						</mx:FormItem>
						<mx:Button label="Sign Up" width="100%" id="SignUp" click="LogIn_clickHandler(event)"/>
					</mx:Form>
				</s:NavigatorContent>
			</mx:TabNavigator>
			
		</s:NavigatorContent>
		<s:NavigatorContent label="Select" width="100%" height="100%" id="maintab">
			<mx:TabNavigator left="0" right="0" top="0" bottom="0" id="select1">
				<s:NavigatorContent label="Broadcast" width="100%" height="100%">
					<mx:Form horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label=" {'Welcome ' + String(getMyNameResult.lastResult)}" width="100%" textAlign="center"/>
						<mx:FormHeading label="How do you want to broadcast?" width="100%" textAlign="center"/>
						<s:Button label="On to Existing Stream" width="100%" click="select1.selectedIndex = 1"/>
						<s:Button label="On to New Stream" width="100%" click="select1.selectedIndex = 2" enabled="false"/>
						<s:Button label="On to last Stream I broadcasted"  added="button3_addedHandler(event)" width="100%" enabled="false" id="SotSib" click="SotSib_clickHandler(event)"/>
					</mx:Form>
					
				</s:NavigatorContent>
				<s:NavigatorContent label="On to old stream" width="100%" height="100%" >
					<mx:Form width="326" height="163" horizontalCenter="0" verticalCenter="0">
						<mx:FormItem label="Yours Id's List" width="100%" height="88">
							<s:List  id="list" width="100%" height="100%">
								<s:AsyncListView list="{getDataResult.lastResult}"/>
							</s:List>
						</mx:FormItem>
						<mx:FormItem label="Stream onto selected SID">
							<s:Button label="Stream!" id="streamFromListBut" click="streamFromListBut_clickHandler(event)"/>
						</mx:FormItem>
					</mx:Form>
					<s:Button label="Select another broadcast method" width="195" click="select1.selectedIndex=0" bottom="10" right="83"/>
				</s:NavigatorContent>
				<s:NavigatorContent label="On to New stream" creationComplete="AntSnewstream_creationCompleteHandler(event)" width="100%" height="100%"  id="AntSnewstream">
					<mx:Form width="326" height="70" horizontalCenter="0" verticalCenter="0">
						<mx:FormItem label="Gen New Stream">
							<s:Button label="Stream onto new stream"/>
						</mx:FormItem>
					</mx:Form>
					<s:Button label="Select another broadcast method" width="195" click="select1.selectedIndex=0" right="83" top="420"/>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:Button label="Log Out" bottom="10" right="10" click="button1_clickHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="View" width="100%" height="100%" >
			<mx:TabNavigator right="0" left="0" top="0" bottom="0" id="stackView">
				<s:NavigatorContent label="Preview" width="100%" height="100%">
					<mx:Form width="326" horizontalCenter="0" textAlign="center" verticalCenter="0">
						<mx:FormHeading label="View options" width="100%"/>
						<mx:FormHeading label="Select Prewiew" width="100%"/>
						<mx:FormItem label="Prewiew from" width="100%">
							<s:Button label="Local network" width="100%" click="stackView.selectedIndex=1"/>
						</mx:FormItem>
					</mx:Form>
					<s:Button label="Select another stream for broadcast" width="224"  click="tabnav.selectedIndex = 1"  right="6" bottom="7"/>
				</s:NavigatorContent>
				<s:NavigatorContent label="Local" width="100%" height="100%">
					
					<s:Button x="331" y="7" label="Log Out" click="button1_clickHandler(event)"/>
					<s:Button x="9" y="7" click="stackView.selectedIndex = 0" label="Return to preview form selection"/>
					<s:VideoPlayer skinClass="VPS" left="0" right="0" top="35" creationComplete="localVideoBox_creationCompleteHandler(event)"  bottom="0" id="localVideoBox"/>
				</s:NavigatorContent>
			</mx:TabNavigator>
		</s:NavigatorContent>
		<s:NavigatorContent label="Debug" width="100%" height="100%" id="DebugWindow">
			
			<mx:TabNavigator right="0" left="0" top="0" bottom="0" id="debug1">
				<s:NavigatorContent  label="You Entered THE debug mode" width="100%" height="100%">
					<mx:Form horizontalCenter="0" verticalCenter="0">
						<mx:FormHeading label=" {'Welcome to debug mode ' + String(getMyNameResult.lastResult)}" width="100%" textAlign="center"/>
						<mx:FormHeading label="What do you want to know" width="100%" textAlign="center"/>
						<s:Button label="How CMS is interacting with Kernel" width="100%" click="debug1.selectedIndex = 1;"/>
						<s:Button label="What Strings are used now by VLC and Lift" width="100%" click="debug1.selectedIndex = 2;"/>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent label="CMS-Kernel" width="100%" height="100%">
					
					<mx:Form y="99" width="326" height="173" horizontalCenter="0">
						<mx:FormHeading label="CO Writer: Write on ID"/>
						<mx:FormItem label="GW adr :" width="100%">
							<s:TextInput id="gatewayUritf" text="{getCOADRResult.lastResult}" width="100%"/>
						</mx:FormItem>
						<mx:FormItem label="ID to write :" width="100%">
							<s:TextInput id="contentToWriteIdtf" text="{String(contentToWriteId)}" width="100%"/>
						</mx:FormItem>
						<mx:FormItem label="Content type :" width="100%">
							<s:TextInput id="ContentTypetf" text="video/x-flv" width="100%"/>
						</mx:FormItem>
						<s:Button label="Go Cloud!" width="100%" id="Go" click="Go_clickHandler(event)"/>
					</mx:Form>
					<mx:Form width="326" height="97" y="283" horizontalCenter="1">
						<mx:FormHeading label="CO Writer Console"/>
						<mx:FormItem label="Log:" width="100%" height="100%">
							<s:TextArea id="textArea" text="{' Адрес гейтвея ' + String(getCOADRResult.lastResult) + ' Адрес взятого воркблока ' + String(GetWorkBlockResult.lastResult) + ' ' + 'принятые от клауда урлки на запись '+ String(IWannaWriteResult.lastResult) }" width="100%" height="100%" textAlign="left" enabled="true" editable="true" maxChars="999999" verticalAlign="justify"/>
						</mx:FormItem>
					</mx:Form>
					
					<mx:Form width="326" height="80" horizontalCenter="0" top="10">
						<mx:FormHeading label="Your API key"/>
						<mx:FormItem label="Key" width="100%">
							<s:TextInput id="keyTextInput" width="100%" text="{userKey}" enter="userKey = keyTextInput.text; getUserData();"/>
						</mx:FormItem>
					</mx:Form>
				</s:NavigatorContent>
				<s:NavigatorContent visible="false" label="Vlc-CO-Kernel" width="100%" height="100%">
					<mx:HDividedBox right="0" left="0" top="25" bottom="0">
						
					
					<s:VideoPlayer skinClass="VPS" top="35" bottom="0" width="100%" right="0" height="100%"/>
					<s:VideoPlayer skinClass="VPS" left="0" top="35" bottom="0" width="100%" height="100%"/>
					</mx:HDividedBox>
					<s:Label text="Local" left="10" top="10"/>
					<s:Label text="From CO Kernel" right="10" top="10"/>
				</s:NavigatorContent>
			</mx:TabNavigator>
		</s:NavigatorContent>
		<s:NavigatorContent label="Options" width="100%" height="100%">
			<mx:Form horizontalCenter="0" verticalCenter="0" width="326">
				<mx:FormHeading label="API options" width="100%" textAlign="center"/>
				<mx:FormHeading label="В релизе будет запрятано глубже"/>
				<mx:FormItem label="CMS URL" width="100%">
					<s:TextInput x="47" y="9" added="APISTR_addedHandler(event)" change="textinput1_changeHandler(event)" enter="APISTR_enterHandler(event)" id="APISTR" text="http://localhost/cms/api.php" width="100%"/>
				</mx:FormItem>
				<mx:FormItem>
					<s:Button label="Start using adress!" click="button2_clickHandler(event)"/>
				</mx:FormItem>
			</mx:Form>
		</s:NavigatorContent>
	</mx:TabNavigator>
	
</s:WindowedApplication>
