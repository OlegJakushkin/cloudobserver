//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace CloudObserver.UserInterface.AuthenticationServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationServiceReference.AuthenticationServiceContract")]
    public interface AuthenticationServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AbstractServiceContract/GetControllerServiceUri", ReplyAction="http://tempuri.org/AbstractServiceContract/GetControllerServiceUriResponse")]
        System.IAsyncResult BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState);
        
        string EndGetControllerServiceUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AbstractServiceContract/SetControllerServiceUri", ReplyAction="http://tempuri.org/AbstractServiceContract/SetControllerServiceUriResponse")]
        System.IAsyncResult BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState);
        
        void EndSetControllerServiceUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AuthenticationServiceContract/UserCheckEmailAvailability", ReplyAction="http://tempuri.org/AuthenticationServiceContract/UserCheckEmailAvailabilityRespon" +
            "se")]
        System.IAsyncResult BeginUserCheckEmailAvailability(string email, System.AsyncCallback callback, object asyncState);
        
        bool EndUserCheckEmailAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AuthenticationServiceContract/UserLogin", ReplyAction="http://tempuri.org/AuthenticationServiceContract/UserLoginResponse")]
        System.IAsyncResult BeginUserLogin(string email, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndUserLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AuthenticationServiceContract/UserRegister", ReplyAction="http://tempuri.org/AuthenticationServiceContract/UserRegisterResponse")]
        System.IAsyncResult BeginUserRegister(string email, string password, string name, string description, byte[] icon, System.AsyncCallback callback, object asyncState);
        
        int EndUserRegister(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface AuthenticationServiceContractChannel : CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetControllerServiceUriCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetControllerServiceUriCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserCheckEmailAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserCheckEmailAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UserRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AuthenticationServiceContractClient : System.ServiceModel.ClientBase<CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract>, CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract {
        
        private BeginOperationDelegate onBeginGetControllerServiceUriDelegate;
        
        private EndOperationDelegate onEndGetControllerServiceUriDelegate;
        
        private System.Threading.SendOrPostCallback onGetControllerServiceUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetControllerServiceUriDelegate;
        
        private EndOperationDelegate onEndSetControllerServiceUriDelegate;
        
        private System.Threading.SendOrPostCallback onSetControllerServiceUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserCheckEmailAvailabilityDelegate;
        
        private EndOperationDelegate onEndUserCheckEmailAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onUserCheckEmailAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserLoginDelegate;
        
        private EndOperationDelegate onEndUserLoginDelegate;
        
        private System.Threading.SendOrPostCallback onUserLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserRegisterDelegate;
        
        private EndOperationDelegate onEndUserRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onUserRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AuthenticationServiceContractClient() {
        }
        
        public AuthenticationServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetControllerServiceUriCompletedEventArgs> GetControllerServiceUriCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetControllerServiceUriCompleted;
        
        public event System.EventHandler<UserCheckEmailAvailabilityCompletedEventArgs> UserCheckEmailAvailabilityCompleted;
        
        public event System.EventHandler<UserLoginCompletedEventArgs> UserLoginCompleted;
        
        public event System.EventHandler<UserRegisterCompletedEventArgs> UserRegisterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetControllerServiceUri(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.EndGetControllerServiceUri(System.IAsyncResult result) {
            return base.Channel.EndGetControllerServiceUri(result);
        }
        
        private System.IAsyncResult OnBeginGetControllerServiceUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).BeginGetControllerServiceUri(callback, asyncState);
        }
        
        private object[] OnEndGetControllerServiceUri(System.IAsyncResult result) {
            string retVal = ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).EndGetControllerServiceUri(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetControllerServiceUriCompleted(object state) {
            if ((this.GetControllerServiceUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetControllerServiceUriCompleted(this, new GetControllerServiceUriCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetControllerServiceUriAsync() {
            this.GetControllerServiceUriAsync(null);
        }
        
        public void GetControllerServiceUriAsync(object userState) {
            if ((this.onBeginGetControllerServiceUriDelegate == null)) {
                this.onBeginGetControllerServiceUriDelegate = new BeginOperationDelegate(this.OnBeginGetControllerServiceUri);
            }
            if ((this.onEndGetControllerServiceUriDelegate == null)) {
                this.onEndGetControllerServiceUriDelegate = new EndOperationDelegate(this.OnEndGetControllerServiceUri);
            }
            if ((this.onGetControllerServiceUriCompletedDelegate == null)) {
                this.onGetControllerServiceUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetControllerServiceUriCompleted);
            }
            base.InvokeAsync(this.onBeginGetControllerServiceUriDelegate, null, this.onEndGetControllerServiceUriDelegate, this.onGetControllerServiceUriCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetControllerServiceUri(controllerServiceUri, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.EndSetControllerServiceUri(System.IAsyncResult result) {
            base.Channel.EndSetControllerServiceUri(result);
        }
        
        private System.IAsyncResult OnBeginSetControllerServiceUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string controllerServiceUri = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).BeginSetControllerServiceUri(controllerServiceUri, callback, asyncState);
        }
        
        private object[] OnEndSetControllerServiceUri(System.IAsyncResult result) {
            ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).EndSetControllerServiceUri(result);
            return null;
        }
        
        private void OnSetControllerServiceUriCompleted(object state) {
            if ((this.SetControllerServiceUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetControllerServiceUriCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetControllerServiceUriAsync(string controllerServiceUri) {
            this.SetControllerServiceUriAsync(controllerServiceUri, null);
        }
        
        public void SetControllerServiceUriAsync(string controllerServiceUri, object userState) {
            if ((this.onBeginSetControllerServiceUriDelegate == null)) {
                this.onBeginSetControllerServiceUriDelegate = new BeginOperationDelegate(this.OnBeginSetControllerServiceUri);
            }
            if ((this.onEndSetControllerServiceUriDelegate == null)) {
                this.onEndSetControllerServiceUriDelegate = new EndOperationDelegate(this.OnEndSetControllerServiceUri);
            }
            if ((this.onSetControllerServiceUriCompletedDelegate == null)) {
                this.onSetControllerServiceUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetControllerServiceUriCompleted);
            }
            base.InvokeAsync(this.onBeginSetControllerServiceUriDelegate, new object[] {
                        controllerServiceUri}, this.onEndSetControllerServiceUriDelegate, this.onSetControllerServiceUriCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.BeginUserCheckEmailAvailability(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserCheckEmailAvailability(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.EndUserCheckEmailAvailability(System.IAsyncResult result) {
            return base.Channel.EndUserCheckEmailAvailability(result);
        }
        
        private System.IAsyncResult OnBeginUserCheckEmailAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).BeginUserCheckEmailAvailability(email, callback, asyncState);
        }
        
        private object[] OnEndUserCheckEmailAvailability(System.IAsyncResult result) {
            bool retVal = ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).EndUserCheckEmailAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserCheckEmailAvailabilityCompleted(object state) {
            if ((this.UserCheckEmailAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserCheckEmailAvailabilityCompleted(this, new UserCheckEmailAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserCheckEmailAvailabilityAsync(string email) {
            this.UserCheckEmailAvailabilityAsync(email, null);
        }
        
        public void UserCheckEmailAvailabilityAsync(string email, object userState) {
            if ((this.onBeginUserCheckEmailAvailabilityDelegate == null)) {
                this.onBeginUserCheckEmailAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginUserCheckEmailAvailability);
            }
            if ((this.onEndUserCheckEmailAvailabilityDelegate == null)) {
                this.onEndUserCheckEmailAvailabilityDelegate = new EndOperationDelegate(this.OnEndUserCheckEmailAvailability);
            }
            if ((this.onUserCheckEmailAvailabilityCompletedDelegate == null)) {
                this.onUserCheckEmailAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserCheckEmailAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginUserCheckEmailAvailabilityDelegate, new object[] {
                        email}, this.onEndUserCheckEmailAvailabilityDelegate, this.onUserCheckEmailAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.BeginUserLogin(string email, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserLogin(email, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.EndUserLogin(System.IAsyncResult result) {
            return base.Channel.EndUserLogin(result);
        }
        
        private System.IAsyncResult OnBeginUserLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).BeginUserLogin(email, password, callback, asyncState);
        }
        
        private object[] OnEndUserLogin(System.IAsyncResult result) {
            bool retVal = ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).EndUserLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserLoginCompleted(object state) {
            if ((this.UserLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserLoginAsync(string email, string password) {
            this.UserLoginAsync(email, password, null);
        }
        
        public void UserLoginAsync(string email, string password, object userState) {
            if ((this.onBeginUserLoginDelegate == null)) {
                this.onBeginUserLoginDelegate = new BeginOperationDelegate(this.OnBeginUserLogin);
            }
            if ((this.onEndUserLoginDelegate == null)) {
                this.onEndUserLoginDelegate = new EndOperationDelegate(this.OnEndUserLogin);
            }
            if ((this.onUserLoginCompletedDelegate == null)) {
                this.onUserLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserLoginCompleted);
            }
            base.InvokeAsync(this.onBeginUserLoginDelegate, new object[] {
                        email,
                        password}, this.onEndUserLoginDelegate, this.onUserLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.BeginUserRegister(string email, string password, string name, string description, byte[] icon, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserRegister(email, password, name, description, icon, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract.EndUserRegister(System.IAsyncResult result) {
            return base.Channel.EndUserRegister(result);
        }
        
        private System.IAsyncResult OnBeginUserRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string name = ((string)(inValues[2]));
            string description = ((string)(inValues[3]));
            byte[] icon = ((byte[])(inValues[4]));
            return ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).BeginUserRegister(email, password, name, description, icon, callback, asyncState);
        }
        
        private object[] OnEndUserRegister(System.IAsyncResult result) {
            int retVal = ((CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract)(this)).EndUserRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserRegisterCompleted(object state) {
            if ((this.UserRegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserRegisterCompleted(this, new UserRegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserRegisterAsync(string email, string password, string name, string description, byte[] icon) {
            this.UserRegisterAsync(email, password, name, description, icon, null);
        }
        
        public void UserRegisterAsync(string email, string password, string name, string description, byte[] icon, object userState) {
            if ((this.onBeginUserRegisterDelegate == null)) {
                this.onBeginUserRegisterDelegate = new BeginOperationDelegate(this.OnBeginUserRegister);
            }
            if ((this.onEndUserRegisterDelegate == null)) {
                this.onEndUserRegisterDelegate = new EndOperationDelegate(this.OnEndUserRegister);
            }
            if ((this.onUserRegisterCompletedDelegate == null)) {
                this.onUserRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginUserRegisterDelegate, new object[] {
                        email,
                        password,
                        name,
                        description,
                        icon}, this.onEndUserRegisterDelegate, this.onUserRegisterCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract CreateChannel() {
            return new AuthenticationServiceContractClientChannel(this);
        }
        
        private class AuthenticationServiceContractClientChannel : ChannelBase<CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract>, CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract {
            
            public AuthenticationServiceContractClientChannel(System.ServiceModel.ClientBase<CloudObserver.UserInterface.AuthenticationServiceReference.AuthenticationServiceContract> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetControllerServiceUri(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetControllerServiceUri", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetControllerServiceUri(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetControllerServiceUri", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetControllerServiceUri(string controllerServiceUri, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = controllerServiceUri;
                System.IAsyncResult _result = base.BeginInvoke("SetControllerServiceUri", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetControllerServiceUri(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetControllerServiceUri", _args, result);
            }
            
            public System.IAsyncResult BeginUserCheckEmailAvailability(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("UserCheckEmailAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserCheckEmailAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserCheckEmailAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserLogin(string email, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = email;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("UserLogin", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUserLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UserLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserRegister(string email, string password, string name, string description, byte[] icon, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = email;
                _args[1] = password;
                _args[2] = name;
                _args[3] = description;
                _args[4] = icon;
                System.IAsyncResult _result = base.BeginInvoke("UserRegister", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUserRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UserRegister", _args, result)));
                return _result;
            }
        }
    }
}
