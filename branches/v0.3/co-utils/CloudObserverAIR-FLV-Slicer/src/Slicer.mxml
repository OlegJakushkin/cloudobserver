<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   creationComplete="windowedapplication1_creationCompleteHandler(event); "
					   showStatusBar="false" 
					   backgroundColor="#000000"
					   width="298" height="238"
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   styleName="WindowedApplication"
					   viewSourceURL="srcview/index.html">
	
	<fx:Script>
		<![CDATA[
		
			import flash.events.*;
			import flash.filesystem.*;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import org.bytearray.video.FLVSlice;
			import org.bytearray.video.FLVSlicer;
			import org.bytearray.video.events.SlicedEvent;
			
			[Bindable]
			public var ba:ByteArray = new ByteArray;
			
			private var currentFile:File;
			private var stream:FileStream = new FileStream();
			private var defaultDirectory:File;
			private var flvBytes:Class;
			private var slice:FLVSlice;
			private var sound:ByteArray;
			private var videoOnly:ByteArray;
			private var ns:NetStream;
			private var nc:NetConnection;
			private var video:Video;
			private var inc:int;
			private var dic:Dictionary = new Dictionary(true);
			private var slicer:FLVSlicer;
			private var toggle:Boolean;
			
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				SBT.enabled = false;
				SBF.enabled = false;
			}
			
			protected function openFile_clickHandler(event:Event):void
			{
				SBT.enabled = false;
				SBF.enabled = false;
				fileSelected.label = "File is not selected";
				var txtFilter:FileFilter = new FileFilter("Video FLV", "*.FLV;*.flv");
				var fileChooser:File;
				if (currentFile) 
				{
					fileChooser = currentFile;
				}
				else
				{
					fileChooser = File.desktopDirectory;
				}
				fileChooser.browseForOpen("Open", [txtFilter] );
				fileChooser.addEventListener(Event.SELECT, fileOpenSelected);
			}
			
			protected function fileOpenSelected(event:Event):void
			{
				
				currentFile = event.target as File;
				stream = new FileStream();
				stream.open(currentFile, FileMode.READ);
				
				stream.readBytes(ba);
				
				stream.close();
				
				
				fileSelected.label = "File selected";
				SBT.enabled = true;
				SBF.enabled = true;
				
			}
			
			protected function	saveVideoOnly():void
			{ 
				slicer = new FLVSlicer(ba);
				slicer.addEventListener( SlicedEvent.COMPLETE, onSliced );
				videoOnly = slicer.video;
				var file:File = File.desktopDirectory.resolvePath("video"+".flv");
				var fs:FileStream = new FileStream();
				fs.open(file, FileMode.WRITE);
				fs.writeBytes(videoOnly, 0, videoOnly.length);
				fs.close();	
			}
			
			protected function	saveAudioOnly():void
			{ 
				slicer = new FLVSlicer(ba);
				slicer.addEventListener( SlicedEvent.COMPLETE, onSliced );
				videoOnly = slicer.sound;
				var file:File = File.desktopDirectory.resolvePath("audio"+".flv");
				var fs:FileStream = new FileStream();
				fs.open(file, FileMode.WRITE);
				fs.writeBytes(videoOnly, 0, videoOnly.length);
				fs.close();	
			}
			
			protected function	saveRegion(start:Number, end:Number):void
			{ 
				slicer = new FLVSlicer(ba);
				
				slicer.addEventListener( SlicedEvent.COMPLETE, onSliced );
				
				slice = slicer.slice(start, end);
				
				Alert.show( slice.duration.toString());
				videoOnly = slice.stream;
				var file:File = File.desktopDirectory.resolvePath("slice"+(++inc)+".flv");
				var fs:FileStream = new FileStream();
				fs.open(file, FileMode.WRITE);
				fs.writeBytes(videoOnly, 0, videoOnly.length);
				fs.close();	
			}
			
			private function onSliced ( e:SlicedEvent ):void
			{
				Alert.show(	"video was sliced!" );
			}
			
			private function save (e:MouseEvent):void
			{
				var file:FileReference = new FileReference();
				if ( slice != null ) 
					file.save(slice.stream, "slice"+(++inc)+".flv");
			}
			
			protected function cutbytype_clickHandler(event:MouseEvent):void
			{
				if (radiogroup1.selectedValue == "Audio only"){saveAudioOnly()}
				if  (radiogroup1.selectedValue == "Video only") {saveVideoOnly()}
			}
			
			protected function cutbytime_clickHandler(event:MouseEvent):void
			{
				saveRegion(timeStart.value, timeEnd.value);
			}
			
		]]>
	</fx:Script>
	
	
	
	<fx:Declarations>
		<s:RadioButtonGroup id="radiogroup1"/>
		
		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:Accordion right="0" left="0" top="0" bottom="0">
		<s:NavigatorContent label="Выбрать Файл" width="100%" height="100%">
			<mx:Form left="10" right="10" top="10" bottom="10" textAlign="center">
				<mx:FormHeading label="Выбераем ФЛВшку"/>
				<mx:FormItem width="100%">
					<s:Button label="Open File Dialog" id="openFile" click="openFile_clickHandler(event)" width="100%" height="100%"/>
				</mx:FormItem>
				<mx:FormItem id="fileSelected" width="100%" height="100%" fontWeight="bold">
				</mx:FormItem>
			</mx:Form>
		</s:NavigatorContent>
		<s:NavigatorContent label="Резать по времени" width="100%" id="SBT" height="100%">
			<mx:Form left="10" right="10" top="10" defaultButton="{cutbytime}" bottom="10" textAlign="center">
				<mx:FormHeading label="Режим ФЛВшку по милисекундам" textAlign="left"/>
				<mx:FormItem   label="Начало" width="100%">
					<s:NumericStepper id="timeStart" stepSize="1" minimum="1" maximum="1000000" width="100%"/>
				</mx:FormItem>
				<mx:FormItem label="Конец"  width="100%">
					<s:NumericStepper id="timeEnd" stepSize="1" minimum="1" maximum="1000000" width="100%"/>
				</mx:FormItem>
				<mx:FormItem width="100%">
					<s:Button label="Резать!" id="cutbytime"  click="cutbytime_clickHandler(event)" width="100%" height="100%"/>
				</mx:FormItem>
			</mx:Form>
		</s:NavigatorContent>
		<s:NavigatorContent label="Резать по типу" width="100%" height="100%" id="SBF">
			<mx:Form right="10" left="10" top="10" bottom="10" defaultButton="{cutbytype}">
				<mx:FormHeading label="Вырежим из ФЛВшки"/>
				<mx:FormItem width="100%">
					<s:RadioButton label="Audio only"  selected="true" groupName="radiogroup1"/>
					<s:RadioButton x="37" y="33" label="Video only" groupName="radiogroup1"/>
				</mx:FormItem>
				<mx:FormItem width="100%">
					<s:Button label="Резать!" id="cutbytype" click="cutbytype_clickHandler(event)" width="100%" height="100%"/>
				</mx:FormItem>
			</mx:Form>
		</s:NavigatorContent>
	</mx:Accordion>
	
</s:WindowedApplication>
