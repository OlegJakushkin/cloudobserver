<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Class="concept1.App" mc:Ignorable="d">
	<Application.Resources>
		<!-- Resources scoped at the Application level should be defined here. -->
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceDictionary1.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<ControlTemplate x:Key="ValidationToolTipTemplate">
				<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
					<Grid.RenderTransform>
						<TranslateTransform x:Name="xform" X="-25"/>
					</Grid.RenderTransform>
					<vsm:VisualStateManager.VisualStateGroups>
						<vsm:VisualStateGroup x:Name="OpenStates">
							<vsm:VisualStateGroup.Transitions>
								<vsm:VisualTransition GeneratedDuration="0"/>
								<vsm:VisualTransition GeneratedDuration="0:0:0.2" To="Open">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
											<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualTransition>
							</vsm:VisualStateGroup.Transitions>
							<vsm:VisualState x:Name="Closed">
								<Storyboard>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
										<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</vsm:VisualState>
							<vsm:VisualState x:Name="Open">
								<Storyboard>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
										<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
										<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</vsm:VisualState>
						</vsm:VisualStateGroup>
					</vsm:VisualStateManager.VisualStateGroups>
					<Border Margin="4,4,-4,-4" Background="#152A2E31" CornerRadius="4"/>
					<Border Margin="3,3,-3,-3" Background="#252A2E31" CornerRadius="4"/>
					<Border Margin="2,2,-2,-2" Background="#352A2E31" CornerRadius="4"/>
					<Border Margin="1,1,-1,-1" Background="#452A2E31" CornerRadius="4"/>
					<Border Background="#FFDC000C" CornerRadius="4"/>
					<Border CornerRadius="4">
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#66FFFFFF"/>
								<GradientStop Color="#66000000" Offset="1"/>
								<GradientStop Color="#00E5E5E5" Offset="0.1"/>
								<GradientStop Color="#00161616" Offset="0.9"/>
							</LinearGradientBrush>
						</Border.Background>
						<TextBlock Margin="8,3,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="White" Text="{Binding Path=(Validation.Errors)[0].Exception.Message}" TextWrapping="Wrap"/>
					</Border>
				</Grid>
			</ControlTemplate>
			<Style x:Key="CheckBoxStyle1" TargetType="CheckBox">
				<Setter Property="Background" Value="#FF448DCA"/>
				<Setter Property="Foreground" Value="#FF000000"/>
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="VerticalContentAlignment" Value="Top"/>
				<Setter Property="Padding" Value="4,1,0,0"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="BorderBrush">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFA3AEB9" Offset="0"/>
							<GradientStop Color="#FF8399A9" Offset="0.375"/>
							<GradientStop Color="#FF718597" Offset="0.375"/>
							<GradientStop Color="#FF617584" Offset="1"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="CheckBox">
							<Grid>
								<vsm:VisualStateManager.VisualStateGroups>
									<vsm:VisualStateGroup x:Name="CommonStates">
										<vsm:VisualState x:Name="Normal">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
												<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
													<EasingColorKeyFrame KeyTime="00:00:00" Value="#07FFFFFF"/>
												</ColorAnimationUsingKeyFrames>
												<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
													<EasingColorKeyFrame KeyTime="00:00:00" Value="#07FFFFFF"/>
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
										<vsm:VisualState x:Name="MouseOver">
											<Storyboard d:ShouldSerialize="False"/>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Pressed">
											<Storyboard d:ShouldSerialize="False"/>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Disabled">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
													<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
									</vsm:VisualStateGroup>
									<vsm:VisualStateGroup x:Name="CheckStates">
										<vsm:VisualState x:Name="Checked">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
													<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
												<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
													<EasingColorKeyFrame KeyTime="00:00:00" Value="#FFD0D0D0"/>
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Unchecked"/>
										<vsm:VisualState x:Name="Indeterminate">
											<Storyboard d:ShouldSerialize="False"/>
										</vsm:VisualState>
									</vsm:VisualStateGroup>
									<vsm:VisualStateGroup x:Name="FocusStates">
										<vsm:VisualState x:Name="Focused">
											<Storyboard d:ShouldSerialize="False"/>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Unfocused"/>
									</vsm:VisualStateGroup>
									<vsm:VisualStateGroup x:Name="ValidationStates">
										<vsm:VisualState x:Name="Valid"/>
										<vsm:VisualState x:Name="InvalidUnfocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Visible</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
										<vsm:VisualState x:Name="InvalidFocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Visible</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<System:Boolean>True</System:Boolean>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
									</vsm:VisualStateGroup>
								</vsm:VisualStateManager.VisualStateGroups>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="16"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="rectangle_Copy" Fill="#FF333333" Stroke="#FF000000" Margin="0,0,4,0" Opacity="0" Height="12" VerticalAlignment="Top"/>
								<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
									<Path x:Name="CheckIcon" Fill="#FF333333" Stretch="Fill" Height="10" Margin="1,1,0,1.5" Width="10.5" Opacity="0" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z"/>
									<Border x:Name="ValidationErrorElement" Margin="1" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
										<ToolTipService.ToolTip>
											<ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
												<ToolTip.Triggers>
													<EventTrigger RoutedEvent="Canvas.Loaded">
														<BeginStoryboard>
															<Storyboard>
																<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
																	<DiscreteObjectKeyFrame KeyTime="0">
																		<DiscreteObjectKeyFrame.Value>
																			<System:Boolean>true</System:Boolean>
																		</DiscreteObjectKeyFrame.Value>
																	</DiscreteObjectKeyFrame>
																</ObjectAnimationUsingKeyFrames>
															</Storyboard>
														</BeginStoryboard>
													</EventTrigger>
												</ToolTip.Triggers>
											</ToolTip>
										</ToolTipService.ToolTip>
										<Grid Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10" Background="Transparent">
											<Path Fill="#FFDC000C" Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z"/>
											<Path Fill="#ffffff" Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7"/>
										</Grid>
									</Border>
									<Rectangle x:Name="rectangle" Fill="#FF333333" Stroke="#FF000000" Margin="0,0,0,1" Opacity="0"/>
									<Rectangle Fill="#0BFFFFFF" Stroke="#47FFFFFF" Margin="0,1,0,0"/>
								</Grid>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
								<Rectangle Fill="#0BFFFFFF" Stroke="#21414141" Height="0" HorizontalAlignment="Left" Margin="23,0,0,-39" VerticalAlignment="Bottom" Width="0" Grid.Column="1"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="LinkButtonGreen" TargetType="Button">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Grid>
								<vsm:VisualStateManager.VisualStateGroups>
									<vsm:VisualStateGroup x:Name="CommonStates">
										<vsm:VisualState x:Name="MouseOver">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.1090000" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Normal">
											<Storyboard d:ShouldSerialize="False"/>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle1" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.2470000" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.985"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.1750000" Value="0.02"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Disabled"/>
									</vsm:VisualStateGroup>
									<vsm:VisualStateGroup x:Name="FocusStates">
										<vsm:VisualState x:Name="Unfocused"/>
										<vsm:VisualState x:Name="Focused"/>
									</vsm:VisualStateGroup>
								</vsm:VisualStateManager.VisualStateGroups>
								<Canvas>
									<Grid Height="35" Width="125">
										<Grid.Effect>
											<BlurEffect Radius="3"/>
										</Grid.Effect>
										<Rectangle x:Name="rectangle2" Fill="#00FFFFFF" Stroke="#00000000" RadiusX="5.167" RadiusY="5.167"/>
										<Rectangle x:Name="rectangle1" Stroke="#00000000" RadiusX="5.167" RadiusY="5.167" Opacity="0">
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFA9A9A9"/>
													<GradientStop Color="#FFFFFFFF" Offset="1"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
										<Rectangle x:Name="rectangle" Stroke="#0041FF00" RadiusX="5.167" RadiusY="5.167" Opacity="0">
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FF21C900"/>
													<GradientStop Color="#FF67C100" Offset="1"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
									</Grid>
								</Canvas>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="SquareButton" TargetType="Button">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Grid>
								<vsm:VisualStateManager.VisualStateGroups>
									<vsm:VisualStateGroup x:Name="CommonStates">
										<vsm:VisualState x:Name="MouseOver">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.1680000" Value="0.5"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle1" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.01"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.1730000" Value="0.429"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Normal"/>
										<vsm:VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.2570000" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle1" Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.1370000" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</vsm:VisualState>
										<vsm:VisualState x:Name="Disabled"/>
									</vsm:VisualStateGroup>
									<vsm:VisualStateGroup x:Name="FocusStates">
										<vsm:VisualState x:Name="Unfocused"/>
										<vsm:VisualState x:Name="Focused"/>
									</vsm:VisualStateGroup>
								</vsm:VisualStateManager.VisualStateGroups>
								<Rectangle Stroke="#FF6C6C6C">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#19000000"/>
											<GradientStop Color="#102E2E2E" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle x:Name="rectangle" Stroke="#FF6C6C6C" Opacity="0">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#52FFFFFF"/>
											<GradientStop Color="#85434343" Offset="1"/>
											<GradientStop Color="#4CF6F6F6" Offset="0.611"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle x:Name="rectangle1" Stroke="#FF6C6C6C" Fill="#FFFFFFFF" Opacity="0"/>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
