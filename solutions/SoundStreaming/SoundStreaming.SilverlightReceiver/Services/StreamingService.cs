//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.4927
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by slsvcutil, version 3.0.40624.0
// 
namespace CloudObserver.Services.StreamingService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StreamingServiceDiagnostics", Namespace="http://schemas.datacontract.org/2004/07/CloudObserver.Services.StreamingService")]
    public partial class StreamingServiceDiagnostics : object
    {
        
        private int bufferLengthField;
        
        private int bufferPositionField;
        
        private int lastReadPositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bufferLength
        {
            get
            {
                return this.bufferLengthField;
            }
            set
            {
                this.bufferLengthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bufferPosition
        {
            get
            {
                return this.bufferPositionField;
            }
            set
            {
                this.bufferPositionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lastReadPosition
        {
            get
            {
                return this.lastReadPositionField;
            }
            set
            {
                this.lastReadPositionField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IStreamingService")]
public interface IStreamingService
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStreamingService/GetDiagnostics", ReplyAction="http://tempuri.org/IStreamingService/GetDiagnosticsResponse")]
    System.IAsyncResult BeginGetDiagnostics(System.AsyncCallback callback, object asyncState);
    
    CloudObserver.Services.StreamingService.StreamingServiceDiagnostics EndGetDiagnostics(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStreamingService/Read", ReplyAction="http://tempuri.org/IStreamingService/ReadResponse")]
    System.IAsyncResult BeginRead(int offset, int count, ref int position, bool synchronize, System.AsyncCallback callback, object asyncState);
    
    int EndRead(out byte[] buffer, ref int position, System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStreamingService/Write", ReplyAction="http://tempuri.org/IStreamingService/WriteResponse")]
    System.IAsyncResult BeginWrite(System.IO.MemoryStream dataStream, System.AsyncCallback callback, object asyncState);
    
    void EndWrite(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStreamingService/Synchronize", ReplyAction="http://tempuri.org/IStreamingService/SynchronizeResponse")]
    System.IAsyncResult BeginSynchronize(System.AsyncCallback callback, object asyncState);
    
    int EndSynchronize(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IStreamingServiceChannel : IStreamingService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetDiagnosticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDiagnosticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public CloudObserver.Services.StreamingService.StreamingServiceDiagnostics Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((CloudObserver.Services.StreamingService.StreamingServiceDiagnostics)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public byte[] buffer
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
    
    public int position
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[2]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class SynchronizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public SynchronizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class StreamingServiceClient : System.ServiceModel.ClientBase<IStreamingService>, IStreamingService
{
    
    private BeginOperationDelegate onBeginGetDiagnosticsDelegate;
    
    private EndOperationDelegate onEndGetDiagnosticsDelegate;
    
    private System.Threading.SendOrPostCallback onGetDiagnosticsCompletedDelegate;
    
    private BeginOperationDelegate onBeginReadDelegate;
    
    private EndOperationDelegate onEndReadDelegate;
    
    private System.Threading.SendOrPostCallback onReadCompletedDelegate;
    
    private BeginOperationDelegate onBeginWriteDelegate;
    
    private EndOperationDelegate onEndWriteDelegate;
    
    private System.Threading.SendOrPostCallback onWriteCompletedDelegate;
    
    private BeginOperationDelegate onBeginSynchronizeDelegate;
    
    private EndOperationDelegate onEndSynchronizeDelegate;
    
    private System.Threading.SendOrPostCallback onSynchronizeCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public StreamingServiceClient()
    {
    }
    
    public StreamingServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public StreamingServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public StreamingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public StreamingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<GetDiagnosticsCompletedEventArgs> GetDiagnosticsCompleted;
    
    public event System.EventHandler<ReadCompletedEventArgs> ReadCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WriteCompleted;
    
    public event System.EventHandler<SynchronizeCompletedEventArgs> SynchronizeCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStreamingService.BeginGetDiagnostics(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDiagnostics(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    CloudObserver.Services.StreamingService.StreamingServiceDiagnostics IStreamingService.EndGetDiagnostics(System.IAsyncResult result)
    {
        return base.Channel.EndGetDiagnostics(result);
    }
    
    private System.IAsyncResult OnBeginGetDiagnostics(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IStreamingService)(this)).BeginGetDiagnostics(callback, asyncState);
    }
    
    private object[] OnEndGetDiagnostics(System.IAsyncResult result)
    {
        CloudObserver.Services.StreamingService.StreamingServiceDiagnostics retVal = ((IStreamingService)(this)).EndGetDiagnostics(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDiagnosticsCompleted(object state)
    {
        if ((this.GetDiagnosticsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDiagnosticsCompleted(this, new GetDiagnosticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDiagnosticsAsync()
    {
        this.GetDiagnosticsAsync(null);
    }
    
    public void GetDiagnosticsAsync(object userState)
    {
        if ((this.onBeginGetDiagnosticsDelegate == null))
        {
            this.onBeginGetDiagnosticsDelegate = new BeginOperationDelegate(this.OnBeginGetDiagnostics);
        }
        if ((this.onEndGetDiagnosticsDelegate == null))
        {
            this.onEndGetDiagnosticsDelegate = new EndOperationDelegate(this.OnEndGetDiagnostics);
        }
        if ((this.onGetDiagnosticsCompletedDelegate == null))
        {
            this.onGetDiagnosticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDiagnosticsCompleted);
        }
        base.InvokeAsync(this.onBeginGetDiagnosticsDelegate, null, this.onEndGetDiagnosticsDelegate, this.onGetDiagnosticsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStreamingService.BeginRead(int offset, int count, ref int position, bool synchronize, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginRead(offset, count, ref position, synchronize, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    int IStreamingService.EndRead(out byte[] buffer, ref int position, System.IAsyncResult result)
    {
        return base.Channel.EndRead(out buffer, ref position, result);
    }
    
    private System.IAsyncResult OnBeginRead(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int offset = ((int)(inValues[0]));
        int count = ((int)(inValues[1]));
        int position = ((int)(inValues[2]));
        bool synchronize = ((bool)(inValues[3]));
        return ((IStreamingService)(this)).BeginRead(offset, count, ref position, synchronize, callback, asyncState);
    }
    
    private object[] OnEndRead(System.IAsyncResult result)
    {
        byte[] buffer = this.GetDefaultValueForInitialization<byte[]>();
        int position = this.GetDefaultValueForInitialization<int>();
        int retVal = ((IStreamingService)(this)).EndRead(out buffer, ref position, result);
        return new object[] {
                buffer,
                position,
                retVal};
    }
    
    private void OnReadCompleted(object state)
    {
        if ((this.ReadCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReadCompleted(this, new ReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ReadAsync(int offset, int count, int position, bool synchronize)
    {
        this.ReadAsync(offset, count, position, synchronize, null);
    }
    
    public void ReadAsync(int offset, int count, int position, bool synchronize, object userState)
    {
        if ((this.onBeginReadDelegate == null))
        {
            this.onBeginReadDelegate = new BeginOperationDelegate(this.OnBeginRead);
        }
        if ((this.onEndReadDelegate == null))
        {
            this.onEndReadDelegate = new EndOperationDelegate(this.OnEndRead);
        }
        if ((this.onReadCompletedDelegate == null))
        {
            this.onReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadCompleted);
        }
        base.InvokeAsync(this.onBeginReadDelegate, new object[] {
                    offset,
                    count,
                    position,
                    synchronize}, this.onEndReadDelegate, this.onReadCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStreamingService.BeginWrite(System.IO.MemoryStream dataStream, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginWrite(dataStream, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IStreamingService.EndWrite(System.IAsyncResult result)
    {
        base.Channel.EndWrite(result);
    }
    
    private System.IAsyncResult OnBeginWrite(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.IO.MemoryStream dataStream = ((System.IO.MemoryStream)(inValues[0]));
        return ((IStreamingService)(this)).BeginWrite(dataStream, callback, asyncState);
    }
    
    private object[] OnEndWrite(System.IAsyncResult result)
    {
        ((IStreamingService)(this)).EndWrite(result);
        return null;
    }
    
    private void OnWriteCompleted(object state)
    {
        if ((this.WriteCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.WriteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void WriteAsync(System.IO.MemoryStream dataStream)
    {
        this.WriteAsync(dataStream, null);
    }
    
    public void WriteAsync(System.IO.MemoryStream dataStream, object userState)
    {
        if ((this.onBeginWriteDelegate == null))
        {
            this.onBeginWriteDelegate = new BeginOperationDelegate(this.OnBeginWrite);
        }
        if ((this.onEndWriteDelegate == null))
        {
            this.onEndWriteDelegate = new EndOperationDelegate(this.OnEndWrite);
        }
        if ((this.onWriteCompletedDelegate == null))
        {
            this.onWriteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWriteCompleted);
        }
        base.InvokeAsync(this.onBeginWriteDelegate, new object[] {
                    dataStream}, this.onEndWriteDelegate, this.onWriteCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStreamingService.BeginSynchronize(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSynchronize(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    int IStreamingService.EndSynchronize(System.IAsyncResult result)
    {
        return base.Channel.EndSynchronize(result);
    }
    
    private System.IAsyncResult OnBeginSynchronize(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IStreamingService)(this)).BeginSynchronize(callback, asyncState);
    }
    
    private object[] OnEndSynchronize(System.IAsyncResult result)
    {
        int retVal = ((IStreamingService)(this)).EndSynchronize(result);
        return new object[] {
                retVal};
    }
    
    private void OnSynchronizeCompleted(object state)
    {
        if ((this.SynchronizeCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SynchronizeCompleted(this, new SynchronizeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SynchronizeAsync()
    {
        this.SynchronizeAsync(null);
    }
    
    public void SynchronizeAsync(object userState)
    {
        if ((this.onBeginSynchronizeDelegate == null))
        {
            this.onBeginSynchronizeDelegate = new BeginOperationDelegate(this.OnBeginSynchronize);
        }
        if ((this.onEndSynchronizeDelegate == null))
        {
            this.onEndSynchronizeDelegate = new EndOperationDelegate(this.OnEndSynchronize);
        }
        if ((this.onSynchronizeCompletedDelegate == null))
        {
            this.onSynchronizeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSynchronizeCompleted);
        }
        base.InvokeAsync(this.onBeginSynchronizeDelegate, null, this.onEndSynchronizeDelegate, this.onSynchronizeCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IStreamingService CreateChannel()
    {
        return new StreamingServiceClientChannel(this);
    }
    
    private class StreamingServiceClientChannel : ChannelBase<IStreamingService>, IStreamingService
    {
        
        public StreamingServiceClientChannel(System.ServiceModel.ClientBase<IStreamingService> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginGetDiagnostics(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetDiagnostics", _args, callback, asyncState);
            return _result;
        }
        
        public CloudObserver.Services.StreamingService.StreamingServiceDiagnostics EndGetDiagnostics(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            CloudObserver.Services.StreamingService.StreamingServiceDiagnostics _result = ((CloudObserver.Services.StreamingService.StreamingServiceDiagnostics)(base.EndInvoke("GetDiagnostics", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginRead(int offset, int count, ref int position, bool synchronize, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[4];
            _args[0] = offset;
            _args[1] = count;
            _args[2] = position;
            _args[3] = synchronize;
            System.IAsyncResult _result = base.BeginInvoke("Read", _args, callback, asyncState);
            position = ((int)(_args[2]));
            return _result;
        }
        
        public int EndRead(out byte[] buffer, ref int position, System.IAsyncResult result)
        {
            object[] _args = new object[2];
            _args[1] = position;
            int _result = ((int)(base.EndInvoke("Read", _args, result)));
            buffer = ((byte[])(_args[0]));
            position = ((int)(_args[1]));
            return _result;
        }
        
        public System.IAsyncResult BeginWrite(System.IO.MemoryStream dataStream, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = dataStream;
            System.IAsyncResult _result = base.BeginInvoke("Write", _args, callback, asyncState);
            return _result;
        }
        
        public void EndWrite(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("Write", _args, result);
        }
        
        public System.IAsyncResult BeginSynchronize(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("Synchronize", _args, callback, asyncState);
            return _result;
        }
        
        public int EndSynchronize(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            int _result = ((int)(base.EndInvoke("Synchronize", _args, result)));
            return _result;
        }
    }
}
